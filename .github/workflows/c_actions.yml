# Copyright (c) 2020 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: C Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout SupportScripts
      uses: actions/checkout@v4
      with:
        repository: SpiNNakerManchester/SupportScripts
        path: support

    - name: Set up Python 3.12
      # Note: Python is needed for spinn_utilities.make_tools when building
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: "Prepare: Install SpiNNUtils"
      uses: ./support/actions/install-spinn-deps
      with:
        # Note: SpiNNUtils needed for spinn_utilities.make_tools
        repositories: SpiNNUtils
        install: true

    - name: Install Ubuntu dependencies
      uses: ./support/actions/apt-get-install
      with:
        packages: doxygen gcc-arm-none-eabi

    - name: Set environment variables
      run: |
        echo "SPINN_DIRS=$PWD/spinnaker_tools" >> $GITHUB_ENV
        echo "NEURAL_MODELLING_DIRS=$PWD/neural_modelling" >> $GITHUB_ENV
        echo "C_LOGS_DICT=$PWD/logs.sqlite3" >> $GITHUB_ENV

    - name: Checkout SpiNNaker C Dependencies
      uses: ./support/actions/install-spinn-deps
      with:
        # Note: SpiNNUtils needed for spinn_utilities.make_tools
        repositories: spinnaker_tools spinn_common SpiNNFrontEndCommon
        install: false

    - name: Lint C code using Vera++
      uses: ./support/actions/vera
      with:
        base-dir: neural_modelling/src

    - name: Build C dependencies
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install

    - name: "Check: Build FEC C code"
      run: make
      working-directory: SpiNNFrontEndCommon/c_common
      env:
        CFLAGS: -fdiagnostics-color=always

    - name: Build PYNN C code
      run: make
      working-directory: neural_modelling
      env:
        CFLAGS: -fdiagnostics-color=always

    - name: Build C code in DEBUG mode
      run: make clean; make SPYNNAKER_DEBUG=DEBUG
      working-directory: neural_modelling
      env:
        CFLAGS: -fdiagnostics-color=always

    - name: Build documentation using doxygen
      run: make doxysetup doxygen
      working-directory: neural_modelling

    - name: Upload Fec binaries
      uses: actions/upload-artifact@v4
      with:
        name: fec_binaries
        path: SpiNNFrontEndCommon/spinn_front_end_common/common_model_binaries/*.aplx

    - name: Upload PyNN binaries
      uses: actions/upload-artifact@v4
      with:
        name: pynn_binaries
        path: spynnaker/pyNN/model_binaries/*.aplx

    - name: Upload log.sqlite3s
      uses: actions/upload-artifact@v4
      with:
        name: logs.sqlite3
        path: logs.sqlite3

  test:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Set environment variables
      run: |
        echo "EXTERNAL_BINARIES=$PWD/external_binaries" >> $GITHUB_ENV
      # echo "C_LOGS_DICT=$PWD/logs.sqlite3" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout SupportScripts
      uses: actions/checkout@v4
      with:
        repository: SpiNNakerManchester/SupportScripts
        path: support

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Spinnaker Dependencies
      uses: ./support/actions/install-spinn-deps
      with:
        repositories: >
          SpiNNUtils SpiNNMachine SpiNNMan PACMAN spalloc
          SpiNNFrontEndCommon TestBase
        install: true

    - name: Download Fec binaries
      uses: actions/download-artifact@v4
      with:
        name: fec_binaries
        # Need to go into spynnaker as FEC will have been moved by install
        path: external_binaries

    - name: Download PyNN Binaries
      uses: actions/download-artifact@v4
      with:
        name: pynn_binaries
        path: external_binaries

    - name: Download logs.sqlite3
      uses: actions/download-artifact@v4
      with:
        name: logs.sqlite3
        path: external_binaries

    - name:  EXTERNAL_BINARIES
      run: |
        echo $EXTERNAL_BINARIES
        ls -al $EXTERNAL_BINARIES

    - name: Setup
      uses: ./support/actions/run-install

    - name: Setup PyNN
      uses: ./support/actions/pynn-setup

    - name: Create cfg
      run: | 
        echo '[Machine]' >> ~/.spynnaker.cfg
        echo 'spalloc_server = https://spinnaker.cs.man.ac.uk/spalloc/' >> ~/.spynnaker.cfg
        echo 'spalloc_port = 22244' >> ~/.spynnaker.cfg

    - name: Install pip, etc
      uses: ./support/actions/python-tools

    - name: Install Ubuntu dependencies
      uses: ./support/actions/apt-get-install
      with:
        packages: graphviz

    - name: Install matplotlib
      uses: ./support/actions/install-matplotlib

    - name:  EXTERNAL_BINARIES
      run: |
        echo $EXTERNAL_BINARIES
        ls -al $EXTERNAL_BINARIES

    - name: Test with pytest and proxy
      env:
        SPALLOC_USER: ${{ secrets.SPALLOC_USER }}
        SPALLOC_PASSWORD: ${{ secrets.SPALLOC_PASSWORD }}
      run: pytest proxy_integration_tests
