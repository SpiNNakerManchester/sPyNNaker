Search.setIndex({"docnames": ["index", "modules", "spynnaker", "spynnaker.pyNN", "spynnaker.pyNN.connections", "spynnaker.pyNN.data", "spynnaker.pyNN.external_devices", "spynnaker.pyNN.external_devices_models", "spynnaker.pyNN.external_devices_models.push_bot", "spynnaker.pyNN.external_devices_models.push_bot.control", "spynnaker.pyNN.external_devices_models.push_bot.ethernet", "spynnaker.pyNN.external_devices_models.push_bot.parameters", "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link", "spynnaker.pyNN.extra_algorithms", "spynnaker.pyNN.extra_algorithms.splitter_components", "spynnaker.pyNN.extra_models", "spynnaker.pyNN.model_binaries", "spynnaker.pyNN.models", "spynnaker.pyNN.models.abstract_models", "spynnaker.pyNN.models.common", "spynnaker.pyNN.models.current_sources", "spynnaker.pyNN.models.neural_projections", "spynnaker.pyNN.models.neural_projections.connectors", "spynnaker.pyNN.models.neural_properties", "spynnaker.pyNN.models.neuron", "spynnaker.pyNN.models.neuron.additional_inputs", "spynnaker.pyNN.models.neuron.builds", "spynnaker.pyNN.models.neuron.implementations", "spynnaker.pyNN.models.neuron.input_types", "spynnaker.pyNN.models.neuron.local_only", "spynnaker.pyNN.models.neuron.neuron_models", "spynnaker.pyNN.models.neuron.plasticity", "spynnaker.pyNN.models.neuron.plasticity.stdp", "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure", "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence", "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence", "spynnaker.pyNN.models.neuron.structural_plasticity", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection", "spynnaker.pyNN.models.neuron.synapse_dynamics", "spynnaker.pyNN.models.neuron.synapse_types", "spynnaker.pyNN.models.neuron.threshold_types", "spynnaker.pyNN.models.populations", "spynnaker.pyNN.models.spike_source", "spynnaker.pyNN.models.utility_models", "spynnaker.pyNN.models.utility_models.delays", "spynnaker.pyNN.models.utility_models.spike_injector", "spynnaker.pyNN.protocols", "spynnaker.pyNN.utilities", "spynnaker.pyNN.utilities.random_stats", "spynnaker.pyNN.utilities.ranged"], "filenames": ["index.rst", "modules.rst", "spynnaker.rst", "spynnaker.pyNN.rst", "spynnaker.pyNN.connections.rst", "spynnaker.pyNN.data.rst", "spynnaker.pyNN.external_devices.rst", "spynnaker.pyNN.external_devices_models.rst", "spynnaker.pyNN.external_devices_models.push_bot.rst", "spynnaker.pyNN.external_devices_models.push_bot.control.rst", "spynnaker.pyNN.external_devices_models.push_bot.ethernet.rst", "spynnaker.pyNN.external_devices_models.push_bot.parameters.rst", "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.rst", "spynnaker.pyNN.extra_algorithms.rst", "spynnaker.pyNN.extra_algorithms.splitter_components.rst", "spynnaker.pyNN.extra_models.rst", "spynnaker.pyNN.model_binaries.rst", "spynnaker.pyNN.models.rst", "spynnaker.pyNN.models.abstract_models.rst", "spynnaker.pyNN.models.common.rst", "spynnaker.pyNN.models.current_sources.rst", "spynnaker.pyNN.models.neural_projections.rst", "spynnaker.pyNN.models.neural_projections.connectors.rst", "spynnaker.pyNN.models.neural_properties.rst", "spynnaker.pyNN.models.neuron.rst", "spynnaker.pyNN.models.neuron.additional_inputs.rst", "spynnaker.pyNN.models.neuron.builds.rst", "spynnaker.pyNN.models.neuron.implementations.rst", "spynnaker.pyNN.models.neuron.input_types.rst", "spynnaker.pyNN.models.neuron.local_only.rst", "spynnaker.pyNN.models.neuron.neuron_models.rst", "spynnaker.pyNN.models.neuron.plasticity.rst", "spynnaker.pyNN.models.neuron.plasticity.stdp.rst", "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.rst", "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.rst", "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.rst", "spynnaker.pyNN.models.neuron.structural_plasticity.rst", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.rst", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.rst", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.rst", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.rst", "spynnaker.pyNN.models.neuron.synapse_dynamics.rst", "spynnaker.pyNN.models.neuron.synapse_types.rst", "spynnaker.pyNN.models.neuron.threshold_types.rst", "spynnaker.pyNN.models.populations.rst", "spynnaker.pyNN.models.spike_source.rst", "spynnaker.pyNN.models.utility_models.rst", "spynnaker.pyNN.models.utility_models.delays.rst", "spynnaker.pyNN.models.utility_models.spike_injector.rst", "spynnaker.pyNN.protocols.rst", "spynnaker.pyNN.utilities.rst", "spynnaker.pyNN.utilities.random_stats.rst", "spynnaker.pyNN.utilities.ranged.rst"], "titles": ["sPyNNaker", "spynnaker", "spynnaker package", "spynnaker.pyNN package", "spynnaker.pyNN.connections package", "spynnaker.pyNN.data package", "spynnaker.pyNN.external_devices package", "spynnaker.pyNN.external_devices_models package", "spynnaker.pyNN.external_devices_models.push_bot package", "spynnaker.pyNN.external_devices_models.push_bot.control package", "spynnaker.pyNN.external_devices_models.push_bot.ethernet package", "spynnaker.pyNN.external_devices_models.push_bot.parameters package", "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link package", "spynnaker.pyNN.extra_algorithms package", "spynnaker.pyNN.extra_algorithms.splitter_components package", "spynnaker.pyNN.extra_models package", "spynnaker.pyNN.model_binaries package", "spynnaker.pyNN.models package", "spynnaker.pyNN.models.abstract_models package", "spynnaker.pyNN.models.common package", "spynnaker.pyNN.models.current_sources package", "spynnaker.pyNN.models.neural_projections package", "spynnaker.pyNN.models.neural_projections.connectors package", "spynnaker.pyNN.models.neural_properties package", "spynnaker.pyNN.models.neuron package", "spynnaker.pyNN.models.neuron.additional_inputs package", "spynnaker.pyNN.models.neuron.builds package", "spynnaker.pyNN.models.neuron.implementations package", "spynnaker.pyNN.models.neuron.input_types package", "spynnaker.pyNN.models.neuron.local_only package", "spynnaker.pyNN.models.neuron.neuron_models package", "spynnaker.pyNN.models.neuron.plasticity package", "spynnaker.pyNN.models.neuron.plasticity.stdp package", "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure package", "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence package", "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence package", "spynnaker.pyNN.models.neuron.structural_plasticity package", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis package", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination package", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation package", "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection package", "spynnaker.pyNN.models.neuron.synapse_dynamics package", "spynnaker.pyNN.models.neuron.synapse_types package", "spynnaker.pyNN.models.neuron.threshold_types package", "spynnaker.pyNN.models.populations package", "spynnaker.pyNN.models.spike_source package", "spynnaker.pyNN.models.utility_models package", "spynnaker.pyNN.models.utility_models.delays package", "spynnaker.pyNN.models.utility_models.spike_injector package", "spynnaker.pyNN.protocols package", "spynnaker.pyNN.utilities package", "spynnaker.pyNN.utilities.random_stats package", "spynnaker.pyNN.utilities.ranged package"], "terms": {"These": [0, 3, 17, 44, 50], "page": 0, "document": [0, 3, 22], "python": [0, 3, 16, 22, 24], "code": [0, 3, 16, 19, 24, 45, 48, 50], "modul": [0, 1], "which": [0, 3, 4, 6, 7, 10, 12, 14, 17, 18, 21, 22, 24, 41, 44, 45, 48, 50, 52], "i": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 34, 35, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52], "part": [0, 3, 24, 27, 34, 41, 50], "spinnak": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 17, 20, 21, 22, 24, 44, 47, 49, 50], "project": [0, 2, 3, 5, 13, 14, 18, 21, 22, 24, 29, 41, 44, 45, 50], "thi": [0, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52], "depend": [0, 3, 6, 7, 15, 21, 22, 26, 34, 35, 38, 39, 41], "spinnutil": 0, "spinnmachin": 0, "spinnman": [0, 10], "pacman": [0, 14], "dataspecif": 0, "spinnfrontendcommon": 0, "combined_document": 0, "content": [0, 1], "packag": [0, 1], "subpackag": [0, 1], "pynn": [0, 1, 2], "submodul": [0, 1, 31, 46], "gsyn_tool": [0, 1], "check_gsyn": [0, 1, 2], "check_path_gysn": [0, 1, 2], "check_sister_gysn": [0, 1, 2], "plot_util": [0, 1], "heat_plot": [0, 1, 2], "line_plot": [0, 1, 2], "plot_spik": [0, 1, 2], "spike_check": [0, 1], "synfire_multiple_lines_spike_check": [0, 1, 2], "synfire_spike_check": [0, 1, 2], "spynnaker_plot": [0, 1], "spynnakerpanel": [0, 1, 2], "heat_plot_neo": [0, 1, 2], "heat_plot_numpi": [0, 1, 2], "plot_seg": [0, 1, 2], "plot_spikes_numpi": [0, 1, 2], "plot_spiketrain": [0, 1, 2], "index": [0, 3, 6, 7, 14, 17, 19, 22, 24, 27, 33, 41, 44, 50], "search": [0, 3, 24], "abstract_spinnaker_common": [1, 2], "config_setup": [1, 2], "except": [1, 2, 5, 14, 22, 41, 44, 50, 52], "setup_pynn": [1, 2], "spynnaker_external_device_plugin_manag": [1, 2], "plot": [1, 2], "connect": [2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 21, 22, 24, 29, 33, 38, 39, 41, 44, 47, 50], "data": [2, 3, 6, 7, 10, 13, 14, 17, 18, 19, 21, 22, 23, 24, 27, 41, 44, 45, 47, 48, 50], "spynnaker_data_writ": [2, 3], "external_devic": [2, 3], "external_devices_model": [2, 3], "external_device_lif_control_vertex": [2, 3], "spif_devic": [2, 3], "extra_algorithm": [2, 3], "extra_model": [2, 3], "model_binari": [2, 3], "model": [2, 3, 5, 6, 7, 9, 14, 15], "abstract_pynn_model": [2, 3], "default": [2, 3, 4, 6, 7, 9, 10, 14, 19, 20, 22, 24, 41, 44, 45, 48, 50], "record": [2, 3, 5, 6, 7, 14, 19, 24, 27, 41, 44, 45, 48, 50], "protocol": [2, 3, 6, 8, 9, 10, 12], "util": [2, 3, 18], "bit_field_util": [2, 3, 18], "buffer_data_typ": [2, 3], "constant": [2, 3, 22], "data_popul": [2, 3], "extracted_data": [2, 3], "fake_hbp_portal_machine_provid": [2, 3], "neo_buffer_databas": [2, 3], "neo_compar": [2, 3], "neo_convertor": [2, 3], "neo_csv": [2, 3], "running_stat": [2, 3], "struct": [2, 3, 24, 25, 27, 28, 42, 43], "utility_cal": [2, 3], "abstractspinnakercommon": [2, 3], "register_binary_search_path": [2, 3], "add_spynnaker_cfg": [2, 3], "setup_config": [2, 3], "unittest_setup": [2, 3], "delayextensionexcept": [2, 3], "filterableexcept": [2, 3], "invalidparametertyp": [2, 3], "memreadexcept": [2, 3], "spynnakerexcept": [2, 3, 22], "spynnakersplitterconfigurationexcept": [2, 3], "synapserowtoobigexcept": [2, 3, 24], "max_siz": [2, 3], "synapticblockgenerationexcept": [2, 3], "synapticblockreadexcept": [2, 3], "synapticconfigurationexcept": [2, 3, 24], "synapticmaxincomingatomssupportexcept": [2, 3], "install_spynnaker_into": [2, 3], "version_satisfi": [2, 3], "spynnakerexternaldevicepluginmanag": [2, 3], "activate_live_output_for": [2, 3, 6], "activate_live_output_to": [2, 3, 6], "add_application_vertex": [2, 3], "add_database_socket_address": [2, 3], "add_edg": [2, 3], "add_poisson_live_rate_control": [2, 3, 6], "update_live_packet_gather_track": [2, 3], "gsyn1": 2, "gsyn2": 2, "sourc": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52], "compar": [2, 50], "two": [2, 3, 6, 7, 11, 17, 22, 26, 41, 42, 50], "arrai": [2, 3, 4, 6, 17, 19, 20, 22, 23, 24, 41, 42, 44, 45, 48, 50], "conduct": [2, 3, 19, 24, 26, 27, 28, 44], "For": [2, 3, 17, 19, 22, 24, 44, 45, 48, 50], "test": [2, 3], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52], "an": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 35, 38, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52], "rais": [2, 3, 5, 10, 14, 17, 18, 19, 22, 24, 41, 44, 45, 48, 50, 52], "valueerror": 2, "If": [2, 3, 5, 6, 7, 10, 14, 17, 19, 22, 24, 27, 41, 44, 45, 47, 48, 50], "differ": [2, 3, 14, 17, 18, 23, 24, 41, 44, 45, 48, 50], "path": [2, 3, 50], "n_neuron": [2, 3, 6, 7, 12, 15, 17, 19, 24, 41, 45, 48, 49], "runtim": 2, "gsyn": [2, 3], "baselin": 2, "from": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 40, 41, 44, 45, 47, 48, 50], "file": [2, 3, 6, 17, 22, 24, 44, 45, 50], "A": [2, 3, 4, 6, 7, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52], "number": [2, 3, 4, 5, 6, 7, 10, 12, 14, 15, 17, 18, 19, 21, 22, 24, 27, 29, 33, 34, 35, 41, 42, 44, 45, 47, 48, 50, 52], "neuron": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 44, 45, 47, 48, 50], "produc": [2, 13, 23], "length": [2, 3, 22, 24, 41, 50, 52], "time": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 19, 20, 24, 34, 41, 44, 45, 48, 49, 50], "gener": [2, 3, 5, 7, 13, 15, 18, 19, 21, 22, 23, 24, 26, 39, 41, 44, 45, 47, 48, 50], "repres": [2, 3, 21, 24, 25, 27, 28, 42, 43, 50], "sister": 2, "next": [2, 3, 24], "specifi": [2, 3, 5, 6, 7, 17, 20, 22, 24, 41, 44, 45, 48, 50], "read": [2, 3, 5, 6, 10, 17, 18, 19, 22, 24, 41, 44, 45, 50], "adjac": [2, 27], "data_set": 2, "ylabel": 2, "none": [2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 19, 20, 21, 22, 24, 26, 27, 41, 44, 45, 47, 48, 49, 50, 51, 52], "titl": 2, "build": [2, 3, 17, 24], "heatmap": 2, "ndarrai": [2, 3, 19, 21, 22, 23, 24, 32, 39, 41, 44, 45, 48, 50], "list": [2, 3, 4, 5, 6, 7, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 39, 41, 42, 43, 44, 45, 47, 48, 50, 52], "numpi": [2, 3, 17, 19, 22, 24, 44, 45, 48, 50], "str": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50], "label": [2, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 19, 21, 24, 44, 45, 47, 48, 50], "y": [2, 3, 6, 7, 15, 20, 24, 26, 39, 44, 45, 47], "axi": 2, "line": [2, 3, 22, 50], "spike": [2, 3, 4, 6, 7, 10, 14, 15, 17, 18, 19, 21, 22, 24, 26, 29, 34, 40, 41, 44, 45, 47, 48, 50], "nneuron": 2, "wrap_around": 2, "true": [2, 3, 4, 6, 7, 10, 14, 17, 18, 21, 22, 24, 34, 41, 44, 45, 48, 49, 50, 52], "check": [2, 3, 14, 17, 18, 19, 21, 22, 41, 50, 52], "ar": [2, 3, 4, 6, 7, 9, 13, 14, 17, 18, 19, 21, 22, 24, 27, 41, 44, 45, 48, 50, 51], "expect": [2, 3, 5, 6, 7, 18, 24, 34, 41, 44, 45], "int": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 52], "bool": [2, 3, 4, 5, 6, 7, 10, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 29, 34, 35, 41, 44, 45, 48, 50, 52], "wrap": [2, 50], "around": [2, 3, 22, 41], "when": [2, 3, 4, 6, 7, 8, 10, 12, 17, 19, 22, 24, 41, 44, 49, 50], "reach": [2, 4, 6], "last": [2, 3, 5, 17, 19, 24, 40, 44], "problem": 2, "tool": [2, 26], "us": [2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52], "togeth": [2, 3, 17, 24, 44, 45, 48, 50], "http": [2, 3, 6, 22, 26, 44, 50], "github": [2, 3, 6, 22], "com": [2, 3, 22, 50], "neuralensembl": [2, 3, 44, 50], "blob": 2, "master": [2, 3, 24, 44, 50], "py": 2, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52], "option": [2, 3, 4, 6, 7, 17, 19, 22, 44, 45, 49], "base": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52], "object": [2, 3, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52], "singl": [2, 3, 4, 5, 6, 14, 17, 19, 22, 24, 26, 41, 44, 50], "panel": 2, "multi": 2, "figur": [2, 13], "compat": [2, 3, 22], "frame": 2, "can": [2, 3, 4, 5, 6, 7, 14, 17, 18, 19, 22, 24, 27, 29, 41, 44, 45, 48, 52], "mix": [2, 24], "unlik": 2, "faster": 2, "other": [2, 3, 5, 22, 24, 41, 52], "matplotlib": 2, "ax": [2, 3], "subplot": 2, "instanc": [2, 3, 4, 6, 7, 10, 12, 18, 19, 22, 24, 41, 44, 45, 48, 49, 50], "item": [2, 3, 7, 17, 19, 21, 22, 24, 41, 45, 47, 50], "mai": [2, 3, 5, 6, 11, 17, 18, 19, 21, 22, 24, 44, 45, 48, 50], "analogsign": [2, 50], "spiketrain": [2, 50], "": [2, 3, 14, 15, 18, 22, 24, 26, 43, 44, 50], "automat": [2, 3, 6, 17, 22, 44, 45, 48], "choos": 2, "appropri": [2, 7, 10, 24], "represent": [2, 24], "multipl": [2, 3, 4, 5, 6, 7, 17, 19, 22, 24, 26, 27, 35, 41, 42, 44, 45, 47], "same": [2, 3, 14, 15, 17, 18, 19, 22, 24, 34, 35, 41, 44, 50], "valid": [2, 3, 22, 50], "ani": [2, 3, 6, 7, 9, 10, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 41, 44, 45, 47, 48, 49, 50], "format": [2, 3, 6, 10, 17, 18, 19, 22, 24, 36, 37, 41, 44, 50], "should": [2, 3, 4, 5, 6, 7, 10, 14, 17, 18, 19, 20, 22, 24, 33, 41, 44, 45, 48, 50, 52], "appli": [2, 3, 6, 15, 18, 22, 24, 29, 34, 35, 41, 45, 48], "plu": 2, "addit": [2, 3, 6, 7, 9, 15, 17, 24, 25, 26, 35, 41, 44, 50], "data_label": 2, "string": [2, 3, 10, 18, 21, 42, 44, 45, 50], "line_properti": 2, "dict": [2, 3, 6, 7, 10, 13, 17, 20, 24, 25, 27, 28, 41, 42, 43, 44, 45, 50, 52], "contain": [2, 3, 4, 6, 16, 17, 18, 21, 22, 24, 44, 45, 48, 50], "whole": [2, 6, 7, 19, 24, 27, 45, 50], "neo": [2, 3, 17, 44, 50], "pass": [2, 3, 17, 18, 24, 44], "long": [2, 24, 50], "thei": [2, 3, 6, 7, 14, 17, 19, 21, 27, 44, 50], "segment": [2, 5, 50], "run": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 17, 18, 20, 21, 24, 29, 41, 44, 45, 47, 50], "onli": [2, 3, 5, 6, 7, 14, 17, 22, 24, 29, 41, 44, 45, 47, 48, 50, 52], "one": [2, 3, 4, 6, 7, 10, 14, 17, 18, 22, 24, 26, 41, 44, 45, 48, 50], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50], "block": [2, 3, 10, 17, 22, 24, 44, 50], "One": [2, 50], "more": [2, 3, 5, 6, 7, 14, 24, 44, 50], "seri": [2, 24, 50], "inform": [2, 3, 7, 19, 21, 22, 24, 41, 50], "provid": [2, 3, 6, 7, 14, 19, 21, 22, 23, 24, 47, 49], "signal_arrai": [2, 50], "valu": [2, 3, 5, 6, 7, 8, 10, 11, 12, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52], "signal": [2, 50], "graph": [2, 3, 6, 13, 17, 41], "nparrai": 2, "spynnaker7": [2, 50], "than": [2, 3, 5, 6, 14, 19, 44], "od": 2, "must": [2, 3, 4, 6, 7, 10, 14, 17, 18, 19, 22, 24, 29, 41, 44, 50, 52], "includ": [2, 3, 15, 17, 21, 22, 24, 27, 34, 35, 41, 50], "name": [2, 3, 4, 5, 6, 7, 9, 15, 17, 18, 19, 22, 24, 26, 27, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50], "method": [2, 3, 5, 6, 10, 12, 14, 17, 18, 19, 22, 24, 44, 45, 48, 50, 52], "signatur": [2, 44], "defin": [2, 3, 7, 10, 14, 41, 44, 50], "allow": [2, 3, 13, 14, 21, 22, 24, 41, 48, 50], "all": [2, 3, 5, 6, 8, 13, 14, 17, 18, 19, 21, 22, 24, 27, 40, 41, 44, 45, 48, 50, 52], "spynakker7": 2, "train": [2, 50], "raster": [2, 19, 24, 45, 48], "spiketim": 2, "ethernetcommandconnect": [3, 4], "add_command_contain": [3, 4], "ethernetcontrolconnect": [3, 4], "add_transl": [3, 4], "spiflivespikesconnect": [3, 4, 6], "add_init_callback": [3, 4, 6], "add_pause_stop_callback": [3, 4, 6], "add_receive_callback": [3, 4, 6], "add_receive_label": [3, 4, 6], "add_start_resume_callback": [3, 4, 6], "spynnakerlivespikesconnect": [3, 4, 6, 7, 10], "send_spik": [3, 4, 6], "spynnakerpoissoncontrolconnect": [3, 4, 6], "add_poisson_label": [3, 4, 6], "add_start_callback": [3, 4, 6], "set_rat": [3, 4, 6], "spynnakerdatawrit": [3, 5], "set_up_timings_and_delai": [3, 5], "shut_down": [3, 5], "spynnakerdataview": [3, 5, 19, 24, 45, 48, 50], "add_popul": [3, 5], "add_project": [3, 5], "get_min_delai": [3, 5], "get_n_popul": [3, 5], "get_n_project": [3, 5], "get_segment_count": [3, 5], "get_sim_nam": [3, 5], "has_min_delai": [3, 5], "iterate_popul": [3, 5], "iterate_project": [3, 5], "set_number_of_neurons_per_dimension_per_cor": [3, 5], "push_bot": [3, 6, 7, 49], "externaldevicelifcontrolvertex": [3, 7], "dependent_vertic": [3, 6, 7], "edge_partition_identifiers_for_dependent_vertex": [3, 6, 7], "get_atom_key_map": [3, 7, 17, 19], "get_external_devic": [3, 7], "get_fixed_key_and_mask": [3, 6, 7], "get_message_transl": [3, 7], "get_outgoing_partition_id": [3, 7], "n_field": [3, 7], "n_filter": [3, 7, 50], "n_input": [3, 7], "n_pipe": [3, 7], "spifregist": [3, 7], "config_pkt_cnt": [3, 7], "dropped_pkt_cnt": [3, 7], "fl_mask_bas": [3, 7], "fl_value_bas": [3, 7], "in_periph_pkt_cnt": [3, 7], "ir_key_bas": [3, 7], "ir_mask_bas": [3, 7], "ir_route_bas": [3, 7], "mp_fld_limit_bas": [3, 7], "mp_fld_mask_bas": [3, 7], "mp_fld_shift_bas": [3, 7], "mp_key_bas": [3, 7], "out_periph_pkt_cnt": [3, 7], "reply_kei": [3, 7], "cmd": [3, 7], "spif_fpga_id": [3, 7], "spif_input_fpga_link": [3, 7], "spif_output_fpga_link": [3, 7], "spinnfpgaregist": [3, 7], "lc_kei": [3, 7], "lc_mask": [3, 7], "p_kei": [3, 7], "p_mask": [3, 7], "rc_kei": [3, 7], "rc_mask": [3, 7], "start": [3, 4, 6, 7, 8, 10, 12, 15, 18, 20, 21, 22, 23, 24, 41, 45, 47, 50], "stop": [3, 4, 6, 7, 8, 10, 19, 20, 24, 45, 48], "delayed_command": [3, 7], "set_field_limit": [3, 7], "set_field_mask": [3, 7], "set_field_shift": [3, 7], "set_filter_mask": [3, 7], "set_filter_valu": [3, 7], "set_input_kei": [3, 7], "set_input_mask": [3, 7], "set_input_rout": [3, 7], "set_mapper_kei": [3, 7], "abstractethernetcontrol": [3, 7], "abstractethernetsensor": [3, 6, 7, 10], "get_database_connect": [3, 6, 7, 8, 10], "get_injector_label": [3, 6, 7, 8, 10], "get_injector_paramet": [3, 6, 7, 8, 10], "get_n_neuron": [3, 6, 7, 8, 10], "get_transl": [3, 6, 7, 8, 10], "abstractethernettransl": [3, 4, 6, 7, 10], "translate_control_packet": [3, 7, 8, 10], "abstractmulticastcontrollabledevic": [3, 6, 7, 9, 10], "device_control_first_send_timestep": [3, 7, 8, 10], "device_control_kei": [3, 7, 8, 10], "device_control_max_valu": [3, 7, 8, 10], "device_control_min_valu": [3, 7, 8, 10], "device_control_partition_id": [3, 7, 8, 10], "device_control_scaling_factor": [3, 7], "device_control_send_typ": [3, 7, 8, 10], "device_control_timesteps_between_send": [3, 7, 8, 10], "device_control_uses_payload": [3, 7, 8, 10], "arbitraryfpgadevic": [3, 6, 7], "externalcochleadevic": [3, 6, 7], "externaldevicelifcontrol": [3, 6, 7, 9], "create_vertex": [3, 6, 7, 15, 17, 24, 45, 46, 48], "externalfpgaretinadevic": [3, 6, 7], "down_polar": [3, 6, 7], "merged_polar": [3, 6, 7], "mode_128": [3, 6, 7], "mode_16": [3, 6, 7], "mode_32": [3, 6, 7], "mode_64": [3, 6, 7], "up_polar": [3, 6, 7], "pause_stop_command": [3, 6, 7, 8, 10], "start_resume_command": [3, 6, 7, 8, 10, 12], "timed_command": [3, 6, 7, 8, 10], "icubretinadevic": [3, 6, 7], "get_incoming_slic": [3, 6, 7], "get_machine_fixed_key_and_mask": [3, 6, 7], "get_shape_key_field": [3, 6, 7, 17, 18], "machinemunichmotordevic": [3, 7], "input_buffer_full_nam": [3, 7, 17, 24], "motor_partition_id": [3, 7], "generate_data_specif": [3, 7, 17, 24, 45, 46, 47], "get_binary_file_nam": [3, 7, 17, 24, 45, 46, 47], "get_binary_start_typ": [3, 7, 17, 24, 45, 46, 47], "get_n_keys_for_partit": [3, 7, 17, 24, 45, 46, 47], "parse_extra_provenance_item": [3, 7, 17, 24, 45, 46, 47], "reserve_memory_region": [3, 7], "sdram_requir": [3, 7, 17, 24, 45, 46, 47], "munichmotordevic": [3, 6, 7], "default_initial_valu": [3, 6, 7, 17, 24, 26], "default_paramet": [3, 6, 7, 8, 12, 15, 17, 24, 26, 32, 34, 35, 46, 48], "munichretinadevic": [3, 6, 7], "left_retina": [3, 6, 7], "right_retina": [3, 6, 7], "spifoutputdevic": [3, 6, 7], "add_incoming_edg": [3, 6, 7], "spifretinadevic": [3, 6, 7], "x_mask": [3, 6, 7], "x_per_row": [3, 6, 7], "y_mask": [3, 6, 7], "get_incoming_slice_for_link": [3, 6, 7], "thresholdtypemulticastdevicecontrol": [3, 7], "add_paramet": [3, 7, 24, 25, 27, 28, 30, 42, 43], "add_state_vari": [3, 7, 24, 25, 27, 28, 30, 42, 43], "splitter_compon": [3, 13], "spynnakerconnectionholdergener": [3, 13], "__call__": [3, 13], "spynnakersynapticmatrixreport": [3, 13], "delay_support_add": [3, 13], "finish_connection_hold": [3, 13, 17, 21], "neuron_expand": [3, 13, 18], "redundant_packet_count_report": [3, 13], "spynnaker_machine_bitfield_pair_router_compressor": [3, 13], "spynnaker_machine_bitfield_ordered_covering_compressor": [3, 13], "spynnaker_neuron_graph_network_specification_report": [3, 13], "synapse_expand": [3, 13, 18], "abstract_model": [3, 17], "common": [3, 6, 7, 17, 22, 24, 31], "param_generator_data": [3, 17], "recording_util": [3, 17], "current_sourc": [3, 17, 19, 24, 44], "neural_project": [3, 17], "neural_properti": [3, 17], "generator_data": [3, 17], "master_pop_t": [3, 17], "neuron_data": [3, 14, 17], "population_machine_common": [3, 17], "population_machine_synaps": [3, 17], "synapse_io": [3, 17], "synaptic_matric": [3, 14, 17, 41], "synaptic_matrix_app": [3, 17], "popul": [3, 4, 5, 6, 7, 13, 14, 15, 17, 19, 20, 21, 22, 24, 41, 45, 48, 50], "spike_sourc": [3, 17], "spike_source_array_machine_vertex": [3, 17], "utility_model": [3, 17], "abstractpynnmodel": [3, 6, 15, 17, 24, 44, 45, 48], "absolute_max_atoms_per_cor": [3, 15, 17, 24, 29, 41, 45], "default_population_paramet": [3, 15, 17, 24, 45, 46, 48], "describ": [3, 13, 17, 18, 21, 22, 24, 44, 45, 46, 48, 50], "get_model_max_atoms_per_dimension_per_cor": [3, 17], "get_parameter_nam": [3, 15, 17, 24, 32, 34, 35, 37, 38, 39, 40, 41], "has_paramet": [3, 17], "set_model_max_atoms_per_dimension_per_cor": [3, 17], "get_dict_from_init": [3, 17], "get": [3, 4, 5, 6, 7, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50], "getdelai": [3, 17], "getsynapsedynam": [3, 17], "getweight": [3, 17], "post": [3, 14, 17, 18, 19, 22, 24, 41, 44], "pre": [3, 7, 14, 17, 19, 22, 24, 34, 45], "printdelai": [3, 17], "printweight": [3, 17], "save": [3, 17, 44, 50], "saveconnect": [3, 17], "set": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 35, 41, 44, 45, 47, 48, 49, 50], "size": [3, 4, 5, 6, 17, 19, 22, 24, 29, 40, 41, 44, 45, 47, 50, 52], "weighthistogram": [3, 17], "cache_data": [3, 17], "csv_neo_block": [3, 17], "extract_neo_block": [3, 17], "recording_label": [3, 17], "turn_off_all_record": [3, 17], "turn_on_record": [3, 17], "write_to_files_ind": [3, 17], "munich_mod": [3, 6, 49], "ball_balanc": [3, 49], "free": [3, 49], "my_oro_bot": [3, 49], "reset_to_default": [3, 49], "spomnibot": [3, 49], "munichioethernetprotocol": [3, 6, 8, 9, 10, 49], "disable_motor": [3, 49], "disable_retina": [3, 6, 49], "enable_motor": [3, 49], "enable_retina": [3, 49], "laser_active_tim": [3, 6, 8, 11, 49], "laser_frequ": [3, 6, 8, 11, 49], "laser_total_period": [3, 6, 8, 11, 49], "led_back_active_tim": [3, 6, 8, 11, 49], "led_frequ": [3, 6, 8, 11, 49], "led_front_active_tim": [3, 6, 8, 11, 49], "led_total_period": [3, 6, 8, 11, 49], "motor_0_leaky_veloc": [3, 49], "motor_0_permanent_veloc": [3, 49], "motor_1_leaky_veloc": [3, 49], "motor_1_permanent_veloc": [3, 49], "set_retina_transmiss": [3, 6, 49], "speaker_active_tim": [3, 6, 8, 11, 49], "speaker_frequ": [3, 49], "speaker_total_period": [3, 6, 8, 11, 49], "munichiospinnakerlinkprotocol": [3, 6, 8, 9, 10, 12, 49], "add_payload_logic_to_current_output": [3, 6, 49], "add_payload_logic_to_current_output_kei": [3, 6, 49], "bias_valu": [3, 6, 49], "bias_values_kei": [3, 6, 49], "configure_master_kei": [3, 6, 49], "configure_master_key_kei": [3, 6, 49], "disable_retina_kei": [3, 6, 49], "enable_disable_motor_kei": [3, 6, 49], "generic_motor0_raw_output_leak_to_0": [3, 6, 49], "generic_motor0_raw_output_leak_to_0_kei": [3, 6, 49], "generic_motor0_raw_output_perman": [3, 6, 49], "generic_motor0_raw_output_permanent_kei": [3, 6, 49], "generic_motor1_raw_output_leak_to_0": [3, 6, 49], "generic_motor1_raw_output_leak_to_0_kei": [3, 6, 49], "generic_motor1_raw_output_perman": [3, 6, 49], "generic_motor1_raw_output_permanent_kei": [3, 6, 49], "generic_motor_dis": [3, 6, 49], "generic_motor_en": [3, 6, 49], "generic_motor_total_period": [3, 6, 49], "generic_motor_total_period_kei": [3, 6, 49], "instance_kei": [3, 6, 49], "master_slave_kei": [3, 6, 49], "master_slave_set_master_clock_act": [3, 6, 49], "master_slave_set_master_clock_not_start": [3, 6, 49], "master_slave_set_slav": [3, 6, 49], "master_slave_use_internal_count": [3, 6, 49], "mode": [3, 6, 7, 49], "poll_individual_sensor_continu": [3, 6, 49], "poll_individual_sensor_continuously_kei": [3, 6, 49], "poll_sensors_onc": [3, 6, 49], "poll_sensors_once_kei": [3, 6, 49], "protocol_inst": [3, 6, 49], "push_bot_laser_config_active_tim": [3, 6, 49], "push_bot_laser_config_active_time_kei": [3, 6, 49], "push_bot_laser_config_total_period": [3, 6, 49], "push_bot_laser_config_total_period_kei": [3, 6, 49], "push_bot_laser_set_frequ": [3, 6, 49], "push_bot_laser_set_frequency_kei": [3, 6, 49], "push_bot_led_back_active_tim": [3, 6, 49], "push_bot_led_back_active_time_kei": [3, 6, 49], "push_bot_led_front_active_tim": [3, 6, 49], "push_bot_led_front_active_time_kei": [3, 6, 49], "push_bot_led_set_frequ": [3, 6, 49], "push_bot_led_set_frequency_kei": [3, 6, 49], "push_bot_led_total_period": [3, 6, 49], "push_bot_led_total_period_kei": [3, 6, 49], "push_bot_motor_0_leaking_towards_zero": [3, 6, 49], "push_bot_motor_0_leaking_towards_zero_kei": [3, 6, 49], "push_bot_motor_0_perman": [3, 6, 49], "push_bot_motor_0_permanent_kei": [3, 6, 49], "push_bot_motor_1_leaking_towards_zero": [3, 6, 49], "push_bot_motor_1_leaking_towards_zero_kei": [3, 6, 49], "push_bot_motor_1_perman": [3, 6, 49], "push_bot_motor_1_permanent_kei": [3, 6, 49], "push_bot_speaker_config_active_tim": [3, 6, 49], "push_bot_speaker_config_active_time_kei": [3, 6, 49], "push_bot_speaker_config_total_period": [3, 6, 49], "push_bot_speaker_config_total_period_kei": [3, 6, 49], "push_bot_speaker_set_melodi": [3, 6, 49], "push_bot_speaker_set_melody_kei": [3, 6, 49], "push_bot_speaker_set_ton": [3, 6, 49], "push_bot_speaker_set_tone_kei": [3, 6, 49], "pwm_pin_output_timer_a_channel_0_ratio": [3, 6, 49], "pwm_pin_output_timer_a_channel_0_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_a_channel_1_ratio": [3, 6, 49], "pwm_pin_output_timer_a_channel_1_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_a_dur": [3, 6, 49], "pwm_pin_output_timer_a_duration_kei": [3, 6, 49], "pwm_pin_output_timer_b_channel_0_ratio": [3, 6, 49], "pwm_pin_output_timer_b_channel_0_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_b_channel_1_ratio": [3, 6, 49], "pwm_pin_output_timer_b_channel_1_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_b_dur": [3, 6, 49], "pwm_pin_output_timer_b_duration_kei": [3, 6, 49], "pwm_pin_output_timer_c_channel_0_ratio": [3, 6, 49], "pwm_pin_output_timer_c_channel_0_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_c_channel_1_ratio": [3, 6, 49], "pwm_pin_output_timer_c_channel_1_ratio_kei": [3, 6, 49], "pwm_pin_output_timer_c_dur": [3, 6, 49], "pwm_pin_output_timer_c_duration_kei": [3, 6, 49], "query_state_of_io_lin": [3, 6, 49], "query_state_of_io_lines_kei": [3, 6, 49], "remove_payload_logic_to_current_output": [3, 6, 49], "remove_payload_logic_to_current_output_kei": [3, 6, 49], "reset_retina": [3, 6, 49], "reset_retina_kei": [3, 6, 49], "sensor_transmission_kei": [3, 6, 49], "sent_mode_command": [3, 6, 49], "set_mod": [3, 6, 49], "set_mode_kei": [3, 6, 49], "set_output_pattern_for_payload": [3, 6, 49], "set_output_pattern_for_payload_kei": [3, 6, 49], "set_payload_pins_to_high_imped": [3, 6, 49], "set_payload_pins_to_high_impedance_kei": [3, 6, 49], "set_retina_kei": [3, 6, 49], "set_retina_key_kei": [3, 6, 49], "set_retina_transmission_kei": [3, 6, 49], "turn_off_sensor_report": [3, 6, 49], "turn_off_sensor_reporting_kei": [3, 6, 49], "uart_id": [3, 6, 49], "retinakei": [3, 6, 11, 49], "downsample_16_x_16": [3, 6, 8, 11, 49], "downsample_32_x_32": [3, 6, 8, 11, 49], "downsample_64_x_64": [3, 6, 8, 11, 49], "fixed_kei": [3, 49], "native_128_x_128": [3, 6, 8, 10, 11, 49], "bits_per_coordin": [3, 49], "pixel": [3, 6, 7, 22, 49], "retinapayload": [3, 6, 49], "absolute_2_byte_timestamp": [3, 49], "absolute_3_byte_timestamp": [3, 49], "absolute_4_byte_timestamp": [3, 49], "delta_timestamp": [3, 49], "events_in_payload": [3, 49], "no_payload": [3, 49], "n_payload_byt": [3, 49], "random_stat": [3, 50], "rang": [3, 7, 23, 24, 27, 41, 45, 50], "filter_header_word": [3, 50], "get_bitfield_key_map_data": [3, 50], "get_sdram_for_bit_field_region": [3, 50], "get_sdram_for_kei": [3, 50], "write_bitfield_init_data": [3, 50], "bufferdatatyp": [3, 50], "eieio_spik": [3, 50], "matrix": [3, 13, 21, 22, 24, 41, 44, 50], "multi_spik": [3, 50], "neuron_spik": [3, 50], "not_neo": [3, 50], "rewir": [3, 17, 19, 22, 41, 50], "live_poisson_control_partition_id": [3, 50], "min_supported_delai": [3, 50], "out_spike_byt": [3, 50], "out_spike_s": [3, 50], "pop_table_max_row_length": [3, 50], "spike_partition_id": [3, 50], "synapse_sdram_partition_id": [3, 50], "synaptic_row_header_word": [3, 50], "write_bandwidth_bytes_per_second": [3, 50], "datapopul": [3, 50], "find_unit": [3, 17, 44, 50], "get_data": [3, 17, 44, 50], "get_spike_count": [3, 17, 44, 50], "id_to_index": [3, 17, 44, 50], "index_to_id": [3, 17, 44, 50], "local_s": [3, 17, 44, 50], "mean_spike_count": [3, 17, 44, 50], "spinnaker_get_data": [3, 17, 44, 50], "write_data": [3, 17, 24, 44, 50], "extracteddata": [3, 50], "fakehbpportalmachineprovid": [3, 50], "creat": [3, 5, 6, 7, 13, 14, 15, 17, 22, 23, 24, 41, 44, 45, 47, 48, 50], "destroi": [3, 50], "get_machine_info": [3, 50], "wait_till_not_readi": [3, 50], "wait_until_readi": [3, 50], "neobufferdatabas": [3, 19, 24, 45, 48, 50], "add_seg": [3, 50], "array_to_str": [3, 50], "clear_data": [3, 50], "csv_block_metadata": [3, 50], "csv_segment": [3, 50], "get_empty_block": [3, 50], "get_full_block": [3, 50], "get_popul": [3, 50], "get_population_metdadata": [3, 50], "get_recording_metadeta": [3, 50], "get_recording_popul": [3, 50], "get_recording_vari": [3, 17, 19, 24, 45, 46, 48, 50], "string_to_arrai": [3, 50], "write_metadata": [3, 50], "write_segment_metadata": [3, 50], "write_t_stop": [3, 50], "compare_analogsign": [3, 50], "compare_block": [3, 50], "compare_seg": [3, 50], "compare_spiketrain": [3, 50], "convert_analog_sign": [3, 50], "convert_data": [3, 50], "convert_data_list": [3, 50], "convert_gsyn": [3, 50], "convert_gsyn_exc_list": [3, 50], "convert_gsyn_inh_list": [3, 50], "convert_spik": [3, 50], "convert_spiketrain": [3, 50], "convert_v_list": [3, 50], "count_spik": [3, 50], "count_spiketrain": [3, 50], "neocsv": [3, 50], "read_csv": [3, 50], "runningstat": [3, 50], "add_item": [3, 50], "mean": [3, 17, 20, 22, 24, 29, 41, 44, 50, 51], "n_item": [3, 17, 24, 50], "standard_devi": [3, 50], "varianc": [3, 22, 29, 41, 50, 51], "field": [3, 6, 7, 13, 18, 19, 24, 50], "get_generator_data": [3, 17, 19, 24, 50], "get_size_in_whole_word": [3, 50], "is_generat": [3, 50], "numpy_dtyp": [3, 50], "read_data": [3, 17, 24, 50], "repeat_typ": [3, 50], "structrepeat": [3, 50], "global": [3, 5, 6, 15, 19, 24, 28, 34, 35, 41, 45, 48, 50], "per_neuron": [3, 50], "check_directory_exists_and_create_if_not": [3, 50], "convert_param_to_numpi": [3, 50], "convert_to": [3, 50], "create_mars_kiss_se": [3, 50], "get_maximum_probable_valu": [3, 50], "get_mean": [3, 50], "get_minimum_probable_valu": [3, 50], "get_n_bit": [3, 50], "get_probability_within_rang": [3, 50], "get_probable_maximum_select": [3, 50], "get_probable_minimum_select": [3, 50], "get_standard_devi": [3, 50], "get_time_to_write_u": [3, 50], "get_vari": [3, 50], "high": [3, 50, 51], "low": [3, 45, 50, 51], "moved_in_v6": [3, 50], "moved_in_v7": [3, 50], "moved_in_v7_warn": [3, 50], "read_in_data_from_fil": [3, 50], "read_spikes_from_fil": [3, 50], "here": [3, 6, 7, 14, 17, 44], "ha": [3, 4, 6, 7, 11, 12, 13, 14, 17, 18, 22, 24, 27, 35, 38, 44, 49, 50], "been": [3, 4, 6, 7, 13, 14, 21, 22, 24, 38, 44, 45, 49, 50], "merg": [3, 6, 7, 24, 29, 41], "now": [3, 13, 24], "just": [3, 24, 44, 50], "depreci": 3, "redirect": 3, "hook": 3, "graph_label": 3, "database_socket_address": 3, "n_chips_requir": 3, "n_boards_requir": 3, "timestep": [3, 4, 6, 7, 10, 17, 18, 19, 24, 40, 41, 44, 45], "min_delai": [3, 5, 22], "time_scale_factor": [3, 5], "factor": [3, 5, 7, 18, 24, 29], "machin": [3, 6, 7, 13, 14, 18, 19, 20, 21, 22, 24, 29, 41, 45, 47, 50], "step": [3, 5, 19, 20, 22, 24, 45, 48], "doe": [3, 14, 22, 23, 41, 44], "affect": 3, "accuraci": [3, 6], "deprec": [3, 17, 44], "instead": [3, 17, 21, 44, 50], "you": [3, 22], "need": [3, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 29, 41, 45, 47, 48, 49, 50], "alloc": [3, 6, 12, 14, 24], "spalloc": 3, "befor": [3, 4, 5, 6, 10, 17, 21, 24, 41, 44, 45, 48], "your": [3, 6, 14], "fill": [3, 18, 21, 24, 50], "idea": 3, "board": [3, 4, 6, 7, 12, 45, 48], "so": [3, 7, 14, 18, 19, 21, 22, 24, 45, 50], "system": [3, 6, 8, 17, 22, 24], "big": [3, 45], "enough": [3, 19], "float": [3, 4, 5, 6, 7, 9, 10, 15, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50], "simul": [3, 4, 5, 6, 7, 8, 10, 11, 12, 17, 20, 22, 24, 41, 44, 45, 50], "micro": 3, "second": [3, 17, 18, 24, 39, 41, 44, 45, 50], "cfg": 3, "static": [3, 6, 7, 22, 24, 38, 41, 43, 44, 47, 49, 50, 52], "search_path": 3, "regist": [3, 6, 7], "binari": [3, 6, 7, 9, 15, 24, 26, 27, 45, 47], "execut": [3, 6, 7, 9, 15, 18, 24, 26, 27, 29, 34, 35, 38, 39, 40, 41], "absolut": [3, 29, 41, 50], "return": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52], "up": [3, 6, 7, 10, 13, 18, 19, 22, 24, 41, 44, 50], "config": [3, 5, 50], "user": [3, 7, 14, 22, 24, 44, 45, 47, 48, 50], "clear": [3, 5, 17, 18, 21, 44, 50], "out": [3, 6, 7, 10, 18, 20, 22, 24, 41, 44, 47], "previou": [3, 5, 50], "load": [3, 13, 22, 24], "new": [3, 5, 6, 10, 17, 24, 41, 44, 45, 49, 50], "warn": [3, 17, 50], "setup": [3, 5, 6, 10, 17, 44, 50], "call": [3, 4, 5, 6, 7, 13, 17, 18, 19, 22, 24, 41, 44, 45, 47, 50], "requir": [3, 7, 14, 18, 19, 22, 24, 27, 41, 45, 47, 50, 52], "unittest": [3, 5], "reset": [3, 14, 15, 17, 24, 26, 30], "local": [3, 4, 6, 10, 17, 22, 29, 44, 50], "NOT": 3, "unset": 3, "tempdir": 3, "do": [3, 17, 19, 21, 22, 23, 24, 41, 44, 45, 48, 52], "sim": [3, 5, 6, 11, 17, 44], "configurationexcept": [3, 17, 19, 24, 44, 50], "delai": [3, 5, 13, 14, 17, 18, 21, 22, 24, 29, 41, 46, 50], "extens": [3, 6, 13, 14, 18, 21, 24, 41, 47], "vertex": [3, 4, 6, 7, 14, 15, 17, 18, 19, 20, 22, 24, 29, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50], "fail": 3, "possibl": [3, 5, 6, 17, 19, 22, 25, 28, 29, 41, 44], "determin": [3, 4, 6, 7, 10, 14, 15, 17, 19, 22, 24, 27, 29, 34, 35, 41, 44, 50, 52], "edg": [3, 6, 7, 10, 13, 14, 18, 21, 22, 24, 41, 45, 47, 48], "filter": [3, 7, 14, 41, 50], "recognis": [3, 19, 24, 45, 48], "front": [3, 6, 10, 12], "end": [3, 4, 5, 7, 17, 20, 23, 44, 50], "certain": 3, "memori": [3, 7, 24, 27, 50], "region": [3, 17, 18, 19, 22, 24, 29, 41, 45, 48, 50], "superclass": [3, 8], "splitter": [3, 6, 7, 13, 14, 15, 18, 19, 24, 45, 48], "configur": [3, 4, 6, 14, 44], "messag": [3, 4, 6, 7, 10, 50, 52], "synaps": [3, 6, 7, 9, 13, 14, 15, 17, 18, 21, 22, 24, 26, 27, 29, 34, 35, 38, 41, 42, 45, 48], "row": [3, 22, 24, 34, 41, 50], "bigger": 3, "maximum": [3, 4, 6, 7, 10, 14, 15, 17, 18, 19, 22, 24, 29, 35, 41, 45, 47, 50], "permit": 3, "excepton": 3, "properti": [3, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50], "synapt": [3, 6, 7, 9, 13, 15, 17, 18, 19, 21, 22, 24, 26, 34, 41, 44, 45, 50], "manag": [3, 19, 24, 41, 45, 48], "convert": [3, 4, 6, 7, 13, 24, 41, 45, 47, 50, 52], "readabl": [3, 17, 24, 44, 45, 48, 50], "some": [3, 7, 14, 19, 22, 24, 45, 47], "reason": 3, "sublist": [3, 19, 24, 45, 48], "exce": 3, "max": [3, 14, 15, 17, 19, 24, 35, 41, 44, 50], "atom": [3, 4, 6, 7, 14, 17, 19, 24, 29, 41, 44, 45, 47, 48, 50], "support": [3, 5, 6, 7, 11, 12, 14, 17, 18, 19, 22, 24, 26, 27, 29, 34, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50], "script": 3, "instal": [3, 22], "usabl": [3, 50], "modifi": 3, "actual": [3, 7, 14, 20, 22, 23, 24, 44, 50], "within": [3, 4, 5, 6, 13, 18, 19, 24, 44, 45, 48, 50], "given": [3, 5, 6, 7, 8, 10, 14, 17, 18, 19, 20, 22, 24, 27, 29, 41, 42, 44, 45, 47, 48, 50, 52], "implement": [3, 6, 7, 9, 15, 17, 18, 22, 24, 26, 41, 44, 45, 49, 50, 51], "veri": 3, "nasti": 3, "perform": [3, 6, 22, 41], "version": [3, 17, 20, 44, 50], "could": [3, 6, 7, 14, 24, 44, 50], "smarter": 3, "level": [3, 5, 17, 24, 41], "interfac": [3, 4, 6, 14, 18], "extern": [3, 6, 7, 10, 14], "devic": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "plugin": 3, "database_notify_host": [3, 6, 7], "database_notify_port_num": [3, 6, 7], "database_ack_port_num": [3, 6, 7], "port": [3, 4, 6, 8, 10, 11, 45, 48], "host": [3, 4, 6, 21, 22, 24], "tag": [3, 6, 45, 48], "strip_sdp": [3, 6], "use_prefix": [3, 6], "fals": [3, 4, 6, 7, 14, 17, 19, 22, 24, 41, 44, 45, 48, 50, 52], "key_prefix": [3, 6], "prefix_typ": [3, 6, 45, 48], "message_typ": [3, 6], "eieiotyp": [3, 6], "key_32_bit": [3, 6], "right_shift": [3, 6], "0": [3, 6, 7, 10, 11, 12, 15, 17, 19, 20, 24, 26, 29, 32, 34, 35, 38, 39, 41, 44, 45, 47, 48, 49, 50], "payload_as_time_stamp": [3, 6], "notifi": [3, 4, 6, 24], "use_payload_prefix": [3, 6], "payload_prefix": [3, 6], "payload_right_shift": [3, 6], "number_of_packets_sent_per_time_step": [3, 6], "translate_kei": [3, 4, 6], "output": [3, 6, 7, 8, 14, 17, 22, 24, 44, 45, 48, 50], "occur": [3, 4, 6, 10], "activ": [3, 6, 10, 12, 24, 45], "live": [3, 4, 6, 45, 48, 50], "hostnam": [3, 4, 6], "listen": [3, 4, 6, 10, 11, 45, 48], "databas": [3, 4, 6, 7, 10, 50], "notif": [3, 4, 6], "acknowledg": [3, 6], "have": [3, 4, 6, 7, 13, 14, 17, 18, 19, 21, 22, 24, 41, 44, 45, 50], "finish": [3, 6, 13, 17, 21, 24], "readi": [3, 6, 10], "receiv": [3, 4, 6, 7, 8, 10, 18, 24, 45, 48], "command": [3, 4, 6, 7, 8, 10, 12, 23, 49], "prefix": [3, 6, 45, 48], "kei": [3, 4, 6, 7, 10, 12, 17, 18, 19, 22, 24, 41, 44, 45, 47, 48, 49, 50, 52], "eieioprefix": [3, 6, 45, 48], "32": [3, 4, 6, 7, 41, 47, 50], "bit": [3, 4, 6, 7, 10, 13, 18, 19, 24, 41, 45, 50], "16": [3, 4, 6, 7, 10, 14, 19, 24, 39, 45, 47], "eieio": [3, 6, 19], "udp": [3, 6, 7], "sent": [3, 4, 6, 7, 8, 10, 14, 18, 19, 24, 45, 48], "taken": [3, 6], "live_spike_port": [3, 6], "section": [3, 6], "ip": [3, 4, 6, 7, 10, 12, 45, 48], "address": [3, 4, 6, 7, 10, 12, 24, 45, 48], "live_spike_host": [3, 6], "assign": [3, 6, 24, 41, 45, 48], "sdp": [3, 6, 45, 48], "header": [3, 6, 22, 24], "strip": [3, 6], "transmit": [3, 6, 49], "packet": [3, 4, 6, 7, 10, 17, 19, 24, 45, 48, 49], "gather": [3, 6, 17, 44, 50], "partition_id": [3, 6, 7, 14, 19, 24, 45, 47], "partit": [3, 6, 7, 10, 14, 19, 24, 45, 46, 47, 48, 50], "whether": [3, 4, 6, 14, 19, 21, 22, 24, 41, 44, 45, 48, 50], "incom": [3, 6, 7, 14, 24, 45, 47, 48], "core": [3, 5, 6, 7, 14, 17, 19, 24, 29, 41, 44, 45, 47, 48, 50], "translat": [3, 4, 6, 7, 10], "rather": [3, 6, 19, 44], "note": [3, 6, 7, 10, 14, 22, 23, 24, 29, 41, 44], "applicationvertex": [3, 6, 7, 14, 17, 18, 19, 22, 41, 45, 47], "id": [3, 4, 5, 6, 7, 10, 17, 18, 19, 20, 22, 24, 27, 29, 41, 42, 44, 45, 47, 48, 49, 50, 52], "talk": [3, 6, 9], "tell": [3, 7, 17, 50], "applic": [3, 6, 7, 13, 14, 15, 17, 18, 24, 41, 45, 47, 48, 50], "device_vertex": 3, "add": [3, 4, 5, 6, 7, 13, 14, 19, 21, 22, 24, 25, 27, 28, 30, 42, 43, 44, 45, 47, 50, 52], "between": [3, 4, 6, 7, 10, 14, 17, 19, 22, 24, 39, 41, 44, 45, 50], "vertic": [3, 4, 6, 7, 14, 17, 22, 24, 41, 50], "often": [3, 19, 24, 45, 48], "identifi": [3, 6, 7, 14, 19, 24, 45, 47, 48], "make": [3, 7, 10, 14, 22, 44], "net": 3, "poisson_popul": [3, 6], "control_label_extens": [3, 4, 6], "_control": [3, 4, 6], "receive_port": [3, 6, 45, 48], "reserve_reverse_ip_tag": [3, 6, 45, 48], "rate": [3, 4, 6, 15, 17, 18, 19, 24, 45, 48], "control": [3, 4, 6, 7, 8, 10, 12, 19, 24, 41, 45, 48, 50], "poisson": [3, 4, 6, 14, 24, 45, 50, 51], "match": [3, 4, 6, 22, 52], "equival": [3, 6, 17], "revers": [3, 6, 28], "vertex_to_record_from": 3, "param": [3, 7, 14, 19, 20, 22, 24, 41, 44, 45, 47, 50], "creation": [3, 44], "machinevertex": [3, 6, 7, 14, 18, 19, 22, 24, 29, 41, 45, 47], "livepacketgatherparamet": 3, "specif": [3, 4, 6, 7, 14, 15, 18, 19, 23, 24, 29, 34, 35, 41, 45, 47], "api": [3, 18, 50], "org": [3, 44, 50], "trac": 3, "profil": [3, 17, 22, 24, 45], "9": [3, 6, 7, 15, 24, 26, 43, 44, 47], "acsourc": [3, 17, 20], "amplitud": [3, 20], "offset": [3, 7, 15, 19, 20, 26, 30, 50], "frequenc": [3, 6, 10, 12, 15, 20, 22, 26, 41, 49], "phase": [3, 20], "abstractcurrentsourc": [3, 17, 20], "ac": [3, 20], "current": [3, 5, 6, 7, 9, 17, 19, 20, 22, 24, 26, 28, 44, 45, 48, 50], "e": [3, 10, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 39, 43, 44, 45, 50], "sine": [3, 20], "wave": [3, 20], "turn": [3, 17, 20], "off": [3, 7, 17, 20], "current_source_id": [3, 17, 20], "get_parameter_typ": [3, 17, 20], "rtype": [3, 5, 14, 20, 27, 50], "get_paramet": [3, 17, 19, 20, 24, 44, 45], "get_sdram_usage_in_byt": [3, 17, 19, 20], "sdram": [3, 7, 14, 15, 18, 19, 20, 24, 29, 34, 35, 38, 39, 40, 41, 45, 47, 50], "usag": [3, 5, 19, 20, 24, 41], "byte": [3, 6, 10, 18, 19, 20, 22, 24, 29, 33, 34, 41, 45, 50], "set_paramet": [3, 17, 20, 44], "additiveweightdepend": 3, "alia": [3, 15, 24], "weightdependenceaddit": [3, 32, 35], "alltoallconnector": [3, 21, 22], "allow_self_connect": [3, 21, 22], "safe": [3, 21, 22], "verbos": [3, 21, 22], "callback": [3, 4, 6, 13, 22, 24], "abstractgenerateconnectoronmachin": [3, 21, 22], "abstractgenerateconnectoronhost": [3, 21, 22], "cell": [3, 20, 22, 24, 44, 45, 48, 50], "presynapt": [3, 22], "postsynapt": [3, 22], "connector": [3, 14, 17, 21, 41], "itself": [3, 5, 7, 20, 22, 24, 44], "flag": [3, 22, 24, 45, 48, 50], "weight": [3, 15, 17, 18, 21, 22, 24, 27, 28, 29, 33, 34, 35, 38, 41], "skip": [3, 17, 22], "extra": [3, 4, 5, 6, 19, 22, 44, 45, 48, 50], "about": [3, 4, 6, 22, 24, 44, 51], "csv": [3, 22, 50], "callabl": [3, 4, 6, 17, 22, 24, 44], "displai": [3, 22], "progress": [3, 22], "bar": [3, 22, 24], "termin": [3, 21, 22], "Not": [3, 17, 22, 24, 26], "create_synaptic_block": [3, 21, 22], "post_slic": [3, 22], "post_vertex_slic": [3, 22, 24, 41], "synapse_typ": [3, 6, 7, 9, 15, 17, 21, 22, 24, 26, 27], "synapse_info": [3, 18, 21, 22, 24, 41], "slice": [3, 6, 7, 14, 17, 18, 19, 22, 23, 24, 27, 41, 44, 45, 47, 48, 50], "abstractsynapsetyp": [3, 6, 7, 9, 15, 22, 24, 26, 27, 42], "synapseinform": [3, 13, 17, 18, 21, 22, 24, 41], "go": [3, 22, 24, 41], "gen_connector_id": [3, 21, 22], "gen_connector_param": [3, 21, 22], "uint32": [3, 22, 24, 41, 50], "gen_connector_params_size_in_byt": [3, 21, 22], "get_delay_maximum": [3, 21, 22, 24, 41], "m": [3, 19, 22, 24, 30, 44, 45, 48, 50], "unbound": [3, 22, 51], "info": [3, 22, 24, 41], "get_delay_minimum": [3, 21, 22, 24, 41], "minimum": [3, 5, 7, 10, 17, 22, 29, 41, 50], "get_n_connections_from_pre_vertex_maximum": [3, 21, 22], "n_post_atom": [3, 22, 24], "max_delai": [3, 14, 22], "inclus": [3, 22, 23], "both": [3, 6, 7, 22, 50], "otherwis": [3, 19, 22, 44, 50], "numpyrng": [3, 19, 21, 22, 44, 50], "get_n_connections_to_post_vertex_maximum": [3, 21, 22], "get_weight_maximum": [3, 21, 22, 24, 41], "arrayconnector": [3, 21, 22], "abstractconnector": [3, 14, 17, 21, 22, 41], "integ": [3, 17, 22, 24, 41, 44], "2": [3, 6, 7, 11, 15, 18, 19, 20, 22, 24, 25, 26, 39, 44, 45, 47, 49, 50], "uint8": [3, 22], "explicit": [3, 22], "boolean": [3, 22, 44], "see": [3, 5, 6, 7, 10, 17, 18, 19, 22, 24, 26, 44, 45, 48, 50], "2d": [3, 22, 41, 44, 50], "practic": [3, 22], "assembli": [3, 17, 44, 50], "kwarg": [3, 6, 7, 9, 15, 26, 44], "group": [3, 14, 24, 44], "heterogen": [3, 44], "contrast": [3, 44], "where": [3, 6, 7, 9, 13, 17, 18, 19, 20, 22, 24, 26, 27, 33, 41, 44, 45, 47, 50], "populationview": [3, 17, 21, 44], "view": [3, 5, 17, 20, 21, 44, 50], "form": [3, 41, 44], "csaconnector": [3, 21, 22], "cset": [3, 22], "algebra": [3, 22], "djurfeldt": [3, 22], "2012": [3, 22], "descript": [3, 5, 7, 17, 19, 21, 22, 24, 44, 45, 47, 48, 50], "typeerror": [3, 22], "3": [3, 6, 7, 11, 20, 22, 24, 26, 27, 44, 45, 47, 49, 50], "incf": [3, 22], "csa": [3, 22], "issu": [3, 22], "10": [3, 15, 17, 22, 24, 26, 34, 43, 44, 45, 47], "connset": [3, 22], "importerror": [3, 22], "librari": [3, 22], "isn": [3, 4, 6, 19, 22, 24, 45, 48], "t": [3, 4, 6, 7, 14, 19, 22, 24, 41, 45, 48, 50], "present": [3, 17, 22], "tricki": [3, 22], "environ": [3, 22], "we": [3, 6, 9, 20, 21, 22, 24, 45], "don": [3, 6, 7, 22, 41], "forc": [3, 22], "unless": [3, 19, 22, 24, 45, 48], "want": [3, 22], "show_connection_set": [3, 21, 22], "n_pre_neuron": [3, 17, 21, 22], "n_post_neuron": [3, 17, 21, 22], "convolut": [3, 29], "localonlyconvolut": [3, 24, 29], "convolutionconnector": [3, 21, 22], "kernel_weight": [3, 21, 22], "kernel_shap": [3, 22], "stride": [3, 22], "pad": [3, 22, 41], "pool_shap": [3, 22], "pool_strid": [3, 22], "positive_receptor_typ": [3, 21, 22], "excitatori": [3, 21, 22, 26, 28], "negative_receptor_typ": [3, 21, 22], "inhibitori": [3, 22, 26, 28], "consid": [3, 22, 24, 38], "everi": [3, 13, 14, 19, 20, 22, 24, 41, 44, 45, 48, 50], "col": [3, 22], "mani": [3, 4, 6, 19, 22, 24, 41, 50], "kernel": [3, 22], "through": [3, 22, 44], "randomdistribut": [3, 15, 22, 25, 26, 28, 30, 42, 43, 44, 50, 51], "strength": [3, 22], "share": [3, 18, 22, 24, 44], "simpl": [3, 22, 44, 50], "shape": [3, 6, 7, 18, 19, 22, 24, 26, 39, 45, 50], "width": [3, 6, 7, 22], "height": [3, 6, 7, 22], "As": [3, 22, 50], "abov": [3, 18, 22, 24, 38], "drawn": [3, 22], "tupl": [3, 4, 5, 6, 7, 13, 14, 17, 18, 19, 22, 23, 24, 39, 41, 44, 45, 50], "cannot": [3, 14, 19, 22, 24, 45, 48, 52], "squar": [3, 22], "assum": [3, 10, 14, 18, 19, 22, 24, 45, 50], "n_row": [3, 22, 41], "n_column": [3, 22], "spatial": [3, 22, 44], "sampl": [3, 7, 10, 17, 19, 22, 24, 44, 45, 48], "jump": [3, 22], "standard": [3, 7, 17, 22, 24, 27, 44, 45, 47, 50, 51], "ml": [3, 22], "column": [3, 22, 41], "stride_row": [3, 22], "stride_column": [3, 22], "how": [3, 6, 7, 9, 19, 22, 24, 27, 41, 45, 48, 50], "ad": [3, 4, 5, 6, 7, 14, 21, 22, 24, 44, 50], "zero": [3, 17, 22, 50], "padding_row": [3, 22], "padding_column": [3, 22], "area": [3, 7, 22, 24], "pool": [3, 22], "averag": [3, 19, 22], "seem": [3, 22], "sens": [3, 22], "pooling_row": [3, 22], "pooling_column": [3, 22], "receptor": [3, 21, 22, 41], "posit": [3, 5, 6, 7, 17, 22, 24, 29, 41, 44, 45, 47], "By": [3, 14, 19, 22, 24, 45], "neg": [3, 7, 22, 29, 41], "ignor": [3, 6, 7, 14, 17, 22, 38, 44, 50], "get_connected_vertic": [3, 21, 22, 24, 41], "s_info": [3, 22, 41], "source_vertex": [3, 14, 22, 24, 41, 46, 47], "target_vertex": [3, 22, 41], "each": [3, 4, 5, 6, 7, 14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 33, 34, 35, 41, 42, 43, 44, 45, 48, 50], "target": [3, 14, 17, 18, 21, 22, 24, 27, 29, 41, 42, 50], "abstractvertex": [3, 22, 41], "get_post_shap": [3, 21, 22], "imag": [3, 22], "local_only_n_byt": [3, 21, 22], "validate_connect": [3, 21, 22], "application_edg": [3, 22], "noth": [3, 22], "ok": [3, 6, 7, 22], "overridden": [3, 14, 17, 19, 22, 24, 45], "rule": [3, 15, 22, 34, 35, 38, 39, 40, 41], "anyth": [3, 22], "wrong": [3, 22], "applicationedg": [3, 21, 22, 24], "write_local_only_data": [3, 21, 22], "spec": [3, 7, 15, 19, 22, 23, 24, 29, 34, 35, 38, 39, 40, 41, 45, 47, 50], "app_edg": [3, 18, 22, 24, 41], "vertex_slic": [3, 6, 7, 14, 18, 19, 22, 24, 27, 41, 45, 47, 48, 50], "mask": [3, 6, 7, 17, 18, 22, 24, 44], "n_colour_bit": [3, 6, 7, 17, 19, 22, 24, 45, 46, 47], "weight_scal": [3, 14, 17, 18, 22, 24, 29, 38, 41], "cuboid": 3, "depth": 3, "volum": 3, "argument": [3, 17, 44], "extent": 3, "direct": [3, 21], "x": [3, 6, 7, 15, 22, 24, 26, 39, 44, 45, 47, 50], "z": [3, 15, 26, 43, 44], "n": [3, 17, 19, 22, 24, 44], "rng": [3, 17, 20, 21, 22, 41, 44, 50], "point": [3, 24, 39, 51], "randomli": [3, 41, 44], "uniform": [3, 22, 41, 51], "densiti": 3, "dcsourc": [3, 17, 20], "distancedependentform": [3, 37, 39], "grid": [3, 39], "p_form_forward": [3, 39], "sigma_form_forward": [3, 39], "5": [3, 6, 7, 17, 24, 26, 39, 44, 45, 47, 49, 50], "p_form_later": [3, 39], "1": [3, 6, 7, 11, 12, 14, 15, 19, 20, 24, 26, 35, 39, 41, 44, 45, 47, 48, 49, 50], "sigma_form_later": [3, 39], "abstractform": [3, 37, 39, 41], "physic": [3, 39], "distanc": [3, 22, 37, 39], "dimens": [3, 5, 6, 7, 17, 18, 19, 22, 24, 39, 44, 45], "peak": [3, 39], "probabl": [3, 22, 38, 39, 50, 51], "feed": [3, 39], "forward": [3, 39], "spread": [3, 39], "later": [3, 7, 17, 21, 39, 50], "x0": [3, 39], "x1": [3, 39], "metric": [3, 39], "comput": [3, 14, 15, 22, 26, 39, 43], "place": [3, 5, 6, 7, 19, 24, 39, 45, 47, 48], "period": [3, 6, 10, 12, 39, 41], "boundari": [3, 39, 50, 51], "condit": [3, 6, 7, 39], "first": [3, 5, 6, 7, 10, 18, 19, 22, 24, 39, 41, 44, 50], "space": [3, 7, 14, 17, 18, 19, 21, 22, 24, 39, 45, 50], "euclidian": [3, 39], "manhattan": [3, 39], "equidist": [3, 39], "generate_distance_probability_arrai": [3, 37, 39], "sigma": [3, 39], "exponenti": [3, 6, 9, 26, 39, 42, 51], "decai": [3, 6, 9, 26, 39], "lut": [3, 39], "iter": [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 28, 30, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 50], "get_parameters_sdram_usage_in_byt": [3, 15, 24, 32, 34, 35, 37, 38, 39, 40, 41], "amount": [3, 14, 15, 18, 24, 34, 35, 38, 39, 40, 41, 50], "vertex_executable_suffix": [3, 15, 32, 34, 35, 37, 38, 39, 40], "suffix": [3, 15, 24, 29, 34, 35, 38, 39, 40, 41], "append": [3, 15, 24, 34, 35, 38, 39, 40], "write_paramet": [3, 15, 24, 29, 32, 34, 35, 37, 38, 39, 40, 41], "write": [3, 7, 15, 17, 23, 24, 29, 34, 35, 38, 39, 40, 41, 44, 45, 47, 50], "dataspecificationgener": [3, 7, 15, 19, 23, 24, 29, 34, 35, 38, 39, 40, 41, 45, 47, 50], "distancedependentprobabilityconnector": [3, 21, 22], "d_express": [3, 21, 22], "n_connect": [3, 22, 41], "vari": [3, 22, 44], "right": [3, 6, 7, 11, 22], "hand": [3, 22, 50], "side": [3, 22, 24], "express": [3, 17, 22, 44, 50], "involv": [3, 22], "d": [3, 22, 24, 26, 30], "g": [3, 10, 21, 22, 24, 27, 28, 43, 44], "exp": [3, 22], "ab": [3, 22], "pars": [3, 22], "eval": [3, 22], "effer": [3, 22], "per": [3, 7, 10, 14, 17, 18, 19, 22, 24, 27, 29, 34, 41, 44, 45, 47, 50], "seed": [3, 6, 7, 15, 17, 21, 22, 24, 41, 45, 50], "random": [3, 21, 22, 24, 40, 41, 44, 50, 51], "set_projection_inform": [3, 21, 22], "fixednumberpostconnector": [3, 21, 22], "with_replac": [3, 22, 24, 41], "fix": [3, 6, 7, 11, 14, 19, 22, 24, 26, 41, 52], "select": [3, 17, 19, 22, 24, 40, 41, 44, 45, 48, 50], "chosen": [3, 22, 41, 45, 48], "occas": [3, 22], "pair": [3, 17, 22, 34, 41], "onc": [3, 14, 22, 24], "again": [3, 14, 21, 22, 24], "fixednumberpreconnector": [3, 21, 22], "fixedprobabilityconnector": [3, 21, 22], "p_connect": [3, 21, 22], "potenti": [3, 22, 23, 28, 38, 44], "fixedtotalnumberconnector": 3, "multapseconnector": [3, 21, 22], "fromfileconnector": [3, 21, 22], "fromlistconnector": [3, 21, 22], "accord": [3, 22], "fileio": [3, 22], "either": [3, 7, 17, 22, 24, 44, 45, 48, 50], "open": [3, 17, 22], "filenam": [3, 17, 22, 44, 50], "j": [3, 15, 22, 26], "u": [3, 22, 26, 50], "tau_rec": [3, 22], "begin": [3, 20, 22], "basic": [3, 22, 34], "sai": [3, 5, 14, 17, 22], "node": [3, 17, 22, 44, 50], "mpi": [3, 22, 44, 50], "rank": [3, 22], "speed": [3, 6, 7, 22], "alwai": [3, 7, 17, 19, 22, 44, 50], "leav": [3, 19, 22], "get_read": [3, 21, 22], "reader": [3, 22], "standardtextfil": [3, 22], "similar": [3, 22], "conn_list": [3, 21, 22], "column_nam": [3, 21, 22], "pre_idx": [3, 22], "post_idx": [3, 22], "p1": [3, 22], "p2": [3, 22], "pn": [3, 22], "order": [3, 6, 7, 18, 22, 24, 27, 44, 50], "etc": [3, 17, 22, 44], "plastic": [3, 17, 22, 24, 41, 50], "backward": [3, 22], "after": [3, 4, 5, 6, 7, 12, 13, 17, 22, 24, 44, 50], "Of": [3, 22], "particular": [3, 6, 7, 22], "interest": [3, 6, 9, 22, 50], "get_delay_vari": [3, 21, 22, 24, 41], "get_extra_parameter_nam": [3, 21, 22], "getter": [3, 22], "get_extra_paramet": [3, 21, 22], "exclud": [3, 22, 24], "get_weight_mean": [3, 21, 22, 24, 41], "get_weight_vari": [3, 21, 22, 24, 41], "grid2d": 3, "aspect_ratio": 3, "dx": 3, "dy": 3, "y0": 3, "fill_ord": 3, "sequenti": [3, 50], "basestructur": [3, 18, 24, 44, 45], "structur": [3, 17, 18, 24, 27, 34, 41, 44, 45, 50], "coordin": [3, 6, 7, 22, 24, 44, 45, 47], "corner": 3, "ratio": 3, "calculate_s": 3, "docstr": 3, "goe": 3, "generate_posit": 3, "calcul": [3, 17, 18, 21, 24, 41, 45], "parameter_nam": [3, 17, 44], "grid3d": 3, "aspect_ratioxi": 3, "aspect_ratioxz": 3, "dz": 3, "z0": 3, "3d": 3, "if_cond_exp": 3, "ifcondexpbas": [3, 24, 26], "if_curr_alpha": 3, "ifcurralpha": [3, 24, 26], "if_curr_delta": 3, "ifcurrdelta": [3, 15, 24, 26], "if_curr_exp": 3, "ifcurrexpbas": [3, 24, 26], "indexbasedprobabilityconnector": [3, 21, 22], "index_express": [3, 21, 22], "upon": [3, 6, 7, 22, 26], "indic": [3, 6, 10, 18, 19, 22, 24, 41, 44, 45, 48, 50], "dist": [3, 22, 50, 51], "variabl": [3, 7, 14, 17, 18, 19, 22, 24, 25, 27, 28, 30, 42, 43, 44, 45, 48, 50], "evalu": [3, 22], "izhikevich": [3, 26, 30], "izkcurrexpbas": [3, 24, 26], "kernelconnector": [3, 21, 22], "shape_pr": [3, 22], "shape_post": [3, 22], "shape_kernel": [3, 22], "weight_kernel": [3, 22], "delay_kernel": [3, 22], "shape_common": [3, 22], "pre_sample_steps_in_post": [3, 22], "pre_start_coords_in_post": [3, 22], "post_sample_steps_in_pr": [3, 22], "post_start_coords_in_pr": [3, 22], "usual": [3, 6, 22, 44], "input": [3, 6, 7, 9, 14, 15, 18, 19, 22, 24, 25, 26, 28, 44, 45, 48, 50], "pop": [3, 17, 20, 22, 24], "stepx": [3, 22], "stepi": [3, 22], "offx": [3, 22], "offi": [3, 22], "futur": [3, 22], "lastneuronselect": [3, 37, 40], "spike_buffer_s": [3, 40], "64": [3, 6, 7, 40, 50], "abstractpartnerselect": [3, 37, 40, 41], "partner": [3, 40, 41], "pick": [3, 40], "buffer": [3, 19, 24, 40, 45, 48], "hold": [3, 17, 19, 24, 40, 50], "evenli": 3, "straight": 3, "multiplicativeweightdepend": 3, "weightdependencemultipl": [3, 32, 35], "noisycurrentsourc": [3, 17, 20], "stdev": [3, 20], "dt": [3, 20], "noisi": [3, 20], "nois": [3, 20], "updat": [3, 20, 22, 24, 27, 41, 45, 50], "parallel_saf": 3, "wrappedrng": 3, "wrapper": [3, 41], "randomst": [3, 50], "mersenn": 3, "twister": 3, "prng": 3, "normal_clip": 3, "mu": 3, "inf": [3, 50], "normal_clipped_to_boundari": 3, "binomi": [3, 51], "p": [3, 7, 24, 44, 45, 47, 51], "beta": 3, "scale": [3, 5, 7, 15, 18, 24, 27, 28, 29, 34, 35, 41], "gamma": [3, 51], "k": 3, "theta": 3, "lognorm": 3, "normal": [3, 6, 24, 51], "loc": 3, "lambda_": 3, "lam": 3, "uniform_int": 3, "randint": 3, "vonmis": [3, 51], "kappa": 3, "onetooneconnector": [3, 21, 22], "use_direct_matrix": [3, 21, 22], "pooldens": 3, "localonlypooldens": [3, 24, 29], "pooldenseconnector": [3, 21, 22], "total": [3, 6, 10, 12, 15, 17, 19, 21, 22, 24, 34, 35, 41, 44, 50], "element": [3, 6, 22, 23, 50, 52], "num": [3, 6, 22], "get_post_pool_shap": [3, 21, 22], "pre_shap": [3, 22], "incoming_slic": [3, 22], "pre_vertex_slic": [3, 22], "cellclass": [3, 44], "cellparam": [3, 44], "initial_valu": [3, 17, 24, 44], "additional_paramet": [3, 44], "populationbas": [3, 17, 44], "individu": [3, 17, 44, 50], "instanti": [3, 22, 44], "initi": [3, 7, 17, 18, 19, 24, 25, 27, 28, 30, 41, 42, 43, 44, 47], "state": [3, 4, 5, 6, 7, 17, 19, 24, 25, 27, 28, 30, 42, 43, 44, 45, 48, 50], "function": [3, 4, 6, 7, 15, 17, 18, 19, 24, 25, 26, 28, 30, 42, 43, 44, 50, 51], "add_placement_constraint": [3, 17, 44], "placement": [3, 7, 18, 19, 24, 44, 45, 47], "constraint": [3, 44], "processor": [3, 44], "simulatorrunningexcept": [3, 5, 17, 44], "simulatornotsetupexcept": [3, 5, 17, 44], "simulatorshutdownexcept": [3, 5, 17, 44], "over": [3, 6, 7, 10, 17, 18, 23, 24, 41, 44, 49], "idmixin": [3, 17, 44], "all_cel": [3, 17, 44], "annot": [3, 17, 44, 50], "can_record": [3, 17, 44], "answer": [3, 44], "question": [3, 24, 41, 44, 45, 50], "celltyp": [3, 17, 44], "conductance_bas": [3, 17, 19, 24, 44], "constructor": [3, 4, 6, 17, 44], "__init__": [3, 5, 17, 44], "current_valu": [3, 17, 44], "initialvalueshold": [3, 44], "templat": [3, 17, 24, 44, 45, 48, 50], "population_default": [3, 44], "txt": [3, 17, 44], "engin": [3, 17, 24, 44, 45, 48, 50], "human": [3, 17, 24, 44, 45, 48, 50], "custom": [3, 17, 44, 50], "associ": [3, 17, 20, 24, 44, 45, 48, 50], "dictionari": [3, 17, 24, 44, 45, 48, 50], "context": [3, 17, 24, 44, 45, 48, 50], "templateengin": [3, 17, 44, 50], "substitut": [3, 17, 44, 50], "unit": [3, 17, 18, 19, 24, 25, 27, 28, 42, 43, 44, 45, 48, 50], "first_id": [3, 17, 44, 50], "member": [3, 24, 44], "simplifi": [3, 20, 44], "pointless": [3, 44], "possibli": [3, 13, 44], "paramter_nam": [3, 44], "parameterhold": [3, 17, 19, 24, 44, 45], "previous": [3, 5, 44, 50], "collect": [3, 21, 44, 50], "irrelev": [3, 44, 50], "behav": [3, 44, 50], "delet": [3, 44, 50], "put": [3, 5, 13, 17, 44, 50], "its": [3, 5, 14, 24, 44, 50], "doc": [3, 6, 44, 50], "refer": [3, 7, 24, 44, 50], "html": [3, 44, 50], "id_to_local_index": [3, 17, 44], "cell_id": [3, 44], "count": [3, 44, 50], "made": [3, 41, 44], "membran": [3, 7, 44], "numer": [3, 6, 44], "map": [3, 7, 15, 19, 24, 25, 26, 28, 30, 42, 43, 44, 50], "accept": [3, 7, 10, 14, 19, 24, 44, 45, 50], "millivolt": [3, 17, 44], "nanoamp": [3, 17, 44], "millisecond": [3, 4, 5, 6, 17, 19, 24, 41, 44, 45, 48, 50], "microsiemen": [3, 17, 44], "nanofarad": [3, 17, 44], "event": [3, 4, 6, 7, 10, 17, 24, 44, 45, 48], "exampl": [3, 44], "v": [3, 6, 9, 15, 17, 26, 44, 50, 51], "70": [3, 26, 44], "rand_distr": [3, 44], "gsyn_exc": [3, 17, 26, 44, 50], "lambda": [3, 44], "65": [3, 7, 26, 44], "inject": [3, 6, 7, 10, 17, 19, 20, 24, 44, 45, 48], "last_id": [3, 17, 44], "position_gener": [3, 17, 44], "3xn": [3, 44], "to_fil": [3, 17, 44], "sampling_interv": [3, 17, 19, 24, 44, 45, 48], "io": [3, 6, 17, 44, 49, 50], "rawio": [3, 17, 44], "case": [3, 19, 20, 24, 44, 50, 52], "suppli": [3, 44], "give": [3, 6, 7, 10, 15, 17, 24, 44, 45, 48], "_set": [3, 44], "tau_m": [3, 6, 9, 15, 24, 26, 30, 44], "20": [3, 24, 26, 34, 44], "v_rest": [3, 6, 9, 15, 24, 26, 30, 44], "set_max_atoms_per_cor": [3, 17, 44], "max_atoms_per_cor": [3, 7, 14, 19, 24, 41, 44, 45, 48], "set_stat": [3, 17, 44], "as_matrix": [3, 44, 50], "view_index": [3, 17, 44, 50], "public": [3, 44, 50], "accessor": [3, 44, 50], "data_index": [3, 44, 50], "baseio": [3, 17, 44, 50], "bring": [3, 44, 50], "relev": [3, 44, 50], "storag": [3, 44, 50], "back": [3, 6, 10, 12, 41, 44, 45, 50], "parent": [3, 17, 44, 50], "selector": [3, 19, 24, 44, 45], "subset": [3, 19, 24, 44, 45], "In": [3, 17, 19, 44, 50], "most": [3, 5, 19, 20, 24, 44, 45], "wai": [3, 14, 22, 44, 50], "behaviour": [3, 7, 10, 17, 21, 44], "It": [3, 6, 7, 41, 44, 50], "chang": [3, 5, 7, 10, 19, 20, 24, 29, 38, 41, 44, 45], "reflect": [3, 44], "vice": [3, 44], "versa": [3, 44], "handl": [3, 6, 14, 17, 19, 24, 44, 45, 48], "abstracts": [3, 44], "populationapplicationvertex": [3, 6, 7, 12, 15, 17, 19, 24, 44, 45, 48], "underli": [3, 24, 44], "ideal": [3, 14, 44], "4": [3, 6, 7, 19, 20, 24, 26, 41, 44, 45, 47, 49, 50], "respons": [3, 26, 42, 44], "populationview_default": [3, 44], "No": [3, 44], "parallel": [3, 41, 44, 50], "7": [3, 7, 24, 44, 45, 47], "get_spik": [3, 44], "grandpar": [3, 17, 44], "root": [3, 44], "tree": [3, 44], "sinc": [3, 17, 20, 44], "immedi": [3, 44], "cours": [3, 44], "littl": [3, 44, 50], "mislead": [3, 44], "great": [3, 44], "assert": [3, 44], "pv": [3, 44], "index_in_grandpar": [3, 17, 44], "standardcurrentsourc": [3, 19, 24, 44], "currentsourc": [3, 44], "wa": [3, 41, 44, 50], "everyth": [3, 24, 44, 45], "spike_tim": [3, 17, 44, 45], "cm": [3, 6, 9, 15, 24, 26, 30, 44], "spinnaker_get_spik": [3, 17, 44], "pulic": [3, 44], "written": [3, 17, 24, 33, 41, 44], "metadata": [3, 19, 44, 50], "presynaptic_popul": 3, "postsynaptic_popul": 3, "receptor_typ": [3, 17, 21, 44], "pep": 3, "8": [3, 6, 7, 24, 47, 50], "spell": 3, "correctli": [3, 17, 50], "dest": 3, "abstractstaticsynapsedynam": [3, 24, 41], "unsupport": [3, 17, 41], "randombyweightelimin": [3, 37, 38], "threshold": [3, 6, 7, 9, 15, 24, 26, 38, 43], "prob_elim_depress": [3, 38], "0245": [3, 38], "prob_elim_potenti": [3, 38], "00013600000000000003": [3, 38], "abstractelimin": [3, 37, 38, 41], "elimin": [3, 24, 36, 37, 41], "below": [3, 38], "depress": [3, 38], "equal": [3, 38, 50], "also": [3, 6, 7, 14, 17, 18, 24, 38, 52], "parameters_po": 3, "parameters_nam": 3, "correct": [3, 14, 50], "available_distribut": 3, "gslrng": 3, "nativerng": 3, "desir": 3, "keyword": 3, "wikipedia": 3, "rd": 3, "50": [3, 6, 12, 26], "8658764": 3, "comment": 3, "outsid": 3, "redrawn": [3, 51], "trail": 3, "underscor": 3, "randomselect": [3, 37, 40], "randomstructur": 3, "origin": [3, 4, 6, 24], "subclass": [3, 5, 10], "centr": 3, "stdpmechan": 3, "synapsedynamicsstdp": [3, 24, 41], "smallworldconnector": [3, 21, 22], "degre": [3, 22], "statist": [3, 22, 50, 51], "small": [3, 22], "world": [3, 22], "network": [3, 14, 22], "typic": [3, 5, 18, 19, 22, 24, 45, 47, 48, 50], "scale_factor": 3, "periodic_boundari": 3, "cartesian": 3, "dimension": [3, 19, 24, 45], "yz": 3, "xyz": 3, "\u00b5m": 3, "adjust": 3, "x_min": 3, "x_max": 3, "z_min": 3, "z_max": 3, "xy": 3, "xz": 3, "distance_gener": 3, "f": 3, "b": [3, 24, 26, 30], "expand": [3, 13, 18, 24], "topologi": 3, "scipi": [3, 51], "pipermail": 3, "discuss": 3, "2007": 3, "april": 3, "027203": 3, "sphere": 3, "radiu": 3, "spheric": 3, "spinnakerproject": 3, "spikepairrul": 3, "timingdependencespikepair": [3, 32, 34], "spikesourcearrai": [3, 17, 45], "spikesourcepoisson": [3, 17, 45], "durat": [3, 15, 45], "500": [3, 4, 6, 15, 45], "max_rat": [3, 17, 45], "staticsynaps": 3, "synapsedynamicsstat": [3, 24, 41], "stepcurrentsourc": [3, 17, 20], "structuralmechanismstdp": 3, "synapsedynamicsstructuralstdp": [3, 24, 41], "structuralmechanismstat": 3, "synapsedynamicsstructuralstat": [3, 24, 41], "destin": [3, 22], "src": 3, "tgt": 3, "multipli": 3, "quantiti": [3, 50], "_": [3, 26, 42, 50], "clean": 3, "softwar": 3, "compatible_output": [3, 17], "care": 3, "non": [3, 4, 6, 17, 24, 27, 41, 44, 50], "exist": [3, 10, 17, 41, 44, 50], "get_current_tim": 3, "get_machin": 3, "get_max_delai": 3, "combin": [3, 24, 29, 41, 50], "like": [3, 4, 5, 6, 24, 29, 41, 45, 50], "144": [3, 7, 26], "notimplementederror": [3, 50], "wide": 3, "clamp": 3, "least": 3, "min": [3, 15, 17, 35, 50], "get_time_step": 3, "integr": [3, 6, 9, 15, 26, 30], "initialis": [3, 4, 6, 17, 24], "list_standard_model": 3, "standardcelltyp": 3, "num_process": 3, "process": [3, 21, 24, 29], "doesn": [3, 6, 7, 14, 19, 24, 50], "far": [3, 18], "writer": [3, 5, 50], "record_gsyn": [3, 17, 44], "face": 3, "record_v": [3, 17, 44], "voltag": [3, 6, 7, 41, 50], "simtim": 3, "advanc": 3, "run_for": 3, "run_until": 3, "tstop": 3, "until": [3, 6, 11], "complet": [3, 24], "set_number_of_neurons_per_cor": 3, "neuron_typ": [3, 5], "max_permit": [3, 5], "ceil": [3, 5], "recommend": [3, 17], "abstractpopulationvertex": [3, 5, 7, 14, 17, 20, 21, 24], "auto": 3, "extra_param": 3, "main": 3, "log": [3, 51], "socketaddress": 3, "socket": [3, 6], "argumet": 3, "command_contain": 4, "local_host": [4, 6, 10], "local_port": [4, 6, 8, 10], "19999": [4, 6], "databaseconnect": [4, 6], "send": [4, 6, 7, 8, 10, 12, 14, 18, 21, 45, 48, 49], "multicast": [4, 6, 7, 10, 14, 45, 48, 49], "abstractsendmemulticastcommandsvertex": [4, 6, 7, 8, 10], "resum": [4, 6, 7, 8, 10, 12], "paus": [4, 6, 7, 8, 10], "live_packet_gather_label": [4, 6], "liveeventconnect": [4, 6], "ethernet": [4, 6, 7, 8, 49], "attach": [4, 8], "lpg": 4, "anoth": [4, 15, 34, 35, 41], "rout": [4, 7, 13, 19, 24], "via": [4, 7, 10, 14, 19, 24, 41, 45, 48, 50], "receive_label": [4, 6], "spif_host": [4, 6], "spif_port": [4, 6], "3332": [4, 6], "events_per_packet": [4, 6], "time_per_packet": [4, 6], "spif": [4, 6, 7], "locat": [4, 6, 7, 24, 41, 45, 47, 50], "soon": [4, 6], "empti": [4, 5, 6, 14, 50], "microsecond": [4, 5, 6], "toolchain": [4, 6], "init_callback": [4, 6], "take": [4, 6, 24, 50], "pause_stop_callback": [4, 6], "referenc": [4, 6, 24], "live_event_callback": [4, 6], "recept": [4, 6], "stai": [4, 6], "start_resume_callback": [4, 6], "send_label": [4, 6], "livespikereceiv": [4, 6], "neuron_id": [4, 6], "send_full_kei": [4, 6], "full": [4, 6], "directli": [4, 5, 6, 7, 51], "poisson_label": [4, 6], "start_callback": [4, 6], "hz": [4, 6], "neuron_id_r": [4, 6], "fecdatawrit": 5, "utilsdatawrit": 5, "design": [5, 50], "abstractspinnakerbas": 5, "repositori": 5, "data_statu": 5, "simulation_time_step_u": 5, "explicitli": 5, "simulation_time_step_m": 5, "howev": 5, "still": 5, "avail": [5, 14, 24, 41, 50], "fecdataview": 5, "utilsdataview": 5, "detail": 5, "weherev": 5, "inherit": 5, "classmethod": [5, 17], "increment": 5, "counter": [5, 14], "projectionproject": 5, "spinnutilsexcept": 5, "simulation_time_step_per_m": 5, "unavail": 5, "rtpye": 5, "being": [5, 6, 7, 14, 18, 19, 23, 24, 29, 45, 48, 50], "report": [5, 6, 7, 13, 24, 45, 47], "pushbot": [6, 7, 9, 10, 11, 12], "spinnakermanchest": 6, "import": [6, 50], "real": [6, 7], "reduc": 6, "gain": 6, "fpga_link_id": [6, 7], "fpga_id": [6, 7], "board_address": [6, 7, 12, 45, 48], "chip_coord": [6, 7], "applicationfpgavertex": [6, 7], "enum": [6, 8, 10, 11, 20, 24, 45, 47, 49, 50], "key_16_bit": 6, "key_payload_16_bit": 6, "key_payload_32_bit": 6, "key_byt": 6, "max_valu": [6, 7, 8], "payload": [6, 7, 10, 49], "payload_byt": 6, "spinnaker_link": [6, 7, 8], "applicationspinnakerlinkvertex": [6, 7, 12], "link": [6, 7, 9, 49], "cochlea": [6, 7], "abstractpynnneuronmodelstandard": [6, 7, 15, 17, 24, 26], "abstract": [6, 7, 8, 10, 14, 17, 18, 20, 22, 24, 27, 28, 29, 33, 34, 35, 38, 39, 40, 41, 42, 44, 51], "lif": [6, 7, 9], "without": [6, 7, 10, 17, 21, 24, 29, 41, 45, 48], "variou": [6, 7], "model_nam": [6, 7, 9, 15, 24, 26, 27], "neuron_model": [6, 7, 9, 15, 17, 24, 26, 27], "abstractneuronmodel": [6, 7, 9, 15, 24, 26, 27], "soma": [6, 7, 9, 15, 24, 26], "input_typ": [6, 7, 9, 15, 17, 24, 26, 27], "abstractinputtyp": [6, 7, 9, 15, 24, 26, 27, 28], "dynam": [6, 7, 9, 14, 15, 18, 21, 24, 26, 29, 41], "threshold_typ": [6, 7, 9, 15, 17, 24, 26, 27], "abstractthresholdtyp": [6, 7, 9, 15, 24, 26, 27, 43], "fire": [6, 7, 9, 15, 24, 26, 30], "additional_input_typ": [6, 7, 9, 15, 24, 26, 27], "abstractadditionalinput": [6, 7, 9, 15, 24, 25, 26, 27], "environment": [6, 7, 9, 15, 24, 26], "spikes_per_second": [6, 7, 17, 24], "ring_buffer_sigma": [6, 7, 17, 24], "incoming_spike_buffer_s": [6, 7, 17, 24], "n_steps_per_timestep": [6, 7, 24, 27], "drop_late_spik": [6, 7, 17, 24, 46, 47], "retina_kei": [6, 7, 49], "spinnaker_link_id": [6, 7, 12], "polar": [6, 7], "retina": [6, 7, 8, 10, 11, 49], "top": [6, 7, 50], "down": [6, 7, 10, 45, 48], "128": [6, 7], "get_machine_gixed_key_and_mask": [6, 7], "basekeyandmask": [6, 7, 24], "multicastcommand": [6, 7, 8, 10, 12, 49], "base_kei": [6, 7], "304": [6, 7], "240": [6, 7], "sub_width": [6, 7], "sub_height": [6, 7], "application2dspinnakerlinkvertex": [6, 7], "hasshapekeyfield": [6, 7, 17, 18], "icub": [6, 7], "spinnakerlink": [6, 7, 12], "rectangl": [6, 7], "split": [6, 7, 14, 24, 45, 50], "effici": [6, 7], "n_machine_vertic": [6, 7], "machine_vertex": [6, 7, 29, 45], "align": [6, 7], "those": [6, 7, 17, 19, 24, 44, 45, 47], "app_mask": [6, 7], "app_kei": [6, 7], "iff": [6, 7], "shift": [6, 7, 18, 24, 32], "munich": [6, 49], "oper": [6, 14, 24, 41, 49], "uart": [6, 49], "bias_id": [6, 49], "new_kei": [6, 49], "pwm_signal": [6, 49], "time_in_m": [6, 49], "sensor_id": [6, 49], "active_tim": [6, 49], "total_period": [6, 49], "veloc": [6, 49], "melodi": [6, 10, 12, 49], "timer_period": [6, 49], "ever": [6, 15, 35, 49], "request": [6, 18, 24, 49, 50], "retina_payload": [6, 49], "transmiss": [6, 49], "30": [6, 7, 26], "sample_tim": [6, 7], "4096": [6, 7], "update_tim": [6, 7], "512": [6, 7], "delay_tim": [6, 7], "delta_threshold": [6, 7], "23": [6, 7], "continue_if_not_differ": [6, 7], "abstractoneapponemachinevertex": [6, 7], "abstractvertexwithedgetodependentvertic": [6, 7], "omnibot": [6, 7], "motor": [6, 7, 10, 11, 12], "silicon": [6, 7, 8], "left": [6, 7, 11], "pushbotethernetleddevic": [6, 8, 10, 12], "led": [6, 10, 11, 12], "start_active_time_front": [6, 10, 12], "start_active_time_back": [6, 10, 12], "start_total_period": [6, 10, 12], "start_frequ": [6, 10, 12], "timesteps_between_send": [6, 10], "pushbotethernetdevic": [6, 8, 10], "pushbotl": [6, 8, 10, 11, 12], "set_command_protocol": [6, 8, 10], "command_protocol": [6, 10], "shutdown": [6, 10], "separ": [6, 7, 10, 14, 29, 41, 45, 50], "pushbotethernetlaserdevic": [6, 8, 10, 12], "laser": [6, 10, 11, 12], "start_active_tim": [6, 10, 12], "pushbotlas": [6, 8, 10, 11, 12], "pushbotethernetmotordevic": [6, 8, 10, 12], "pushbotmotor": [6, 8, 10, 11, 12], "pushbotethernetretinadevic": [6, 8, 10], "resolut": [6, 8, 10, 11, 12], "pushbot_ip_address": [6, 9, 10], "pushbot_port": [6, 9, 10], "56000": [6, 10], "injector_port": [6, 10], "retina_injector_label": [6, 10], "pushbotretinainjector": [6, 10], "abstractpushbotretinadevic": [6, 7, 8, 10, 12], "pushbotretinaresolut": [6, 8, 10, 11, 12], "pushbotretinaconnect": [6, 8, 10], "injector": [6, 7, 10, 48], "pushbotethernetspeakerdevic": [6, 8, 10, 12], "speaker": [6, 10, 11, 12], "start_melodi": [6, 10, 12], "pushbotspeak": [6, 8, 10, 11, 12], "abstractpushbotoutputdevic": [6, 7, 8, 11], "pushbotlifethernet": [6, 8, 9], "leaki": [6, 9, 15, 26, 30], "bot": [6, 9], "v_reset": [6, 9, 15, 24, 26, 30], "tau_syn_": [6, 9, 15, 24, 26, 42], "tau_syn_i": [6, 9, 15, 24, 26, 42], "tau_refrac": [6, 9, 15, 24, 26, 30], "i_offset": [6, 9, 15, 24, 26, 30], "isyn_exc": [6, 9, 15, 24, 26, 42], "isyn_inh": [6, 9, 15, 24, 26, 42], "pushbotlifspinnakerlink": [6, 8, 9], "motor_0_leaki": [6, 8, 11], "motor_0_perman": [6, 8, 11], "motor_1_leaki": [6, 8, 11], "motor_1_perman": [6, 8, 11], "pushbotretinaview": [6, 8, 11], "retina_resolut": [6, 11], "viewer": [6, 11], "run_tim": [6, 11], "run_until_clos": [6, 8, 11], "close": [6, 8, 10, 11, 17], "speaker_melodi": [6, 8, 11], "speaker_ton": [6, 8, 11], "pushbotspinnakerlinkleddevic": [6, 8, 12], "pushbotspinnakerlinklaserdevic": [6, 8, 12], "pushbotspinnakerlinkmotordevic": [6, 8, 12], "pushbotspinnakerlinkretinadevic": [6, 8, 12], "new_key_command_payload": [6, 8, 12], "obtain": [6, 12, 19, 22, 24, 45], "routing_info": [6, 7, 12, 19, 24, 45], "pushbotspinnakerlinkspeakerdevic": [6, 8, 12], "100": [6, 10, 12], "create_databas": [6, 7], "n_atom": [6, 7, 14, 17, 19, 24, 29, 45, 46, 47], "incoming_fpga_connect": [6, 7], "fpgaconnect": [6, 7], "fpga": [6, 7], "traffic": [6, 7], "outgoing_fpga_connect": [6, 7], "outgo": [6, 7, 10, 14, 45, 47], "n_machine_vertices_per_link": [6, 7], "track": [6, 7], "fault": [6, 7], "pipe": [6, 7], "input_x_shift": [6, 7], "input_y_shift": [6, 7], "application2dfpgavertex": [6, 7], "chip": [6, 7, 14, 24, 41, 45, 47, 50], "fgpa": [6, 7], "spikeinjector": [6, 46, 48], "register_database_notification_request": 6, "notify_port": 6, "ack_port": 6, "run_forev": 6, "sync_tim": 6, "forev": [6, 10], "continu": 6, "platform": 6, "min_valu": [7, 8], "protocol_properti": [7, 8], "send_typ": [7, 8], "time_between_send": [7, 8, 10], "create_edg": 7, "neuron_impl": [7, 17, 24], "pynn_model": [7, 24], "hascustomatomkeymap": [7, 19], "dev": 7, "abstractneuronimpl": [7, 24, 27], "commun": [7, 10, 49], "abstractsplittercommon": [7, 14, 24, 45, 48], "app": [7, 13, 14, 20, 24], "colour": [7, 19, 24, 45], "pre_vertex": [7, 14, 19, 21], "routinginfo": [7, 19, 45], "atom_id": [7, 19], "come": [7, 14, 21], "hardwar": [7, 26], "logic": [7, 14], "intenum": 7, "66": 7, "176": 7, "67": 7, "48": 7, "96": 7, "112": 7, "80": [7, 26], "odd": 7, "11": [7, 15, 24, 26, 43, 47], "13": [7, 24], "15": [7, 24], "12": [7, 24, 47], "14": [7, 24], "17": 7, "get_payload": 7, "unknown": 7, "func": 7, "limit": [7, 50], "mapper": 7, "usb": 7, "31": 7, "drop": [7, 24], "assembl": 7, "input_kei": 7, "input_rout": 7, "multicast_packet": [7, 10], "abstracteieiodatael": [7, 10], "sendtyp": [7, 8, 10], "interv": [7, 10, 17, 19, 24, 45, 48], "arbitrari": [7, 10], "app_vertex": [7, 14, 17, 18, 20, 24, 41, 45, 47], "abstractgeneratesdataspecif": [7, 24, 45, 47], "abstracthasassociatedbinari": [7, 24, 45, 47], "providesprovenancedatafrommachineimpl": [7, 24, 45, 47], "times_the_input_buffer_lost_packet": [7, 24, 47], "executabletyp": [7, 24, 45, 47], "clase": [7, 24, 45, 47], "provenance_data": [7, 24, 45, 47], "remain": [7, 24, 45, 47], "proven": [7, 17, 21, 24, 41, 45, 47], "word": [7, 18, 19, 24, 33, 41, 45, 47, 50], "get_provenance_data_from_machin": [7, 24, 45, 47], "deriv": [7, 24, 45, 47], "error": [7, 10, 14, 19, 24, 29, 41, 45, 47, 50], "virtual": [7, 24, 45, 47], "raw": [7, 24, 45, 47], "reserv": [7, 19, 45, 48], "what": [7, 17, 23], "abstractsdram": [7, 14, 19, 24, 45, 47], "holder": [7, 13, 18, 21, 24, 25, 27, 28, 30, 42, 43, 50], "rangedictionari": [7, 24, 25, 27, 28, 30, 42, 43, 50], "state_vari": [7, 17, 24, 25, 27, 28, 30, 42, 43], "pushbottransl": [8, 10], "pushbotwificonnect": [8, 10], "recv_siz": [8, 10], "get_receive_method": [8, 10], "is_connect": [8, 10], "is_ready_to_rec": [8, 10], "local_ip_address": [8, 10], "remote_ip_address": [8, 10], "remote_port": [8, 10], "get_pushbot_wifi_connect": [8, 10], "descriptor": 8, "uses_payload": 10, "first_send_timestep": 10, "abstractpushbotoutputdevicedevic": 10, "pushbot_wifi_connect": 10, "wi": 10, "fi": 10, "remote_host": 10, "spinnmanioexcept": 10, "channel": [10, 18, 24], "1024": 10, "timeout": [10, 18, 24], "scp": 10, "wait": [10, 13], "bound": [10, 24], "dot": 10, "spinnmantimeoutexcept": 10, "remot": 10, "bytearrai": [10, 23, 24, 50], "abstractspynnakersplitterdelai": [13, 14, 18], "max_supported_delay_t": [13, 14], "accepts_edges_from_delay_vertex": [13, 14], "max_support_delai": [13, 14], "abstractsupportsonetoonesdraminput": [13, 14], "handles_source_vertex": [13, 14], "splitterabstractpopulationvertexfix": [13, 14], "invalid_pop_error_messag": [13, 14], "create_machine_vertex": [13, 14, 17, 45], "create_machine_vertic": [13, 14], "get_in_coming_slic": [13, 14], "get_in_coming_vertic": [13, 14], "get_out_going_slic": [13, 14], "get_out_going_vertic": [13, 14], "get_sdram_used_by_atom": [13, 14, 17, 45], "get_source_specific_in_coming_vertic": [13, 14], "machine_vertices_for_record": [13, 14], "reset_cal": [13, 14], "set_governed_app_vertex": [13, 14], "splitterabstractpopulationvertexneuronssynaps": [13, 14], "get_internal_multicast_partit": [13, 14], "get_internal_sdram_partit": [13, 14], "get_same_chip_group": [13, 14], "is_direct_poisson_sourc": [13, 14], "n_synapse_vertic": [13, 14], "splitterdelayvertexslic": [13, 14], "delay_recording_error": [13, 14], "need_exact_error_messag": [13, 14], "get_machine_vertex": [13, 14], "splitterpoissondeleg": [13, 14], "send_over_sdram": [13, 14], "spynnakersplitterfixedlegaci": [13, 14], "spynnaker_splitter_partition": [13, 14], "spynnaker_splitter_selector": [13, 14], "application_graph": 13, "applicationgraph": 13, "dsg": [13, 19], "projectionapplicationedg": [13, 17, 18, 21, 24, 41], "connectionhold": [13, 17, 21, 24, 50], "matric": [13, 24, 41], "purpos": 13, "connection_hold": 13, "store": [13, 17, 18, 24, 50], "retriev": [13, 24, 50], "them": [13, 14, 17, 24, 44], "done": [13, 19, 21, 24, 41], "entranc": 13, "tabl": [13, 24, 50], "compress": 13, "neural": [13, 24, 27], "report_fold": 13, "folder": 13, "abl": 14, "therefor": [14, 47], "themselv": [14, 24], "abil": 14, "delayextensionmachinevertex": [14, 18, 46, 47], "confirm": 14, "ask": [14, 17, 18, 24, 45], "larger": [14, 50], "tick": [14, 24], "splitter_nam": 14, "pleas": [14, 47], "try": 14, "structural_sz": [14, 24], "ring_buffer_shift": [14, 24], "chip_count": 14, "overrid": [14, 18, 19, 24], "chipcount": 14, "ones": [14, 50], "serv": 14, "all_syn_block_sz": [14, 24], "resourc": [14, 45], "multiregionsdram": 14, "hit": 14, "variable_to_record": 14, "vert": 14, "yet": [14, 47], "govern": 14, "pacmanconfigurationexcept": [14, 18], "alreadi": [14, 21, 41, 47], "allow_delay_extens": 14, "fed": 14, "meet": 14, "criteria": 14, "splitterabstractpopvertexneuronssynaps": 14, "intern": [14, 24, 50], "multicastedgepartit": 14, "abstractsdrampartit": 14, "abstractsynapsedynam": [14, 17, 18, 21, 24, 29, 41], "synapse_dynam": [14, 17, 18, 21, 24, 29], "delayextensionvertex": [14, 21, 46, 47], "deem": 14, "delayextensionssplitt": 14, "exact": [14, 50], "source_app_vertex": 14, "tracker": 14, "constantsdram": 14, "spikesourcepoissonvertex": [14, 17, 45], "splitterfixedlegaci": 14, "partition": 14, "bespok": 14, "satisfi": 14, "apv": 14, "splitteronetoonelegaci": 14, "rest": [14, 15, 26, 30, 41], "bad": [14, 24], "ifcondexpstoc": [15, 24, 26], "stochast": [15, 26, 43], "habenschuss": [15, 26, 43], "jonk": [15, 26, 43], "maass": [15, 26, 43], "w": [15, 26, 35, 43], "cortic": [15, 26, 43], "microcircuit": [15, 26, 43], "plo": [15, 26, 43], "biologi": [15, 26, 43], "2013": [15, 26, 43], "e1003311": [15, 26, 43], "doi": [15, 26, 34, 43], "1371": [15, 26, 43], "journal": [15, 26, 34, 43], "pcbi": [15, 26, 43], "1003311": [15, 26, 43], "c_m": [15, 26, 30], "v_": [15, 26, 30, 43], "v_thresh": [15, 24, 26, 43], "thresh": [15, 26, 43], "tau": [15, 26, 32, 34, 42], "syn": [15, 26, 42], "_e": [15, 26, 28, 42], "_i": [15, 26, 28, 42], "tau_": [15, 25, 26, 30, 34, 43], "refrac": [15, 26, 30], "i_": [15, 25, 26, 30], "e_rev_": [15, 24, 26, 28], "rev": [15, 26, 28], "e_rev_i": [15, 24, 26, 28], "du_th": [15, 24, 26, 43], "du_": [15, 26, 43], "tau_th": [15, 24, 26, 43], "init": [15, 17, 26, 30, 50], "ifcurdelta": 15, "ifcurrexpca2adapt": [15, 24, 26], "liu": [15, 26], "h": [15, 26], "wang": [15, 26], "2001": [15, 26], "adapt": [15, 26], "neurosci": [15, 26, 34], "25": [15, 26], "45": [15, 26], "1023": [15, 26], "1008916026143": [15, 26], "tau_ca2": [15, 24, 25, 26], "mathrm": [15, 25, 26, 42], "ca": [15, 25, 26], "i_ca2": [15, 24, 25, 26], "i_alpha": [15, 24, 25, 26], "alpha": [15, 25, 26, 32, 34], "if_curr_dual_exp": 15, "ifcurrdualexpbas": [15, 24, 26], "if_curr_exp_semd": 15, "ifcurrexpsemdbas": [15, 24, 26], "izhikevich_cond": 15, "izkcondexpbas": [15, 24, 26], "neuromodul": [15, 21, 24, 41], "synapsedynamicsneuromodul": [15, 24, 41], "pfisterspiketriplet": 15, "timingdependencepfisterspiketriplet": [15, 32, 34], "recurrentrul": 15, "timingdependencerecurr": [15, 32, 34], "spikenearestpairrul": 15, "timingdependencespikenearestpair": [15, 32, 34], "spikesourcepoissonvari": [15, 17, 45], "vogels2011rul": 15, "timingdependencevogels2011": [15, 32, 34], "weightdependenceadditivetriplet": [15, 32, 35], "w_min": [15, 24, 32, 35, 41], "w_max": [15, 24, 32, 35, 41], "a3_plu": [15, 32, 35], "01": [15, 26, 34, 35, 45, 50], "a3_minu": [15, 32, 35], "abstracthasaplusaminu": [15, 32, 35], "abstractweightdepend": [15, 32, 35, 41], "triplet": [15, 34, 35], "stdp": [15, 24, 31, 41], "a_3": [15, 35], "n_synapse_typ": [15, 24, 35, 41], "n_weight_term": [15, 32, 34, 35], "is_same_a": [15, 24, 32, 34, 35, 41], "weight_depend": [15, 24, 31, 32, 41], "weight_maximum": [15, 32, 35], "result": [15, 24, 29, 35, 41], "global_weight_scal": [15, 34, 35, 41], "synapse_weight_scal": [15, 34, 35, 41], "term": [15, 34, 35], "abstractacceptsincomingsynaps": [17, 18, 24], "clear_connection_cach": [17, 18, 24], "get_connections_from_machin": [17, 18, 24], "get_synapse_id_by_target": [17, 18, 24, 27, 41, 42], "set_synapse_dynam": [17, 18, 24], "verify_splitt": [17, 18], "abstracthasdelaystag": [17, 18, 47], "n_delay_stag": [17, 18, 21, 24, 46, 47], "abstractmaxspik": [17, 18], "max_spikes_per_second": [17, 18, 45], "max_spikes_per_t": [17, 18, 45], "abstractneuronexpand": [17, 18], "gen_neurons_on_machin": [17, 18], "neuron_generator_region": [17, 18], "read_generated_initial_valu": [17, 18], "abstractsynapseexpand": [17, 18, 24], "bit_field_s": [17, 18, 24], "connection_generator_region": [17, 18, 24], "gen_on_machin": [17, 18, 24], "max_gen_data": [17, 18, 24], "read_generated_connection_hold": [17, 18, 24], "hassynaps": [17, 18, 24], "receivessynapticinputsoversdram": [17, 18, 24], "n_bytes_per_input": [17, 18], "n_bytes_for_transf": [17, 18, 24], "sendssynapticinputsoversdram": [17, 18, 24, 45], "supportsstructur": [17, 18, 24, 45], "set_structur": [17, 18, 24, 45], "max_params_byt": [17, 19], "get_generator_typ": [17, 19], "is_param_generat": [17, 19], "param_generator_id": [17, 19], "param_generator_param": [17, 19], "param_generator_params_size_in_byt": [17, 19], "type_has_gener": [17, 19], "make_missing_str": [17, 19], "eieiospikerecord": [17, 19], "set_record": [17, 19, 24, 45, 46, 48], "multispikerecord": [17, 19], "neuronrecord": [17, 19, 24], "max_rewir": [17, 19], "packets_typ": [17, 19], "rewiring_typ": [17, 19], "add_region_offset": [17, 19], "check_index": [17, 19], "get_buffer_data_typ": [17, 19, 24, 45, 46, 48], "get_buffered_sdram": [17, 19], "get_buffered_sdram_per_record": [17, 19], "get_buffered_sdram_per_timestep": [17, 19], "get_data_typ": [17, 19, 24, 45, 46, 48], "get_event_recordable_vari": [17, 19], "get_generator_sdram_usage_in_byt": [17, 19], "get_max_buffered_sdram_per_record": [17, 19], "get_max_variable_sdram_usag": [17, 19], "get_metadata_sdram_usage_in_byt": [17, 19], "get_recordable_vari": [17, 19, 24, 27, 45, 46, 48], "get_recorded_indic": [17, 19], "get_region": [17, 19], "get_region_s": [17, 19], "get_sampling_interval_m": [17, 19, 24, 45, 46, 48], "get_sampling_overflow_sdram": [17, 19], "get_variable_sdram_usag": [17, 19], "is_global_generat": [17, 19], "is_record": [17, 19, 24, 27, 45], "neurons_record": [17, 19], "recorded_ids_by_slic": [17, 19], "recorded_region_id": [17, 19], "recording_vari": [17, 19], "set_max_rewires_per_t": [17, 19], "write_neuron_recording_region": [17, 19], "get_current_state_valu": [17, 19, 24], "get_initial_state_valu": [17, 19, 24], "get_neurons_record": [17, 19, 24, 45, 46, 48], "get_parameter_valu": [17, 19, 24, 45], "get_recording_region": [17, 19, 24, 45, 46, 48], "get_state_vari": [17, 19, 24], "get_unit": [17, 19, 24, 27, 45, 46, 48], "set_current_state_valu": [17, 19, 24], "set_initial_state_valu": [17, 19, 24], "set_not_record": [17, 19, 24, 45, 46, 48], "set_parameter_valu": [17, 19, 24, 45], "inject_into": [17, 20], "set_app_vertex": [17, 20], "set_popul": [17, 20], "currentsourceid": [17, 20], "ac_sourc": [17, 20], "dc_sourc": [17, 20], "noisy_current_sourc": [17, 20], "no_sourc": [17, 20], "n_sourc": [17, 20], "step_current_sourc": [17, 20], "delayafferentapplicationedg": [17, 21], "delayedapplicationedg": [17, 21, 47], "add_synapse_inform": [17, 21], "synapse_inform": [17, 18, 21, 24], "undelayed_edg": [17, 21], "delay_edg": [17, 21, 47], "get_local_provenance_data": [17, 21], "is_neuromodul": [17, 21], "add_pre_run_connection_hold": [17, 21], "may_generate_on_machin": [17, 21], "may_use_direct_matrix": [17, 21], "post_popul": [17, 21], "postpop_is_view": [17, 21], "pre_popul": [17, 21], "pre_run_connection_hold": [17, 21], "prepop_is_view": [17, 21], "synapse_type_from_dynam": [17, 21], "neuronparamet": [17, 23], "get_dataspec_datatyp": [17, 23], "get_valu": [17, 23, 24, 41], "iterator_by_slic": [17, 23], "additional_input": [17, 24], "local_onli": [17, 24], "structural_plast": [17, 24], "generatordata": [17, 24], "base_s": [17, 24], "gen_data": [17, 24], "masterpoptableasbinarysearch": [17, 24], "add_application_entri": [17, 24], "add_invalid_application_entri": [17, 24], "get_allowed_row_length": [17, 24], "get_master_population_table_s": [17, 24], "get_next_allowed_address": [17, 24], "get_pop_table_data": [17, 24], "initialise_t": [17, 24], "max_core_mask": [17, 24], "max_index": [17, 24], "max_n_neurons_per_cor": [17, 24], "neurondata": [17, 24], "generate_data": [17, 24], "read_initial_data": [17, 24], "reset_gener": [17, 24], "commonregion": [17, 24], "populationmachinecommon": [17, 24], "get_profile_data": [17, 24, 45], "get_recording_region_base_address": [17, 24, 45], "populationmachinesynaps": [17, 24], "bit_field_base_address": [17, 24], "regeneratable_sdram_blocks_and_s": [17, 24], "set_do_synapse_regener": [17, 24], "maxrowinfo": [17, 24], "delayed_max_byt": [17, 24], "delayed_max_n_synaps": [17, 24], "delayed_max_word": [17, 24], "undelayed_max_byt": [17, 24], "undelayed_max_n_synaps": [17, 24], "undelayed_max_word": [17, 24], "convert_to_connect": [17, 24], "get_max_row_info": [17, 24], "get_maximum_delay_supported_in_m": [17, 24], "get_synaps": [17, 24], "read_all_synaps": [17, 24], "synapseregion": [17, 24], "bitfield_filt": [17, 24], "connection_build": [17, 24], "pop_tabl": [17, 24], "structural_dynam": [17, 24], "synapse_param": [17, 24], "synaptic_matrix": [17, 24], "synapticmatric": [17, 18, 24, 41], "get_index": [17, 24], "host_generated_block_addr": [17, 24], "on_chip_generated_matrix_s": [17, 24], "write_synaptic_data": [17, 24], "synapticmatrixapp": [17, 24], "gen_siz": [17, 24], "get_connect": [17, 24], "reserve_matric": [17, 24], "write_matrix": [17, 24], "core_params_base_s": [17, 24], "add_incoming_project": [17, 24], "atoms_shap": [17, 19, 24, 45, 48, 50], "combined_core_cap": [17, 24], "copy_initial_state_vari": [17, 24], "core_se": [17, 24], "current_source_id_list": [17, 24], "get_common_constant_sdram": [17, 24], "get_incoming_projections_from": [17, 24], "get_max_atoms_per_cor": [17, 24], "get_max_atoms_per_dimension_per_cor": [17, 24], "get_max_neuron_variable_sdram": [17, 24], "get_max_synapse_variable_sdram": [17, 24], "get_neuron_constant_sdram": [17, 24], "get_neuron_variable_sdram": [17, 24], "get_ring_buffer_shift": [17, 24], "get_sdram_usage_for_core_neuron_param": [17, 24], "get_sdram_usage_for_current_source_param": [17, 24], "get_sdram_usage_for_neuron_gener": [17, 24], "get_sdram_usage_for_neuron_param": [17, 24], "get_structural_dynamics_s": [17, 24], "get_synapse_dynamics_s": [17, 24], "get_synapse_expander_s": [17, 24], "get_synapse_params_s": [17, 24], "get_synapse_variable_sdram": [17, 24], "get_synapses_s": [17, 24], "get_weight_scal": [17, 24], "incoming_poisson_project": [17, 24], "incoming_project": [17, 24, 29, 41, 50], "initial_state_vari": [17, 24], "n_profile_sampl": [17, 24, 45], "n_synapse_cores_requir": [17, 24], "neuron_record": [17, 24], "pop_se": [17, 24], "read_initial_valu": [17, 24], "reset_to_first_timestep": [17, 24], "self_project": [17, 24], "set_max_atoms_per_dimension_per_cor": [17, 24], "synapse_executable_suffix": [17, 24], "synapse_record": [17, 24], "abstractpynnneuronmodel": [17, 24], "add_connect": [17, 24], "localonlyproven": [17, 24], "max_size_input_buff": [17, 24], "max_spikes_per_timestep": [17, 24], "n_spikes_drop": [17, 24], "n_spikes_lost_from_input": [17, 24], "neuronproven": [17, 24], "current_timer_tick": [17, 24], "earliest_send": [17, 24], "latest_send": [17, 24], "n_tdma_miss": [17, 24], "populationmachinelocalonlycombinedvertex": [17, 24], "background_max_queued_nam": [17, 24, 46, 47], "background_overloads_nam": [17, 24, 46, 47], "common_region": [17, 24], "local_only_s": [17, 24], "max_filled_size_of_input_buffer_nam": [17, 24], "max_spikes_per_time_step_nam": [17, 24], "neuron_region": [17, 24], "n_late_spikes_nam": [17, 24, 46, 47], "get_recorded_region_id": [17, 24, 45], "regenerate_data_specif": [17, 24, 45], "reload_requir": [17, 24, 45], "set_do_neuron_regener": [17, 24], "set_reload_requir": [17, 24, 45], "populationmachinevertex": [17, 24], "dma_complet": [17, 24], "n_rewires_nam": [17, 24], "spikes_process": [17, 24], "synapse_region": [17, 24], "populationneuronsmachinevertex": [17, 24], "get_n_bytes_for_transf": [17, 24], "set_sdram_partit": [17, 24, 45], "populationsynapsesmachinevertexcommon": [17, 24], "earliest_rec": [17, 24], "latest_rec": [17, 24], "max_spikes_process": [17, 24], "max_spikes_receiv": [17, 24], "max_spike_overflow": [17, 24], "max_transfer_timer_overrun": [17, 24], "n_skipped_time_step": [17, 24], "n_transfer_timer_overrun": [17, 24], "set_neuron_vertex_and_partition_id": [17, 24], "populationsynapsesmachinevertexlead": [17, 24], "populationsynapsesmachinevertexshar": [17, 24], "spikeprocessingfastproven": [17, 24], "max_spikes_overflow": [17, 24], "n_buffer_overflow": [17, 24, 47], "n_dmas_complet": [17, 24], "n_late_packet": [17, 24], "n_rewir": [17, 24], "n_spikes_process": [17, 24], "spikeprocessingproven": [17, 24], "synapseproven": [17, 24], "max_late_spik": [17, 24], "n_failed_bitfield_read": [17, 24], "n_filtered_by_bitfield": [17, 24], "n_ghost_search": [17, 24], "n_invalid_pop_table_hit": [17, 24], "n_late_spik": [17, 24, 47], "n_plastic_satur": [17, 24], "n_pre_synaptic_ev": [17, 24], "n_satur": [17, 24], "n_skipped_synaps": [17, 24], "as_view": [17, 44], "get_initial_valu": [17, 44], "set_initial_valu": [17, 44], "getspik": [17, 44], "get_gsyn": [17, 44], "get_v": [17, 44], "is_loc": [17, 44], "local_cel": [17, 44], "meanspikecount": [17, 44], "nearest": [17, 34, 44], "printspik": [17, 44], "print_gsyn": [17, 44], "print_v": [17, 44], "rset": [17, 44], "save_posit": [17, 44], "tset": [17, 44], "spikesourcearraymachinevertex": [17, 45], "spikesourcearrayvertex": [17, 45], "spike_recording_region_id": [17, 45, 46, 48], "spikesourcefromfil": [17, 45], "spikesourcepoissonmachinevertex": [17, 45], "extra_provenance_data_entri": [17, 45, 46, 47], "fast_rate_per_tick_cutoff": [17, 45], "poisson_spike_source_region": [17, 45], "profile_tag_label": [17, 45], "seed_offset_byt": [17, 45], "seed_size_byt": [17, 45], "slow_rate_per_tick_cutoff": [17, 45], "read_parameters_from_machin": [17, 45], "set_rate_chang": [17, 45], "add_outgoing_project": [17, 45], "clear_spike_record": [17, 45], "get_recording_sdram_usag": [17, 45], "incoming_control_edg": [17, 45], "kiss_se": [17, 45], "max_n_rat": [17, 45], "outgoing_project": [17, 45], "set_live_poisson_control_edg": [17, 45], "time_to_spik": [17, 45], "update_kiss_se": [17, 45], "spike_injector": [17, 46], "spike_injector_vertex": [17, 46], "9223372036854775807": 17, "modeltype_default": 17, "largest": 17, "work": [17, 20, 22, 24, 45, 50], "addition": 17, "decor": 17, "examin": 17, "frozenset": 17, "pre_synaptic_popul": 17, "post_synaptic_popul": 17, "mechan": 17, "attribute_nam": 17, "with_address": 17, "multiple_synaps": 17, "attribut": [17, 50], "print": 17, "basefil": 17, "nbin": 17, "histogram": 17, "extract": [17, 50], "csv_file": [17, 50], "intend": 17, "gsyn_inh": [17, 26, 44, 50], "stage": [18, 24, 26, 47], "increas": 18, "bitfield": [18, 24, 50], "get_estimated_sdram_for_bit_field_region": 18, "synapticmanag": 18, "find": [18, 24, 45], "aplx": 18, "expans": [18, 24], "synapse_manag": [18, 24], "abstractsupportssdramedg": 18, "round": [18, 19, 24], "power": [18, 24], "sender": 18, "follow": [18, 24, 27], "accumul": 18, "marker": 18, "At": [19, 41], "data_typ": [19, 23, 50], "miss": 19, "new_stat": 19, "spikes_per_timestep": 19, "allowed_vari": 19, "bitfield_vari": 19, "per_timestep_vari": 19, "per_timestep_datatyp": 19, "events_per_core_vari": 19, "events_per_core_datatyp": 19, "fit": [19, 24, 41], "generat": 19, "variablesdram": 19, "application_vertex": 19, "per_timestep": 19, "time_step": [19, 32], "quit": 19, "worst": 19, "highest": 19, "overflow": 19, "max_rewires_per_t": 19, "neuron_recording_region": 19, "data_items_to_return": [19, 24], "get_cal": 19, "subrang": [19, 24, 45], "selector_to_id": [19, 24, 45], "abstractsplitterpartition": 19, "deleg": 19, "choic": [19, 24], "bufferdatabas": [19, 24, 45, 48, 50], "keyerror": [19, 24, 45, 48], "someth": [19, 24, 45], "c": [19, 24, 26, 30, 45, 48, 50], "dta": [19, 24, 45, 48], "datatyp": [19, 23, 24, 27, 45, 48, 50], "get_raster_id": [19, 24, 45, 48], "But": [19, 24, 45, 48], "thing": [19, 24, 45, 48], "get_simulation_time_step_u": [19, 24, 45, 48], "statu": [19, 24, 45, 48], "dure": [20, 24, 29, 41, 45], "pop_bas": 20, "enumer": [20, 45, 47, 49], "numpy_synapses_dtyp": [21, 22], "get_provenance_data": [21, 22, 24, 41], "set_spac": [21, 22], "gen_delay_param": [21, 22], "gen_delay_params_size_in_byt": [21, 22], "gen_delays_id": [21, 22], "gen_weight_params_size_in_byt": [21, 22], "gen_weights_id": [21, 22], "gen_weights_param": [21, 22], "generate_on_machin": [21, 22, 24, 41], "get_rng_next": [21, 22], "delay_vertex": 21, "post_vertex": 21, "extend": [21, 22, 45, 50, 52], "abstractprovideslocalprovenancedata": 21, "settabl": [21, 23, 24, 25, 30, 35, 41], "came": 21, "whose": [21, 50], "upload": 21, "definit": 21, "postpopul": 21, "prepopul": 21, "nb": [22, 26], "uint16": 22, "float64": [22, 41], "distribut": [22, 41, 50, 51], "multaps": 22, "replac": [22, 41], "re": [22, 24], "num_synaps": 22, "prob_connect": 22, "abstractlist": [23, 50], "serial": 23, "slice_start": 23, "slice_stop": 23, "exclus": 23, "eventu": 23, "additionalinputca2adapt": [24, 25], "eifconductancealphapopul": [24, 26], "hhcondexp": [24, 26], "ifcondalpha": [24, 26], "iffacetsconductancepopul": [24, 26], "binary_nam": [24, 27], "get_global_weight_scal": [24, 27, 28], "get_n_synapse_typ": [24, 27, 42], "get_recordable_data_typ": [24, 27], "get_recordable_unit": [24, 27], "get_recordable_variable_index": [24, 27], "get_synapse_target": [24, 27, 42], "is_conductance_bas": [24, 27], "abstractstandardneuroncompon": [24, 25, 27, 28, 30, 42, 43], "has_vari": [24, 27], "neuronimplstandard": [24, 27], "rangeddictvertexslic": [24, 27], "inputtypeconduct": [24, 28], "inputtypecurr": [24, 28], "inputtypedelta": [24, 28], "abstractlocalonli": [24, 29], "get_parameters_usage_in_byt": [24, 29], "is_combined_core_cap": [24, 29, 41], "changes_during_run": [24, 29, 41], "get_maximum_positive_weight": [24, 29, 41], "get_mean_negative_weight": [24, 29, 41], "get_mean_positive_weight": [24, 29, 41], "get_minimum_negative_weight": [24, 29, 41], "get_negative_synapse_index": [24, 29, 41], "get_positive_synapse_index": [24, 29, 41], "get_variance_negative_weight": [24, 29, 41], "get_variance_positive_weight": [24, 29, 41], "get_vertex_executable_suffix": [24, 29, 41], "neuronmodelizh": [24, 30], "u_init": [24, 30], "v_init": [24, 30], "neuronmodelleakyintegrateandfir": [24, 30], "synaptogenesi": [24, 36], "abstractgenerateonmachin": [24, 41], "gen_matrix_id": [24, 41], "gen_matrix_param": [24, 41], "gen_matrix_params_size_in_byt": [24, 41], "abstractplasticsynapsedynam": [24, 41], "get_n_fixed_plastic_words_per_row": [24, 41], "get_n_plastic_plastic_words_per_row": [24, 41], "get_n_synapses_in_row": [24, 41], "get_n_words_for_plastic_connect": [24, 41], "get_plastic_synaptic_data": [24, 41], "read_plastic_synaptic_data": [24, 41], "abstractsdramsynapsedynam": [24, 41], "numpy_connectors_dtyp": [24, 41], "convert_per_connection_data_to_row": [24, 41], "get_max_synaps": [24, 41], "get_n_item": [24, 41], "get_word": [24, 41], "pad_to_length": [24, 41], "get_n_static_words_per_row": [24, 41], "get_n_words_for_static_connect": [24, 41], "get_static_synaptic_data": [24, 41], "read_static_synaptic_data": [24, 41], "abstractsupportssignedweight": [24, 29, 41], "set_valu": [24, 41], "abstractsynapsedynamicsstructur": [24, 41], "check_initial_delai": [24, 41], "f_rew": [24, 41], "get_max_rewires_per_t": [24, 41], "get_structural_parameters_sdram_usage_in_byt": [24, 41], "initial_delai": [24, 41], "initial_weight": [24, 41], "partner_select": [24, 36, 37, 41], "s_max": [24, 41], "set_connect": [24, 41], "write_structural_paramet": [24, 41], "pynnsynapsedynam": [24, 41], "slow": [24, 41], "is_neuromodulation_same_a": [24, 41], "tau_c": [24, 41], "tau_d": [24, 41], "backprop_delai": [24, 41], "dendritic_delay_fract": [24, 41], "merge_neuromodul": [24, 41], "timing_depend": [24, 31, 32, 41], "synapsedynamicsstructuralcommon": [24, 41], "pair_error": [24, 41], "get_se": [24, 41], "p_rew": [24, 41], "set_projection_paramet": [24, 41], "calculate_spike_pair_additive_stdp_weight": [24, 41], "calculate_spike_pair_multiplicative_stdp_weight": [24, 41], "synapsetypealpha": [24, 42], "exc_respons": [24, 26, 42], "inh_respons": [24, 26, 42], "synapsetypedelta": [24, 42], "synapsetypedualexponenti": [24, 42], "isyn_exc2": [24, 26, 42], "tau_syn_e2": [24, 26, 42], "synapsetypeexponenti": [24, 42], "synapsetypesemd": [24, 42], "exc2_old": [24, 26, 42], "scaling_factor": [24, 26, 42], "thresholdtypemaassstochast": [24, 43], "thresholdtypestat": [24, 43], "synaptic_matrix_offset": [24, 41], "delayed_synaptic_matrix_offset": 24, "max_row_info": [24, 41], "max_pre_atoms_per_cor": [24, 41], "max_post_atoms_per_cor": [24, 41], "44": [24, 45], "block_start_addr": 24, "row_length": 24, "key_and_mask": 24, "core_mask": 24, "core_shift": 24, "entri": [24, 45], "anywher": 24, "keep": [24, 50], "synchronis": 24, "becom": 24, "won": 24, "arriv": [24, 29, 41], "next_address": 24, "would": 24, "join": 24, "neuronregion": 24, "n_provenance_item": 24, "profile_tag": 24, "binary_file_nam": 24, "abstractreceivebufferstohost": [24, 45], "abstracthasprofiledata": [24, 45], "profiledata": [24, 45], "populationmachinesynapsesproven": 24, "abstractsupportsbitfieldroutingcompress": 24, "borrow": 24, "chunk": 24, "regener": [24, 45], "undelai": [24, 41], "n_pre_atom": 24, "max_row_length": 24, "post_vertex_max_delay_tick": 24, "dtype": [24, 50], "in_edg": 24, "held": [24, 41, 50], "gen_undelai": 24, "gen_delai": 24, "prepar": 24, "deploy": 24, "row_data": 24, "delayed_row_data": 24, "arrang": 24, "delayed_data": 24, "6": [24, 26, 34, 45, 47, 50], "handler": 24, "overwritten": 24, "synaptic_matrix_region": 24, "app_key_info": 24, "delay_app_key_info": 24, "_appkeyinfo": 24, "m_vertex": 24, "block_addr": 24, "poptabl": 24, "abstractcanreset": 24, "sd": 24, "upper": [24, 45, 48, 50], "ring": 24, "good": 24, "approxim": 24, "satur": 24, "late": 24, "behalf": 24, "ensur": 24, "pynnprojectioncommon": [24, 45], "flush": 24, "cach": 24, "itcm": 24, "copi": [24, 50], "customis": [24, 45, 48], "n_record": 24, "n_proven": 24, "across": 24, "lower": [24, 45, 48, 50], "might": [24, 50], "transfer": [24, 50], "account": 24, "estim": [24, 41, 45, 48, 50], "hard": 24, "overal": 24, "new_valu": [24, 45], "rangedicationari": 24, "due": [24, 30, 34], "synapserecord": 24, "compos": 24, "pattern": [24, 50], "as_list": [24, 50, 52], "fixed_valu": 24, "field_nam": 24, "appear": [24, 27, 50], "union": 24, "slice_index": 24, "populationmachineneuron": 24, "abstractrewritesdataspecif": [24, 45], "s1615": 24, "max_backgrounds_queu": [24, 47], "times_the_background_queue_overload": [24, 47], "max_filled_size_input_buff": 24, "max_spikes_per_time_step": 24, "core_param": 24, "neuron_param": 24, "current_source_param": 24, "neuron_build": 24, "number_of_late_spik": [24, 47], "local_only_param": 24, "reload": [24, 45], "n_neuron_bit": 24, "dma": 24, "were": 24, "number_of_rewir": 24, "bit_field_filt": 24, "connector_build": 24, "population_t": 24, "sdram_edge_param": [24, 45], "sdram_machine_edg": [24, 45], "sdram_partit": [24, 45], "sourcesegmentedsdrammachinepartit": 24, "earliest_receive_tim": 24, "latest_receive_tim": 24, "max_spikes_processed_in_time_step": 24, "max_spikes_received_in_time_step": 24, "max_spike_overflow_in_time_step": 24, "max_transfer_overrun": 24, "times_a_time_step_was_skip": 24, "times_the_transfer_did_not_complete_in_tim": 24, "key_region": 24, "neuron_vertex": 24, "self": 24, "neuron_to_synapse_edg": 24, "machineedg": 24, "synapse_refer": 24, "lead": 24, "independ": 25, "compon": [25, 27, 28, 41, 42, 43], "trigger": 26, "sub": 26, "isfa": 26, "ista": 26, "rep": 26, "chain": 26, "0805": 26, "281": 26, "delta_t": 26, "3667": 26, "tau_w": 26, "v_spike": 26, "40": 26, "compart": 26, "hodgkin": 26, "huxlei": 26, "e_rev_k": 26, "90": 26, "e_rev_na": 26, "e_rev_leak": 26, "g_leak": 26, "gbar_k": 26, "gbar_na": 26, "v_offset": 26, "63": 26, "linear": [26, 42], "exc_exp_respons": [26, 42], "inh_exp_respons": [26, 42], "instantan": 26, "e_1": [26, 42], "e_2": [26, 42], "www": [26, 50], "cit": 26, "ec": 26, "de": 26, "en": 26, "insect": 26, "vision": 26, "resembl": 26, "facet": 26, "55": 26, "u_": [26, 30], "delta": [26, 28, 42], "repeat": [27, 50], "s1": 27, "s2": 27, "layout": 27, "componentis": 27, "ranged_dict": 27, "e_": 28, "dtcm": 29, "eugen": 30, "et": 30, "al": 30, "classic": 30, "synapse_structur": [31, 32], "float_to_fix": [31, 32], "get_exp_lut_arrai": [31, 32], "abstractsynapsestructur": [32, 33, 34], "get_n_half_words_per_connect": [32, 33], "get_weight_half_word": [32, 33], "synapsestructureweightaccumul": [32, 33], "synapsestructureweightonli": [32, 33], "abstracttimingdepend": [32, 34, 41], "pre_trace_n_byt": [32, 34], "synaptic_structur": [32, 34], "a_minu": [32, 34, 35, 41], "a_plu": [32, 34, 35, 41], "tau_minu": [32, 34, 41], "tau_plu": [32, 34, 41], "tau_x": [32, 34], "tau_i": [32, 34], "set_a_plus_a_minu": [32, 35], "time_const": 32, "half": [33, 45, 48], "trace": 34, "jean": 34, "pascal": 34, "pfister": 34, "wulfram": 34, "gerstner": 34, "septemb": 34, "2006": 34, "26": 34, "38": 34, "9673": 34, "9682": 34, "1523": 34, "jneurosci": 34, "1425": 34, "06": 34, "accumulator_depress": 34, "accumulator_potenti": 34, "mean_pre_window": 34, "35": 34, "mean_post_window": 34, "dual_fsm": 34, "recurr": 34, "vogel": 34, "2011": 34, "delayed_matrix_offset": 41, "fp_size": 41, "pp_size": 41, "connection_row_indic": 41, "max_n_synaps": 41, "fixed_plast": 41, "fp_data": 41, "pp_data": 41, "1d": 41, "interact": 41, "get_synaptic_data": 41, "n_word": 41, "item_s": 41, "ff_size": 41, "ff_data": 41, "sign": 41, "happen": 41, "utilis": 41, "fulli": 41, "pre_population_label": 41, "post_population_label": 41, "provenancedataitem": 41, "found": 41, "max_delay_m": 41, "pacmaninvalidparameterexcept": 41, "fast": 41, "1000": 41, "200": 41, "voltage_depend": 41, "10000": 41, "enabl": [41, 45, 48], "presenc": 41, "act": [41, 50], "petrut": 41, "bogdan": 41, "dendrit": 41, "fraction": 41, "attempt": 41, "newli": 41, "fan": 41, "layer": 41, "propag": 41, "absenc": 41, "pre_spik": 41, "post_spik": 41, "plastic_delai": 41, "spikepair": 41, "min_weight": 41, "max_weight": 41, "agglomer": 44, "population_1": 44, "population_2": 44, "incomplet": 44, "sequenc": 44, "mainli": 44, "arg": 44, "standardmodel": 44, "electrod": 44, "neuroncurrentsourc": 44, "closest": 44, "unimpl": 44, "NO": 44, "pynn0": 44, "parameternam": 44, "value_arrai": 44, "n_kei": [45, 48], "receive_sdp_port": [45, 48], "receive_tag": [45, 48], "receive_r": [45, 48], "virtual_kei": [45, 48], "check_kei": [45, 48], "send_buffer_tim": [45, 48], "send_buffer_partition_id": [45, 48], "injection_partition_id": 45, "reverseiptagmulticastsourcemachinevertex": 45, "caus": [45, 47], "pacmanvalueerror": 45, "too": 45, "attributeerror": 45, "reverseiptagmulticastsourc": [45, 48], "plai": 45, "disabl": [45, 48], "featur": [45, 48], "iptag": [45, 48], "verifi": [45, 48], "int32": [45, 48, 50], "injection_partit": [45, 48], "cover": [45, 52], "resourcesabstractsdram": 45, "spike_time_fil": 45, "min_atom": [45, 50], "max_atom": [45, 50], "min_tim": [45, 50], "max_tim": [45, 50], "split_valu": [45, 50], "tdma_missed_slot": 45, "expander_region": 45, "poisson_params_region": 45, "profiler_region": 45, "provenance_region": 45, "rates_region": 45, "spike_history_region": 45, "system_region": 45, "timer": 45, "prob_func": 45, "data_n_time_step": 45, "first_machine_time_step": 45, "legacypartitionerapi": 45, "rangedlist": [45, 52], "kiss": [45, 50], "count_saturation_nam": [46, 47], "delayed_for_traffic_nam": [46, 47], "input_buffer_lost_nam": [46, 47], "invalid_key_count_nam": [46, 47], "invalid_neuron_id_count_nam": [46, 47], "mismatch_added_from_processed_nam": [46, 47], "n_extra_provenance_data_entri": [46, 47], "n_packets_processed_nam": [46, 47], "n_packets_received_nam": [46, 47], "n_packets_sent_nam": [46, 47], "write_delay_paramet": [46, 47], "max_dtcm_avail": [46, 47], "max_slot": [46, 47], "mismatched_delay_per_stage_error_messag": [46, 47], "safety_factor": [46, 47], "add_outgoing_edg": [46, 47], "delay_params_s": [46, 47], "delay_per_stag": [46, 47], "get_max_delay_ticks_support": [46, 47], "outgoing_edg": [46, 47], "set_new_n_delay_stages_and_delay_per_stag": [46, 47], "spikeinjectorvertex": [46, 48], "saturation_count": 47, "number_of_times_delayed_to_spread_traff": 47, "max_background_queu": 47, "n_background_overload": 47, "n_delai": 47, "n_packets_ad": 47, "n_packets_dropped_due_to_invalid_kei": 47, "n_packets_lost_due_to_count_satur": 47, "n_packets_process": 47, "n_packets_receiv": 47, "n_packets_s": 47, "n_packets_with_invalid_neuron_id": 47, "invalid_key_count": 47, "invalid_neuron_count": 47, "number_of_packets_added_to_delay_slot": 47, "number_of_packets_process": 47, "number_of_packets_receiv": 47, "number_of_packets_s": 47, "incoming_kei": 47, "incoming_mask": 47, "delayextens": 47, "applicationedgepartit": 47, "parit": 47, "54756": 47, "feasibl": 47, "mail": 47, "5000": 47, "delay_ticks_at_post_vertex": 47, "delayapplicationedg": 47, "robot": 49, "event_format": 49, "268435456": 49, "201326592": 49, "134217728": 49, "67108864": 49, "1073741824": 49, "1610612736": 49, "2147483648": 49, "536870912": 49, "abstractrandomstat": [50, 51], "cdf": [50, 51], "ppf": [50, 51], "std": [50, 51], "var": [50, 51], "randomstatsbinomialimpl": [50, 51], "randomstatsexponentialimpl": [50, 51], "randomstatsgammaimpl": [50, 51], "randomstatslognormalimpl": [50, 51], "randomstatsnormalclippedimpl": [50, 51], "randomstatsnormalimpl": [50, 51], "randomstatspoissonimpl": [50, 51], "randomstatsrandintimpl": [50, 51], "randomstatsscipyimpl": [50, 51], "randomstatsuniformimpl": [50, 51], "randomstatsvonmisesimpl": [50, 51], "spynnakerrangedlist": [50, 52], "is_list": [50, 52], "pointer": 50, "bit_field_region": 50, "n_bit_field_byt": 50, "bit_field_region_ref": 50, "slot": 50, "256": 50, "262144000": 50, "conserv": 50, "bandwidth": 50, "database_fil": 50, "n_board": 50, "sqlite": 50, "buffermanag": 50, "access": 50, "omit": 50, "pop_label": 50, "duplic": 50, "compact": 50, "best": 50, "sort": 50, "comma": 50, "overwrit": 50, "csvfile": 50, "metdtadat": 50, "t_start": 50, "sampling_interval_m": 50, "pop_siz": 50, "Or": 50, "standalon": 50, "t_stop": 50, "as1": 50, "as2": 50, "same_length": 50, "assertionerror": 50, "neo1": 50, "neo2": 50, "same_run": 50, "same_data": 50, "seg1": 50, "seg2": 50, "spiketrain1": 50, "spiketrain2": 50, "spiketrains1": 50, "spiketrains2": 50, "even": 50, "time_unit": 50, "unittim": 50, "001": 50, "told": 50, "unitquant": 50, "getdata": 50, "help": 50, "johndcook": 50, "blog": 50, "skewness_kurtosi": 50, "bunch": 50, "seen": 50, "deviat": [50, 51], "default_valu": 50, "array_s": 50, "insid": 50, "data_offset": 50, "helper": 50, "directori": 50, "no_atom": 50, "convers": [50, 52], "suitabl": 50, "mar": 50, "mars64": 50, "chanc": 50, "draw": 50, "n_valu": 50, "fall": 50, "n_total_tri": 50, "n_trial": 50, "selection_prob": 50, "n_byte": 50, "n_core": 50, "old_loc": 50, "old": 50, "lonfger": 50, "new_loc": 50, "upgrad": 50, "remov": 50, "continuous_integr": 50, "file_path": 50, "stamp": 50, "cumul": 51, "cutoff": 51, "percent": 51, "clip": 51, "distribution_typ": 51, "use_list_as_valu": 52, "better": 52, "treat": 52}, "objects": {"": [[2, 0, 0, "-", "spynnaker"]], "spynnaker": [[2, 0, 0, "-", "gsyn_tools"], [2, 0, 0, "-", "plot_utils"], [2, 0, 0, "-", "spike_checker"], [2, 0, 0, "-", "spynnaker_plotting"]], "spynnaker.gsyn_tools": [[2, 1, 1, "", "check_gsyn"], [2, 1, 1, "", "check_path_gysn"], [2, 1, 1, "", "check_sister_gysn"]], "spynnaker.plot_utils": [[2, 1, 1, "", "heat_plot"], [2, 1, 1, "", "line_plot"], [2, 1, 1, "", "plot_spikes"]], "spynnaker.pyNN": [[3, 0, 0, "-", "abstract_spinnaker_common"], [3, 0, 0, "-", "config_setup"], [4, 0, 0, "-", "connections"], [5, 0, 0, "-", "data"], [3, 0, 0, "-", "exceptions"], [7, 0, 0, "-", "external_devices_models"], [13, 0, 0, "-", "extra_algorithms"], [16, 0, 0, "-", "model_binaries"], [17, 0, 0, "-", "models"], [49, 0, 0, "-", "protocols"], [3, 0, 0, "-", "setup_pynn"], [3, 0, 0, "-", "spinnaker"], [3, 0, 0, "-", "spynnaker_external_device_plugin_manager"], [50, 0, 0, "-", "utilities"]], "spynnaker.pyNN.abstract_spinnaker_common": [[3, 2, 1, "", "AbstractSpiNNakerCommon"]], "spynnaker.pyNN.abstract_spinnaker_common.AbstractSpiNNakerCommon": [[3, 3, 1, "", "register_binary_search_path"]], "spynnaker.pyNN.config_setup": [[3, 1, 1, "", "add_spynnaker_cfg"], [3, 1, 1, "", "setup_configs"], [3, 1, 1, "", "unittest_setup"]], "spynnaker.pyNN.connections": [[4, 2, 1, "", "EthernetCommandConnection"], [4, 2, 1, "", "EthernetControlConnection"], [4, 2, 1, "", "SPIFLiveSpikesConnection"], [4, 2, 1, "", "SpynnakerLiveSpikesConnection"], [4, 2, 1, "", "SpynnakerPoissonControlConnection"]], "spynnaker.pyNN.connections.EthernetCommandConnection": [[4, 3, 1, "", "add_command_container"]], "spynnaker.pyNN.connections.EthernetControlConnection": [[4, 3, 1, "", "add_translator"]], "spynnaker.pyNN.connections.SPIFLiveSpikesConnection": [[4, 3, 1, "", "add_init_callback"], [4, 3, 1, "", "add_pause_stop_callback"], [4, 3, 1, "", "add_receive_callback"], [4, 3, 1, "", "add_receive_label"], [4, 3, 1, "", "add_start_resume_callback"]], "spynnaker.pyNN.connections.SpynnakerLiveSpikesConnection": [[4, 3, 1, "", "send_spike"], [4, 3, 1, "", "send_spikes"]], "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection": [[4, 3, 1, "", "add_init_callback"], [4, 3, 1, "", "add_pause_stop_callback"], [4, 3, 1, "", "add_poisson_label"], [4, 3, 1, "", "add_receive_callback"], [4, 3, 1, "", "add_start_callback"], [4, 3, 1, "", "add_start_resume_callback"], [4, 3, 1, "", "set_rate"], [4, 3, 1, "", "set_rates"]], "spynnaker.pyNN.data": [[5, 2, 1, "", "SpynnakerDataView"], [5, 0, 0, "-", "spynnaker_data_writer"]], "spynnaker.pyNN.data.SpynnakerDataView": [[5, 3, 1, "", "add_population"], [5, 3, 1, "", "add_projection"], [5, 3, 1, "", "get_min_delay"], [5, 3, 1, "", "get_n_populations"], [5, 3, 1, "", "get_n_projections"], [5, 3, 1, "", "get_segment_counter"], [5, 3, 1, "", "get_sim_name"], [5, 3, 1, "", "has_min_delay"], [5, 3, 1, "", "iterate_populations"], [5, 3, 1, "", "iterate_projections"], [5, 3, 1, "", "set_number_of_neurons_per_dimension_per_core"]], "spynnaker.pyNN.data.spynnaker_data_writer": [[5, 2, 1, "", "SpynnakerDataWriter"]], "spynnaker.pyNN.data.spynnaker_data_writer.SpynnakerDataWriter": [[5, 3, 1, "", "set_up_timings_and_delay"], [5, 3, 1, "", "shut_down"]], "spynnaker.pyNN.exceptions": [[3, 4, 1, "", "DelayExtensionException"], [3, 4, 1, "", "FilterableException"], [3, 4, 1, "", "InvalidParameterType"], [3, 4, 1, "", "MemReadException"], [3, 4, 1, "", "SpynnakerException"], [3, 4, 1, "", "SpynnakerSplitterConfigurationException"], [3, 4, 1, "", "SynapseRowTooBigException"], [3, 4, 1, "", "SynapticBlockGenerationException"], [3, 4, 1, "", "SynapticBlockReadException"], [3, 4, 1, "", "SynapticConfigurationException"], [3, 4, 1, "", "SynapticMaxIncomingAtomsSupportException"]], "spynnaker.pyNN.exceptions.SynapseRowTooBigException": [[3, 5, 1, "", "max_size"]], "spynnaker.pyNN.external_devices_models": [[7, 2, 1, "", "AbstractEthernetController"], [7, 2, 1, "", "AbstractEthernetSensor"], [7, 2, 1, "", "AbstractEthernetTranslator"], [7, 2, 1, "", "AbstractMulticastControllableDevice"], [7, 2, 1, "", "ArbitraryFPGADevice"], [7, 2, 1, "", "ExternalCochleaDevice"], [7, 2, 1, "", "ExternalDeviceLifControl"], [7, 2, 1, "", "ExternalFPGARetinaDevice"], [7, 2, 1, "", "ICUBRetinaDevice"], [7, 2, 1, "", "MachineMunichMotorDevice"], [7, 2, 1, "", "MunichMotorDevice"], [7, 2, 1, "", "MunichRetinaDevice"], [7, 2, 1, "", "SPIFOutputDevice"], [7, 2, 1, "", "SPIFRetinaDevice"], [7, 2, 1, "", "ThresholdTypeMulticastDeviceControl"], [7, 0, 0, "-", "external_device_lif_control_vertex"], [8, 0, 0, "-", "push_bot"], [7, 0, 0, "-", "spif_devices"]], "spynnaker.pyNN.external_devices_models.AbstractEthernetController": [[7, 3, 1, "", "get_external_devices"], [7, 3, 1, "", "get_message_translator"], [7, 3, 1, "", "get_outgoing_partition_ids"]], "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor": [[7, 3, 1, "", "get_database_connection"], [7, 3, 1, "", "get_injector_label"], [7, 3, 1, "", "get_injector_parameters"], [7, 3, 1, "", "get_n_neurons"], [7, 3, 1, "", "get_translator"]], "spynnaker.pyNN.external_devices_models.AbstractEthernetTranslator": [[7, 3, 1, "", "translate_control_packet"]], "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice": [[7, 5, 1, "", "device_control_first_send_timestep"], [7, 5, 1, "", "device_control_key"], [7, 5, 1, "", "device_control_max_value"], [7, 5, 1, "", "device_control_min_value"], [7, 5, 1, "", "device_control_partition_id"], [7, 5, 1, "", "device_control_scaling_factor"], [7, 5, 1, "", "device_control_send_type"], [7, 5, 1, "", "device_control_timesteps_between_sending"], [7, 5, 1, "", "device_control_uses_payload"]], "spynnaker.pyNN.external_devices_models.ExternalDeviceLifControl": [[7, 3, 1, "", "create_vertex"]], "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice": [[7, 6, 1, "", "DOWN_POLARITY"], [7, 6, 1, "", "MERGED_POLARITY"], [7, 6, 1, "", "MODE_128"], [7, 6, 1, "", "MODE_16"], [7, 6, 1, "", "MODE_32"], [7, 6, 1, "", "MODE_64"], [7, 6, 1, "", "UP_POLARITY"], [7, 3, 1, "", "get_fixed_key_and_mask"], [7, 3, 1, "", "get_n_neurons"], [7, 5, 1, "", "pause_stop_commands"], [7, 5, 1, "", "start_resume_commands"], [7, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice": [[7, 3, 1, "", "get_fixed_key_and_mask"], [7, 3, 1, "", "get_incoming_slice"], [7, 3, 1, "", "get_machine_fixed_key_and_mask"], [7, 3, 1, "", "get_shape_key_fields"]], "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice": [[7, 6, 1, "", "INPUT_BUFFER_FULL_NAME"], [7, 6, 1, "", "MOTOR_PARTITION_ID"], [7, 3, 1, "", "generate_data_specification"], [7, 3, 1, "", "get_binary_file_name"], [7, 3, 1, "", "get_binary_start_type"], [7, 3, 1, "", "get_n_keys_for_partition"], [7, 3, 1, "", "parse_extra_provenance_items"], [7, 3, 1, "", "reserve_memory_regions"], [7, 5, 1, "", "sdram_required"]], "spynnaker.pyNN.external_devices_models.MunichMotorDevice": [[7, 6, 1, "", "default_initial_values"], [7, 6, 1, "", "default_parameters"], [7, 3, 1, "", "dependent_vertices"], [7, 3, 1, "", "edge_partition_identifiers_for_dependent_vertex"]], "spynnaker.pyNN.external_devices_models.MunichRetinaDevice": [[7, 6, 1, "", "DOWN_POLARITY"], [7, 6, 1, "", "LEFT_RETINA"], [7, 6, 1, "", "MERGED_POLARITY"], [7, 6, 1, "", "RIGHT_RETINA"], [7, 6, 1, "", "UP_POLARITY"], [7, 6, 1, "", "default_parameters"], [7, 3, 1, "", "get_fixed_key_and_mask"], [7, 5, 1, "", "pause_stop_commands"], [7, 5, 1, "", "start_resume_commands"], [7, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.SPIFOutputDevice": [[7, 3, 1, "", "add_incoming_edge"], [7, 5, 1, "", "pause_stop_commands"], [7, 5, 1, "", "start_resume_commands"], [7, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice": [[7, 6, 1, "", "X_MASK"], [7, 6, 1, "", "X_PER_ROW"], [7, 6, 1, "", "Y_MASK"], [7, 3, 1, "", "get_fixed_key_and_mask"], [7, 3, 1, "", "get_incoming_slice_for_link"], [7, 3, 1, "", "get_machine_fixed_key_and_mask"], [7, 3, 1, "", "get_shape_key_fields"], [7, 5, 1, "", "pause_stop_commands"], [7, 5, 1, "", "start_resume_commands"], [7, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.ThresholdTypeMulticastDeviceControl": [[7, 3, 1, "", "add_parameters"], [7, 3, 1, "", "add_state_variables"]], "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex": [[7, 2, 1, "", "ExternalDeviceLifControlVertex"]], "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex": [[7, 3, 1, "", "dependent_vertices"], [7, 3, 1, "", "edge_partition_identifiers_for_dependent_vertex"], [7, 3, 1, "", "get_atom_key_map"], [7, 3, 1, "", "get_external_devices"], [7, 3, 1, "", "get_fixed_key_and_mask"], [7, 3, 1, "", "get_message_translator"], [7, 3, 1, "", "get_outgoing_partition_ids"]], "spynnaker.pyNN.external_devices_models.push_bot": [[8, 2, 1, "", "AbstractPushBotOutputDevice"], [8, 2, 1, "", "AbstractPushBotRetinaDevice"], [9, 0, 0, "-", "control"], [10, 0, 0, "-", "ethernet"], [11, 0, 0, "-", "parameters"], [12, 0, 0, "-", "spinnaker_link"]], "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice": [[8, 5, 1, "", "max_value"], [8, 5, 1, "", "min_value"], [8, 5, 1, "", "protocol_property"], [8, 5, 1, "", "send_type"], [8, 5, 1, "", "time_between_send"]], "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotRetinaDevice": [[8, 5, 1, "", "pause_stop_commands"], [8, 5, 1, "", "start_resume_commands"], [8, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.control": [[9, 2, 1, "", "PushBotLifEthernet"], [9, 2, 1, "", "PushBotLifSpinnakerLink"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet": [[10, 2, 1, "", "PushBotEthernetDevice"], [10, 2, 1, "", "PushBotEthernetLEDDevice"], [10, 2, 1, "", "PushBotEthernetLaserDevice"], [10, 2, 1, "", "PushBotEthernetMotorDevice"], [10, 2, 1, "", "PushBotEthernetRetinaDevice"], [10, 2, 1, "", "PushBotEthernetSpeakerDevice"], [10, 2, 1, "", "PushBotRetinaConnection"], [10, 2, 1, "", "PushBotTranslator"], [10, 2, 1, "", "PushBotWIFIConnection"], [10, 1, 1, "", "get_pushbot_wifi_connection"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice": [[10, 5, 1, "", "device_control_first_send_timestep"], [10, 5, 1, "", "device_control_key"], [10, 5, 1, "", "device_control_max_value"], [10, 5, 1, "", "device_control_min_value"], [10, 5, 1, "", "device_control_partition_id"], [10, 5, 1, "", "device_control_send_type"], [10, 5, 1, "", "device_control_timesteps_between_sending"], [10, 5, 1, "", "device_control_uses_payload"], [10, 5, 1, "", "protocol"], [10, 3, 1, "", "set_command_protocol"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice": [[10, 5, 1, "", "pause_stop_commands"], [10, 3, 1, "", "set_command_protocol"], [10, 5, 1, "", "start_resume_commands"], [10, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice": [[10, 5, 1, "", "pause_stop_commands"], [10, 3, 1, "", "set_command_protocol"], [10, 5, 1, "", "start_resume_commands"], [10, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice": [[10, 5, 1, "", "pause_stop_commands"], [10, 3, 1, "", "set_command_protocol"], [10, 5, 1, "", "start_resume_commands"], [10, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice": [[10, 3, 1, "", "get_database_connection"], [10, 3, 1, "", "get_injector_label"], [10, 3, 1, "", "get_injector_parameters"], [10, 3, 1, "", "get_n_neurons"], [10, 3, 1, "", "get_translator"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice": [[10, 5, 1, "", "pause_stop_commands"], [10, 3, 1, "", "set_command_protocol"], [10, 5, 1, "", "start_resume_commands"], [10, 5, 1, "", "timed_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotTranslator": [[10, 3, 1, "", "translate_control_packet"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection": [[10, 6, 1, "", "RECV_SIZE"], [10, 3, 1, "", "close"], [10, 3, 1, "", "get_receive_method"], [10, 3, 1, "", "is_connected"], [10, 3, 1, "", "is_ready_to_receive"], [10, 5, 1, "", "local_ip_address"], [10, 5, 1, "", "local_port"], [10, 3, 1, "", "receive"], [10, 5, 1, "", "remote_ip_address"], [10, 5, 1, "", "remote_port"], [10, 3, 1, "", "send"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters": [[11, 2, 1, "", "PushBotLED"], [11, 2, 1, "", "PushBotLaser"], [11, 2, 1, "", "PushBotMotor"], [11, 2, 1, "", "PushBotRetinaResolution"], [11, 2, 1, "", "PushBotRetinaViewer"], [11, 2, 1, "", "PushBotSpeaker"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED": [[11, 6, 1, "", "LED_BACK_ACTIVE_TIME"], [11, 6, 1, "", "LED_FREQUENCY"], [11, 6, 1, "", "LED_FRONT_ACTIVE_TIME"], [11, 6, 1, "", "LED_TOTAL_PERIOD"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLaser": [[11, 6, 1, "", "LASER_ACTIVE_TIME"], [11, 6, 1, "", "LASER_FREQUENCY"], [11, 6, 1, "", "LASER_TOTAL_PERIOD"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor": [[11, 6, 1, "", "MOTOR_0_LEAKY"], [11, 6, 1, "", "MOTOR_0_PERMANENT"], [11, 6, 1, "", "MOTOR_1_LEAKY"], [11, 6, 1, "", "MOTOR_1_PERMANENT"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution": [[11, 6, 1, "", "DOWNSAMPLE_16_X_16"], [11, 6, 1, "", "DOWNSAMPLE_32_X_32"], [11, 6, 1, "", "DOWNSAMPLE_64_X_64"], [11, 6, 1, "", "NATIVE_128_X_128"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaViewer": [[11, 5, 1, "", "port"], [11, 3, 1, "", "run"], [11, 3, 1, "", "run_until_closed"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker": [[11, 6, 1, "", "SPEAKER_ACTIVE_TIME"], [11, 6, 1, "", "SPEAKER_MELODY"], [11, 6, 1, "", "SPEAKER_TONE"], [11, 6, 1, "", "SPEAKER_TOTAL_PERIOD"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link": [[12, 2, 1, "", "PushBotSpiNNakerLinkLEDDevice"], [12, 2, 1, "", "PushBotSpiNNakerLinkLaserDevice"], [12, 2, 1, "", "PushBotSpiNNakerLinkMotorDevice"], [12, 2, 1, "", "PushBotSpiNNakerLinkRetinaDevice"], [12, 2, 1, "", "PushBotSpiNNakerLinkSpeakerDevice"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLEDDevice": [[12, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLaserDevice": [[12, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkMotorDevice": [[12, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkRetinaDevice": [[12, 6, 1, "", "default_parameters"], [12, 3, 1, "", "new_key_command_payload"], [12, 5, 1, "", "start_resume_commands"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkSpeakerDevice": [[12, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.external_devices_models.spif_devices": [[7, 7, 1, "", "N_FIELDS"], [7, 7, 1, "", "N_FILTERS"], [7, 7, 1, "", "N_INPUTS"], [7, 7, 1, "", "N_PIPES"], [7, 2, 1, "", "SPIFRegister"], [7, 7, 1, "", "SPIF_FPGA_ID"], [7, 7, 1, "", "SPIF_INPUT_FPGA_LINKS"], [7, 7, 1, "", "SPIF_OUTPUT_FPGA_LINK"], [7, 2, 1, "", "SpiNNFPGARegister"], [7, 1, 1, "", "set_field_limit"], [7, 1, 1, "", "set_field_mask"], [7, 1, 1, "", "set_field_shift"], [7, 1, 1, "", "set_filter_mask"], [7, 1, 1, "", "set_filter_value"], [7, 1, 1, "", "set_input_key"], [7, 1, 1, "", "set_input_mask"], [7, 1, 1, "", "set_input_route"], [7, 1, 1, "", "set_mapper_key"]], "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister": [[7, 6, 1, "", "CONFIG_PKT_CNT"], [7, 6, 1, "", "DROPPED_PKT_CNT"], [7, 6, 1, "", "FL_MASK_BASE"], [7, 6, 1, "", "FL_VALUE_BASE"], [7, 6, 1, "", "IN_PERIPH_PKT_CNT"], [7, 6, 1, "", "IR_KEY_BASE"], [7, 6, 1, "", "IR_MASK_BASE"], [7, 6, 1, "", "IR_ROUTE_BASE"], [7, 6, 1, "", "MP_FLD_LIMIT_BASE"], [7, 6, 1, "", "MP_FLD_MASK_BASE"], [7, 6, 1, "", "MP_FLD_SHIFT_BASE"], [7, 6, 1, "", "MP_KEY_BASE"], [7, 6, 1, "", "OUT_PERIPH_PKT_CNT"], [7, 6, 1, "", "REPLY_KEY"], [7, 3, 1, "", "cmd"]], "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister": [[7, 6, 1, "", "LC_KEY"], [7, 6, 1, "", "LC_MASK"], [7, 6, 1, "", "P_KEY"], [7, 6, 1, "", "P_MASK"], [7, 6, 1, "", "RC_KEY"], [7, 6, 1, "", "RC_MASK"], [7, 6, 1, "", "START"], [7, 6, 1, "", "STOP"], [7, 3, 1, "", "cmd"], [7, 3, 1, "", "delayed_command"]], "spynnaker.pyNN.extra_algorithms": [[13, 2, 1, "", "SpYNNakerConnectionHolderGenerator"], [13, 2, 1, "", "SpYNNakerSynapticMatrixReport"], [13, 1, 1, "", "delay_support_adder"], [13, 1, 1, "", "finish_connection_holders"], [13, 1, 1, "", "neuron_expander"], [13, 1, 1, "", "redundant_packet_count_report"], [14, 0, 0, "-", "splitter_components"], [13, 1, 1, "", "spynnaker_machine_bitField_pair_router_compressor"], [13, 1, 1, "", "spynnaker_machine_bitfield_ordered_covering_compressor"], [13, 1, 1, "", "spynnaker_neuron_graph_network_specification_report"], [13, 1, 1, "", "synapse_expander"]], "spynnaker.pyNN.extra_algorithms.SpYNNakerConnectionHolderGenerator": [[13, 3, 1, "", "__call__"]], "spynnaker.pyNN.extra_algorithms.SpYNNakerSynapticMatrixReport": [[13, 3, 1, "", "__call__"]], "spynnaker.pyNN.extra_algorithms.splitter_components": [[14, 2, 1, "", "AbstractSpynnakerSplitterDelay"], [14, 2, 1, "", "AbstractSupportsOneToOneSDRAMInput"], [14, 2, 1, "", "SplitterAbstractPopulationVertexFixed"], [14, 2, 1, "", "SplitterAbstractPopulationVertexNeuronsSynapses"], [14, 2, 1, "", "SplitterDelayVertexSlice"], [14, 2, 1, "", "SplitterPoissonDelegate"], [14, 2, 1, "", "SpynnakerSplitterFixedLegacy"], [14, 1, 1, "", "spynnaker_splitter_partitioner"], [14, 1, 1, "", "spynnaker_splitter_selector"]], "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSpynnakerSplitterDelay": [[14, 6, 1, "", "MAX_SUPPORTED_DELAY_TICS"], [14, 3, 1, "", "accepts_edges_from_delay_vertex"], [14, 3, 1, "", "max_support_delay"]], "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSupportsOneToOneSDRAMInput": [[14, 3, 1, "", "handles_source_vertex"]], "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed": [[14, 6, 1, "", "INVALID_POP_ERROR_MESSAGE"], [14, 3, 1, "", "create_machine_vertex"], [14, 3, 1, "", "create_machine_vertices"], [14, 3, 1, "", "get_in_coming_slices"], [14, 3, 1, "", "get_in_coming_vertices"], [14, 3, 1, "", "get_out_going_slices"], [14, 3, 1, "", "get_out_going_vertices"], [14, 3, 1, "", "get_sdram_used_by_atoms"], [14, 3, 1, "", "get_source_specific_in_coming_vertices"], [14, 3, 1, "", "machine_vertices_for_recording"], [14, 3, 1, "", "reset_called"], [14, 3, 1, "", "set_governed_app_vertex"]], "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses": [[14, 6, 1, "", "INVALID_POP_ERROR_MESSAGE"], [14, 3, 1, "", "accepts_edges_from_delay_vertex"], [14, 3, 1, "", "create_machine_vertices"], [14, 3, 1, "", "get_in_coming_slices"], [14, 3, 1, "", "get_in_coming_vertices"], [14, 3, 1, "", "get_internal_multicast_partitions"], [14, 3, 1, "", "get_internal_sdram_partitions"], [14, 3, 1, "", "get_out_going_slices"], [14, 3, 1, "", "get_out_going_vertices"], [14, 3, 1, "", "get_same_chip_groups"], [14, 3, 1, "", "get_source_specific_in_coming_vertices"], [14, 3, 1, "", "handles_source_vertex"], [14, 3, 1, "", "is_direct_poisson_source"], [14, 3, 1, "", "machine_vertices_for_recording"], [14, 3, 1, "", "max_support_delay"], [14, 5, 1, "", "n_synapse_vertices"], [14, 3, 1, "", "reset_called"], [14, 3, 1, "", "set_governed_app_vertex"]], "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice": [[14, 6, 1, "", "DELAY_RECORDING_ERROR"], [14, 6, 1, "", "INVALID_POP_ERROR_MESSAGE"], [14, 6, 1, "", "NEED_EXACT_ERROR_MESSAGE"], [14, 3, 1, "", "create_machine_vertex"], [14, 3, 1, "", "create_machine_vertices"], [14, 3, 1, "", "get_in_coming_slices"], [14, 3, 1, "", "get_in_coming_vertices"], [14, 3, 1, "", "get_machine_vertex"], [14, 3, 1, "", "get_out_going_slices"], [14, 3, 1, "", "get_out_going_vertices"], [14, 3, 1, "", "get_sdram_used_by_atoms"], [14, 3, 1, "", "get_source_specific_in_coming_vertices"], [14, 3, 1, "", "machine_vertices_for_recording"], [14, 3, 1, "", "reset_called"], [14, 3, 1, "", "set_governed_app_vertex"]], "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate": [[14, 6, 1, "", "INVALID_POP_ERROR_MESSAGE"], [14, 3, 1, "", "create_machine_vertices"], [14, 3, 1, "", "get_in_coming_slices"], [14, 3, 1, "", "get_out_going_slices"], [14, 3, 1, "", "get_out_going_vertices"], [14, 3, 1, "", "get_same_chip_groups"], [14, 5, 1, "", "send_over_sdram"], [14, 3, 1, "", "set_governed_app_vertex"]], "spynnaker.pyNN.models": [[18, 0, 0, "-", "abstract_models"], [17, 0, 0, "-", "abstract_pynn_model"], [19, 0, 0, "-", "common"], [20, 0, 0, "-", "current_sources"], [17, 0, 0, "-", "defaults"], [21, 0, 0, "-", "neural_projections"], [23, 0, 0, "-", "neural_properties"], [24, 0, 0, "-", "neuron"], [44, 0, 0, "-", "populations"], [17, 0, 0, "-", "projection"], [17, 0, 0, "-", "recorder"], [45, 0, 0, "-", "spike_source"], [46, 0, 0, "-", "utility_models"]], "spynnaker.pyNN.models.abstract_models": [[18, 2, 1, "", "AbstractAcceptsIncomingSynapses"], [18, 2, 1, "", "AbstractHasDelayStages"], [18, 2, 1, "", "AbstractMaxSpikes"], [18, 2, 1, "", "AbstractNeuronExpandable"], [18, 2, 1, "", "AbstractSynapseExpandable"], [18, 2, 1, "", "HasShapeKeyFields"], [18, 2, 1, "", "HasSynapses"], [18, 2, 1, "", "ReceivesSynapticInputsOverSDRAM"], [18, 2, 1, "", "SendsSynapticInputsOverSDRAM"], [18, 2, 1, "", "SupportsStructure"]], "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses": [[18, 3, 1, "", "clear_connection_cache"], [18, 3, 1, "", "get_connections_from_machine"], [18, 3, 1, "", "get_synapse_id_by_target"], [18, 3, 1, "", "set_synapse_dynamics"], [18, 3, 1, "", "verify_splitter"]], "spynnaker.pyNN.models.abstract_models.AbstractHasDelayStages": [[18, 5, 1, "", "n_delay_stages"]], "spynnaker.pyNN.models.abstract_models.AbstractMaxSpikes": [[18, 3, 1, "", "max_spikes_per_second"], [18, 3, 1, "", "max_spikes_per_ts"]], "spynnaker.pyNN.models.abstract_models.AbstractNeuronExpandable": [[18, 3, 1, "", "gen_neurons_on_machine"], [18, 5, 1, "", "neuron_generator_region"], [18, 3, 1, "", "read_generated_initial_values"]], "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable": [[18, 5, 1, "", "bit_field_size"], [18, 5, 1, "", "connection_generator_region"], [18, 3, 1, "", "gen_on_machine"], [18, 5, 1, "", "max_gen_data"], [18, 3, 1, "", "read_generated_connection_holders"]], "spynnaker.pyNN.models.abstract_models.HasShapeKeyFields": [[18, 3, 1, "", "get_shape_key_fields"]], "spynnaker.pyNN.models.abstract_models.HasSynapses": [[18, 3, 1, "", "get_connections_from_machine"]], "spynnaker.pyNN.models.abstract_models.ReceivesSynapticInputsOverSDRAM": [[18, 6, 1, "", "N_BYTES_PER_INPUT"], [18, 5, 1, "", "n_bytes_for_transfer"], [18, 5, 1, "", "weight_scales"]], "spynnaker.pyNN.models.abstract_models.SupportsStructure": [[18, 3, 1, "", "set_structure"]], "spynnaker.pyNN.models.abstract_pynn_model": [[17, 2, 1, "", "AbstractPyNNModel"]], "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel": [[17, 6, 1, "", "absolute_max_atoms_per_core"], [17, 3, 1, "", "create_vertex"], [17, 6, 1, "", "default_initial_values"], [17, 6, 1, "", "default_parameters"], [17, 5, 1, "", "default_population_parameters"], [17, 3, 1, "", "describe"], [17, 3, 1, "", "get_model_max_atoms_per_dimension_per_core"], [17, 3, 1, "", "get_parameter_names"], [17, 3, 1, "", "has_parameter"], [17, 5, 1, "", "name"], [17, 3, 1, "", "set_model_max_atoms_per_dimension_per_core"]], "spynnaker.pyNN.models.common": [[19, 2, 1, "", "EIEIOSpikeRecorder"], [19, 2, 1, "", "MultiSpikeRecorder"], [19, 2, 1, "", "NeuronRecorder"], [19, 2, 1, "", "ParameterHolder"], [19, 2, 1, "", "PopulationApplicationVertex"], [19, 0, 0, "-", "param_generator_data"], [19, 0, 0, "-", "recording_utils"]], "spynnaker.pyNN.models.common.EIEIOSpikeRecorder": [[19, 5, 1, "", "record"], [19, 3, 1, "", "set_recording"]], "spynnaker.pyNN.models.common.MultiSpikeRecorder": [[19, 3, 1, "", "get_sdram_usage_in_bytes"], [19, 5, 1, "", "record"]], "spynnaker.pyNN.models.common.NeuronRecorder": [[19, 6, 1, "", "MAX_REWIRES"], [19, 6, 1, "", "PACKETS"], [19, 6, 1, "", "PACKETS_TYPE"], [19, 6, 1, "", "REWIRING"], [19, 6, 1, "", "REWIRING_TYPE"], [19, 6, 1, "", "SPIKES"], [19, 3, 1, "", "add_region_offset"], [19, 3, 1, "", "check_indexes"], [19, 3, 1, "", "get_buffer_data_type"], [19, 3, 1, "", "get_buffered_sdram"], [19, 3, 1, "", "get_buffered_sdram_per_record"], [19, 3, 1, "", "get_buffered_sdram_per_timestep"], [19, 3, 1, "", "get_data_type"], [19, 3, 1, "", "get_event_recordable_variables"], [19, 3, 1, "", "get_generator_data"], [19, 3, 1, "", "get_generator_sdram_usage_in_bytes"], [19, 3, 1, "", "get_max_buffered_sdram_per_record"], [19, 3, 1, "", "get_max_variable_sdram_usage"], [19, 3, 1, "", "get_metadata_sdram_usage_in_bytes"], [19, 3, 1, "", "get_recordable_variables"], [19, 3, 1, "", "get_recorded_indices"], [19, 3, 1, "", "get_region"], [19, 3, 1, "", "get_region_sizes"], [19, 3, 1, "", "get_sampling_interval_ms"], [19, 3, 1, "", "get_sampling_overflow_sdram"], [19, 3, 1, "", "get_variable_sdram_usage"], [19, 5, 1, "", "is_global_generatable"], [19, 3, 1, "", "is_recordable"], [19, 3, 1, "", "is_recording"], [19, 3, 1, "", "neurons_recording"], [19, 3, 1, "", "recorded_ids_by_slice"], [19, 5, 1, "", "recorded_region_ids"], [19, 5, 1, "", "recording_variables"], [19, 3, 1, "", "set_max_rewires_per_ts"], [19, 3, 1, "", "set_recording"], [19, 3, 1, "", "write_neuron_recording_region"]], "spynnaker.pyNN.models.common.ParameterHolder": [[19, 3, 1, "", "items"], [19, 3, 1, "", "keys"], [19, 3, 1, "", "values"]], "spynnaker.pyNN.models.common.PopulationApplicationVertex": [[19, 5, 1, "", "conductance_based"], [19, 3, 1, "", "get_atom_key_map"], [19, 3, 1, "", "get_buffer_data_type"], [19, 3, 1, "", "get_current_state_values"], [19, 3, 1, "", "get_data_type"], [19, 3, 1, "", "get_initial_state_values"], [19, 3, 1, "", "get_neurons_recording"], [19, 3, 1, "", "get_parameter_values"], [19, 3, 1, "", "get_parameters"], [19, 3, 1, "", "get_recordable_variables"], [19, 3, 1, "", "get_recording_region"], [19, 3, 1, "", "get_recording_variables"], [19, 3, 1, "", "get_sampling_interval_ms"], [19, 3, 1, "", "get_state_variables"], [19, 3, 1, "", "get_units"], [19, 3, 1, "", "inject"], [19, 5, 1, "", "n_colour_bits"], [19, 3, 1, "", "set_current_state_values"], [19, 3, 1, "", "set_initial_state_values"], [19, 3, 1, "", "set_not_recording"], [19, 3, 1, "", "set_parameter_values"], [19, 3, 1, "", "set_recording"]], "spynnaker.pyNN.models.common.param_generator_data": [[19, 7, 1, "", "MAX_PARAMS_BYTES"], [19, 1, 1, "", "get_generator_type"], [19, 1, 1, "", "is_param_generatable"], [19, 1, 1, "", "param_generator_id"], [19, 1, 1, "", "param_generator_params"], [19, 1, 1, "", "param_generator_params_size_in_bytes"], [19, 1, 1, "", "type_has_generator"]], "spynnaker.pyNN.models.common.recording_utils": [[19, 1, 1, "", "make_missing_string"]], "spynnaker.pyNN.models.current_sources": [[20, 2, 1, "", "ACSource"], [20, 2, 1, "", "AbstractCurrentSource"], [20, 2, 1, "", "CurrentSourceIDs"], [20, 2, 1, "", "DCSource"], [20, 2, 1, "", "NoisyCurrentSource"], [20, 2, 1, "", "StepCurrentSource"]], "spynnaker.pyNN.models.current_sources.ACSource": [[20, 5, 1, "", "current_source_id"], [20, 5, 1, "", "get_parameter_types"], [20, 5, 1, "", "get_parameters"], [20, 3, 1, "", "get_sdram_usage_in_bytes"], [20, 3, 1, "", "set_parameters"]], "spynnaker.pyNN.models.current_sources.AbstractCurrentSource": [[20, 5, 1, "", "app_vertex"], [20, 5, 1, "", "current_source_id"], [20, 5, 1, "", "get_parameter_types"], [20, 5, 1, "", "get_parameters"], [20, 3, 1, "", "get_sdram_usage_in_bytes"], [20, 3, 1, "", "inject_into"], [20, 5, 1, "", "population"], [20, 3, 1, "", "set_app_vertex"], [20, 3, 1, "", "set_parameters"], [20, 3, 1, "", "set_population"]], "spynnaker.pyNN.models.current_sources.CurrentSourceIDs": [[20, 6, 1, "", "AC_SOURCE"], [20, 6, 1, "", "DC_SOURCE"], [20, 6, 1, "", "NOISY_CURRENT_SOURCE"], [20, 6, 1, "", "NO_SOURCE"], [20, 6, 1, "", "N_SOURCES"], [20, 6, 1, "", "STEP_CURRENT_SOURCE"]], "spynnaker.pyNN.models.current_sources.DCSource": [[20, 5, 1, "", "current_source_id"], [20, 5, 1, "", "get_parameter_types"], [20, 5, 1, "", "get_parameters"], [20, 3, 1, "", "get_sdram_usage_in_bytes"], [20, 3, 1, "", "set_parameters"]], "spynnaker.pyNN.models.current_sources.NoisyCurrentSource": [[20, 5, 1, "", "current_source_id"], [20, 5, 1, "", "get_parameter_types"], [20, 5, 1, "", "get_parameters"], [20, 3, 1, "", "get_sdram_usage_in_bytes"], [20, 3, 1, "", "set_parameters"]], "spynnaker.pyNN.models.current_sources.StepCurrentSource": [[20, 5, 1, "", "current_source_id"], [20, 5, 1, "", "get_parameter_types"], [20, 5, 1, "", "get_parameters"], [20, 3, 1, "", "get_sdram_usage_in_bytes"], [20, 3, 1, "", "set_parameters"]], "spynnaker.pyNN.models.defaults": [[17, 1, 1, "", "default_initial_values"], [17, 1, 1, "", "default_parameters"], [17, 1, 1, "", "get_dict_from_init"]], "spynnaker.pyNN.models.neural_projections": [[21, 2, 1, "", "DelayAfferentApplicationEdge"], [21, 2, 1, "", "DelayedApplicationEdge"], [21, 2, 1, "", "ProjectionApplicationEdge"], [21, 2, 1, "", "SynapseInformation"], [22, 0, 0, "-", "connectors"]], "spynnaker.pyNN.models.neural_projections.DelayedApplicationEdge": [[21, 3, 1, "", "add_synapse_information"], [21, 5, 1, "", "synapse_information"], [21, 5, 1, "", "undelayed_edge"]], "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge": [[21, 3, 1, "", "add_synapse_information"], [21, 5, 1, "", "delay_edge"], [21, 3, 1, "", "get_local_provenance_data"], [21, 5, 1, "", "is_neuromodulation"], [21, 5, 1, "", "n_delay_stages"], [21, 5, 1, "", "synapse_information"]], "spynnaker.pyNN.models.neural_projections.SynapseInformation": [[21, 3, 1, "", "add_pre_run_connection_holder"], [21, 5, 1, "", "connector"], [21, 5, 1, "", "delays"], [21, 3, 1, "", "finish_connection_holders"], [21, 3, 1, "", "may_generate_on_machine"], [21, 3, 1, "", "may_use_direct_matrix"], [21, 5, 1, "", "n_post_neurons"], [21, 5, 1, "", "n_pre_neurons"], [21, 5, 1, "", "post_population"], [21, 5, 1, "", "postpop_is_view"], [21, 5, 1, "", "pre_population"], [21, 5, 1, "", "pre_run_connection_holders"], [21, 5, 1, "", "prepop_is_view"], [21, 5, 1, "", "receptor_type"], [21, 5, 1, "", "rng"], [21, 5, 1, "", "synapse_dynamics"], [21, 5, 1, "", "synapse_type"], [21, 5, 1, "", "synapse_type_from_dynamics"], [21, 5, 1, "", "weights"]], "spynnaker.pyNN.models.neural_projections.connectors": [[22, 2, 1, "", "AbstractConnector"], [22, 2, 1, "", "AbstractGenerateConnectorOnHost"], [22, 2, 1, "", "AbstractGenerateConnectorOnMachine"], [22, 2, 1, "", "AllToAllConnector"], [22, 2, 1, "", "ArrayConnector"], [22, 2, 1, "", "CSAConnector"], [22, 2, 1, "", "ConvolutionConnector"], [22, 2, 1, "", "DistanceDependentProbabilityConnector"], [22, 2, 1, "", "FixedNumberPostConnector"], [22, 2, 1, "", "FixedNumberPreConnector"], [22, 2, 1, "", "FixedProbabilityConnector"], [22, 2, 1, "", "FromFileConnector"], [22, 2, 1, "", "FromListConnector"], [22, 2, 1, "", "IndexBasedProbabilityConnector"], [22, 2, 1, "", "KernelConnector"], [22, 2, 1, "", "MultapseConnector"], [22, 2, 1, "", "OneToOneConnector"], [22, 2, 1, "", "PoolDenseConnector"], [22, 2, 1, "", "SmallWorldConnector"]], "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector": [[22, 6, 1, "", "NUMPY_SYNAPSES_DTYPE"], [22, 3, 1, "", "connect"], [22, 3, 1, "", "get_connected_vertices"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_delay_variance"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_provenance_data"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "get_weight_mean"], [22, 3, 1, "", "get_weight_variance"], [22, 5, 1, "", "safe"], [22, 3, 1, "", "set_projection_information"], [22, 3, 1, "", "set_space"], [22, 5, 1, "", "space"], [22, 5, 1, "", "synapse_info"], [22, 3, 1, "", "use_direct_matrix"], [22, 3, 1, "", "validate_connection"], [22, 5, 1, "", "verbose"]], "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnHost": [[22, 3, 1, "", "create_synaptic_block"]], "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine": [[22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "gen_delay_params"], [22, 3, 1, "", "gen_delay_params_size_in_bytes"], [22, 3, 1, "", "gen_delays_id"], [22, 3, 1, "", "gen_weight_params_size_in_bytes"], [22, 3, 1, "", "gen_weights_id"], [22, 3, 1, "", "gen_weights_params"], [22, 3, 1, "", "generate_on_machine"], [22, 3, 1, "", "validate_connection"]], "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector": [[22, 5, 1, "", "allow_self_connections"], [22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"]], "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"]], "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "show_connection_set"]], "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector": [[22, 3, 1, "", "get_connected_vertices"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_post_shape"], [22, 3, 1, "", "get_weight_maximum"], [22, 5, 1, "", "kernel_weights"], [22, 5, 1, "", "local_only_n_bytes"], [22, 5, 1, "", "negative_receptor_type"], [22, 5, 1, "", "positive_receptor_type"], [22, 3, 1, "", "validate_connection"], [22, 3, 1, "", "write_local_only_data"]], "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector": [[22, 5, 1, "", "allow_self_connections"], [22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "d_expression"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "set_projection_information"]], "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector": [[22, 5, 1, "", "allow_self_connections"], [22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "set_projection_information"]], "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector": [[22, 5, 1, "", "allow_self_connections"], [22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "set_projection_information"]], "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 5, 1, "", "p_connect"]], "spynnaker.pyNN.models.neural_projections.connectors.FromFileConnector": [[22, 3, 1, "", "get_reader"]], "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector": [[22, 5, 1, "", "column_names"], [22, 5, 1, "", "conn_list"], [22, 3, 1, "", "create_synaptic_block"], [22, 3, 1, "", "get_connected_vertices"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_delay_variance"], [22, 3, 1, "", "get_extra_parameter_names"], [22, 3, 1, "", "get_extra_parameters"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "get_weight_mean"], [22, 3, 1, "", "get_weight_variance"]], "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector": [[22, 5, 1, "", "allow_self_connections"], [22, 3, 1, "", "create_synaptic_block"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 5, 1, "", "index_expression"]], "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_connected_vertices"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_delay_variance"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "get_weight_mean"], [22, 3, 1, "", "get_weight_variance"]], "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_rng_next"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "set_projection_information"]], "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 5, 1, "", "gen_connector_id"], [22, 3, 1, "", "gen_connector_params"], [22, 5, 1, "", "gen_connector_params_size_in_bytes"], [22, 3, 1, "", "get_connected_vertices"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "use_direct_matrix"]], "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector": [[22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_post_pool_shape"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "local_only_n_bytes"], [22, 5, 1, "", "negative_receptor_type"], [22, 5, 1, "", "positive_receptor_type"], [22, 3, 1, "", "validate_connection"], [22, 5, 1, "", "weights"], [22, 3, 1, "", "write_local_only_data"]], "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector": [[22, 3, 1, "", "create_synaptic_block"], [22, 3, 1, "", "get_delay_maximum"], [22, 3, 1, "", "get_delay_minimum"], [22, 3, 1, "", "get_n_connections_from_pre_vertex_maximum"], [22, 3, 1, "", "get_n_connections_to_post_vertex_maximum"], [22, 3, 1, "", "get_weight_maximum"], [22, 3, 1, "", "set_projection_information"]], "spynnaker.pyNN.models.neural_properties": [[23, 2, 1, "", "NeuronParameter"]], "spynnaker.pyNN.models.neural_properties.NeuronParameter": [[23, 3, 1, "", "get_dataspec_datatype"], [23, 3, 1, "", "get_value"], [23, 3, 1, "", "iterator_by_slice"]], "spynnaker.pyNN.models.neuron": [[24, 2, 1, "", "AbstractPopulationVertex"], [24, 2, 1, "", "AbstractPyNNNeuronModel"], [24, 2, 1, "", "AbstractPyNNNeuronModelStandard"], [24, 2, 1, "", "ConnectionHolder"], [24, 2, 1, "", "LocalOnlyProvenance"], [24, 2, 1, "", "NeuronProvenance"], [24, 2, 1, "", "PopulationMachineLocalOnlyCombinedVertex"], [24, 2, 1, "", "PopulationMachineVertex"], [24, 2, 1, "", "PopulationNeuronsMachineVertex"], [24, 2, 1, "", "PopulationSynapsesMachineVertexCommon"], [24, 2, 1, "", "PopulationSynapsesMachineVertexLead"], [24, 2, 1, "", "PopulationSynapsesMachineVertexShared"], [24, 2, 1, "", "SpikeProcessingFastProvenance"], [24, 2, 1, "", "SpikeProcessingProvenance"], [24, 2, 1, "", "SynapseProvenance"], [25, 0, 0, "-", "additional_inputs"], [26, 0, 0, "-", "builds"], [24, 0, 0, "-", "generator_data"], [27, 0, 0, "-", "implementations"], [28, 0, 0, "-", "input_types"], [29, 0, 0, "-", "local_only"], [24, 0, 0, "-", "master_pop_table"], [24, 0, 0, "-", "neuron_data"], [30, 0, 0, "-", "neuron_models"], [31, 0, 0, "-", "plasticity"], [24, 0, 0, "-", "population_machine_common"], [24, 0, 0, "-", "population_machine_synapses"], [36, 0, 0, "-", "structural_plasticity"], [41, 0, 0, "-", "synapse_dynamics"], [24, 0, 0, "-", "synapse_io"], [42, 0, 0, "-", "synapse_types"], [24, 0, 0, "-", "synaptic_matrices"], [24, 0, 0, "-", "synaptic_matrix_app"], [43, 0, 0, "-", "threshold_types"]], "spynnaker.pyNN.models.neuron.AbstractPopulationVertex": [[24, 6, 1, "", "CORE_PARAMS_BASE_SIZE"], [24, 3, 1, "", "add_incoming_projection"], [24, 5, 1, "", "atoms_shape"], [24, 3, 1, "", "clear_connection_cache"], [24, 5, 1, "", "combined_core_capable"], [24, 5, 1, "", "conductance_based"], [24, 3, 1, "", "copy_initial_state_variables"], [24, 3, 1, "", "core_seed"], [24, 5, 1, "", "current_source_id_list"], [24, 5, 1, "", "current_sources"], [24, 3, 1, "", "describe"], [24, 5, 1, "", "drop_late_spikes"], [24, 3, 1, "", "get_buffer_data_type"], [24, 3, 1, "", "get_common_constant_sdram"], [24, 3, 1, "", "get_connections_from_machine"], [24, 3, 1, "", "get_current_state_values"], [24, 3, 1, "", "get_data_type"], [24, 3, 1, "", "get_incoming_projections_from"], [24, 3, 1, "", "get_initial_state_values"], [24, 3, 1, "", "get_max_atoms_per_core"], [24, 3, 1, "", "get_max_atoms_per_dimension_per_core"], [24, 3, 1, "", "get_max_neuron_variable_sdram"], [24, 3, 1, "", "get_max_row_info"], [24, 3, 1, "", "get_max_synapse_variable_sdram"], [24, 3, 1, "", "get_neuron_constant_sdram"], [24, 3, 1, "", "get_neuron_variable_sdram"], [24, 3, 1, "", "get_neurons_recording"], [24, 3, 1, "", "get_parameter_values"], [24, 3, 1, "", "get_parameters"], [24, 3, 1, "", "get_recordable_variables"], [24, 3, 1, "", "get_recording_region"], [24, 3, 1, "", "get_recording_variables"], [24, 3, 1, "", "get_ring_buffer_shifts"], [24, 3, 1, "", "get_sampling_interval_ms"], [24, 3, 1, "", "get_sdram_usage_for_core_neuron_params"], [24, 3, 1, "", "get_sdram_usage_for_current_source_params"], [24, 3, 1, "", "get_sdram_usage_for_neuron_generation"], [24, 3, 1, "", "get_sdram_usage_for_neuron_params"], [24, 3, 1, "", "get_state_variables"], [24, 3, 1, "", "get_structural_dynamics_size"], [24, 3, 1, "", "get_synapse_dynamics_size"], [24, 3, 1, "", "get_synapse_expander_size"], [24, 3, 1, "", "get_synapse_id_by_target"], [24, 3, 1, "", "get_synapse_params_size"], [24, 3, 1, "", "get_synapse_variable_sdram"], [24, 3, 1, "", "get_synapses_size"], [24, 3, 1, "", "get_units"], [24, 3, 1, "", "get_weight_scales"], [24, 5, 1, "", "incoming_poisson_projections"], [24, 5, 1, "", "incoming_projections"], [24, 5, 1, "", "incoming_spike_buffer_size"], [24, 5, 1, "", "initial_state_variables"], [24, 3, 1, "", "inject"], [24, 5, 1, "", "n_atoms"], [24, 5, 1, "", "n_colour_bits"], [24, 5, 1, "", "n_profile_samples"], [24, 5, 1, "", "n_synapse_cores_required"], [24, 5, 1, "", "neuron_impl"], [24, 5, 1, "", "neuron_recordables"], [24, 5, 1, "", "neuron_recorder"], [24, 5, 1, "", "parameters"], [24, 5, 1, "", "pop_seed"], [24, 5, 1, "", "read_initial_values"], [24, 3, 1, "", "reset_to_first_timestep"], [24, 5, 1, "", "ring_buffer_sigma"], [24, 5, 1, "", "self_projection"], [24, 3, 1, "", "set_current_state_values"], [24, 3, 1, "", "set_initial_state_values"], [24, 3, 1, "", "set_max_atoms_per_dimension_per_core"], [24, 3, 1, "", "set_not_recording"], [24, 3, 1, "", "set_parameter_values"], [24, 3, 1, "", "set_recording"], [24, 3, 1, "", "set_structure"], [24, 3, 1, "", "set_synapse_dynamics"], [24, 5, 1, "", "size"], [24, 5, 1, "", "spikes_per_second"], [24, 5, 1, "", "state_variables"], [24, 5, 1, "", "synapse_dynamics"], [24, 5, 1, "", "synapse_executable_suffix"], [24, 5, 1, "", "synapse_recordables"], [24, 5, 1, "", "synapse_recorder"], [24, 5, 1, "", "weight_scale"]], "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModel": [[24, 3, 1, "", "create_vertex"], [24, 6, 1, "", "default_population_parameters"], [24, 5, 1, "", "name"]], "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModelStandard": [[24, 3, 1, "", "create_vertex"], [24, 6, 1, "", "default_population_parameters"]], "spynnaker.pyNN.models.neuron.ConnectionHolder": [[24, 3, 1, "", "add_connections"], [24, 5, 1, "", "connections"], [24, 3, 1, "", "finish"]], "spynnaker.pyNN.models.neuron.LocalOnlyProvenance": [[24, 6, 1, "", "N_ITEMS"], [24, 6, 1, "", "max_size_input_buffer"], [24, 6, 1, "", "max_spikes_per_timestep"], [24, 6, 1, "", "n_spikes_dropped"], [24, 6, 1, "", "n_spikes_lost_from_input"]], "spynnaker.pyNN.models.neuron.NeuronProvenance": [[24, 6, 1, "", "N_ITEMS"], [24, 6, 1, "", "current_timer_tick"], [24, 6, 1, "", "earliest_send"], [24, 6, 1, "", "latest_send"], [24, 6, 1, "", "n_tdma_misses"]], "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex": [[24, 6, 1, "", "BACKGROUND_MAX_QUEUED_NAME"], [24, 6, 1, "", "BACKGROUND_OVERLOADS_NAME"], [24, 6, 1, "", "COMMON_REGIONS"], [24, 6, 1, "", "INPUT_BUFFER_FULL_NAME"], [24, 6, 1, "", "LOCAL_ONLY_SIZE"], [24, 6, 1, "", "MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"], [24, 6, 1, "", "MAX_SPIKES_PER_TIME_STEP_NAME"], [24, 6, 1, "", "NEURON_REGIONS"], [24, 6, 1, "", "N_LATE_SPIKES_NAME"], [24, 2, 1, "", "REGIONS"], [24, 3, 1, "", "generate_data_specification"], [24, 3, 1, "", "get_recorded_region_ids"], [24, 3, 1, "", "parse_extra_provenance_items"], [24, 3, 1, "", "regenerate_data_specification"], [24, 3, 1, "", "reload_required"], [24, 3, 1, "", "set_do_neuron_regeneration"], [24, 3, 1, "", "set_reload_required"]], "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS": [[24, 6, 1, "", "CORE_PARAMS"], [24, 6, 1, "", "CURRENT_SOURCE_PARAMS"], [24, 6, 1, "", "INITIAL_VALUES"], [24, 6, 1, "", "LOCAL_ONLY"], [24, 6, 1, "", "LOCAL_ONLY_PARAMS"], [24, 6, 1, "", "NEURON_BUILDER"], [24, 6, 1, "", "NEURON_PARAMS"], [24, 6, 1, "", "NEURON_RECORDING"], [24, 6, 1, "", "PROFILING"], [24, 6, 1, "", "PROVENANCE_DATA"], [24, 6, 1, "", "RECORDING"], [24, 6, 1, "", "SYSTEM"]], "spynnaker.pyNN.models.neuron.PopulationMachineVertex": [[24, 6, 1, "", "BACKGROUND_MAX_QUEUED_NAME"], [24, 6, 1, "", "BACKGROUND_OVERLOADS_NAME"], [24, 6, 1, "", "COMMON_REGIONS"], [24, 6, 1, "", "DMA_COMPLETE"], [24, 6, 1, "", "INPUT_BUFFER_FULL_NAME"], [24, 6, 1, "", "MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"], [24, 6, 1, "", "NEURON_REGIONS"], [24, 6, 1, "", "N_LATE_SPIKES_NAME"], [24, 6, 1, "", "N_REWIRES_NAME"], [24, 2, 1, "", "REGIONS"], [24, 6, 1, "", "SPIKES_PROCESSED"], [24, 6, 1, "", "SYNAPSE_REGIONS"], [24, 3, 1, "", "generate_data_specification"], [24, 3, 1, "", "get_n_keys_for_partition"], [24, 3, 1, "", "get_recorded_region_ids"], [24, 3, 1, "", "parse_extra_provenance_items"], [24, 3, 1, "", "regenerate_data_specification"], [24, 3, 1, "", "reload_required"], [24, 3, 1, "", "set_do_neuron_regeneration"], [24, 3, 1, "", "set_do_synapse_regeneration"], [24, 3, 1, "", "set_reload_required"]], "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS": [[24, 6, 1, "", "BIT_FIELD_FILTER"], [24, 6, 1, "", "CONNECTOR_BUILDER"], [24, 6, 1, "", "CORE_PARAMS"], [24, 6, 1, "", "CURRENT_SOURCE_PARAMS"], [24, 6, 1, "", "INITIAL_VALUES"], [24, 6, 1, "", "NEURON_BUILDER"], [24, 6, 1, "", "NEURON_PARAMS"], [24, 6, 1, "", "NEURON_RECORDING"], [24, 6, 1, "", "POPULATION_TABLE"], [24, 6, 1, "", "PROFILING"], [24, 6, 1, "", "PROVENANCE_DATA"], [24, 6, 1, "", "RECORDING"], [24, 6, 1, "", "STRUCTURAL_DYNAMICS"], [24, 6, 1, "", "SYNAPSE_DYNAMICS"], [24, 6, 1, "", "SYNAPSE_PARAMS"], [24, 6, 1, "", "SYNAPTIC_MATRIX"], [24, 6, 1, "", "SYSTEM"]], "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex": [[24, 6, 1, "", "COMMON_REGIONS"], [24, 6, 1, "", "NEURON_REGIONS"], [24, 2, 1, "", "REGIONS"], [24, 3, 1, "", "generate_data_specification"], [24, 3, 1, "", "get_n_bytes_for_transfer"], [24, 3, 1, "", "get_n_keys_for_partition"], [24, 3, 1, "", "get_recorded_region_ids"], [24, 5, 1, "", "n_bytes_for_transfer"], [24, 3, 1, "", "parse_extra_provenance_items"], [24, 3, 1, "", "regenerate_data_specification"], [24, 3, 1, "", "reload_required"], [24, 3, 1, "", "sdram_requirement"], [24, 3, 1, "", "set_do_neuron_regeneration"], [24, 3, 1, "", "set_reload_required"], [24, 3, 1, "", "set_sdram_partition"], [24, 5, 1, "", "weight_scales"]], "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS": [[24, 6, 1, "", "CORE_PARAMS"], [24, 6, 1, "", "CURRENT_SOURCE_PARAMS"], [24, 6, 1, "", "INITIAL_VALUES"], [24, 6, 1, "", "NEURON_BUILDER"], [24, 6, 1, "", "NEURON_PARAMS"], [24, 6, 1, "", "NEURON_RECORDING"], [24, 6, 1, "", "PROFILING"], [24, 6, 1, "", "PROVENANCE_DATA"], [24, 6, 1, "", "RECORDING"], [24, 6, 1, "", "SDRAM_EDGE_PARAMS"], [24, 6, 1, "", "SYSTEM"]], "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon": [[24, 6, 1, "", "COMMON_REGIONS"], [24, 6, 1, "", "DMA_COMPLETE"], [24, 6, 1, "", "EARLIEST_RECEIVE"], [24, 6, 1, "", "INPUT_BUFFER_FULL_NAME"], [24, 6, 1, "", "LATEST_RECEIVE"], [24, 6, 1, "", "MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"], [24, 6, 1, "", "MAX_SPIKES_PROCESSED"], [24, 6, 1, "", "MAX_SPIKES_RECEIVED"], [24, 6, 1, "", "MAX_SPIKE_OVERFLOW"], [24, 6, 1, "", "MAX_TRANSFER_TIMER_OVERRUNS"], [24, 6, 1, "", "N_LATE_SPIKES_NAME"], [24, 6, 1, "", "N_REWIRES_NAME"], [24, 6, 1, "", "N_SKIPPED_TIME_STEPS"], [24, 6, 1, "", "N_TRANSFER_TIMER_OVERRUNS"], [24, 2, 1, "", "REGIONS"], [24, 6, 1, "", "SPIKES_PROCESSED"], [24, 6, 1, "", "SYNAPSE_REGIONS"], [24, 3, 1, "", "get_recorded_region_ids"], [24, 3, 1, "", "parse_extra_provenance_items"], [24, 3, 1, "", "sdram_requirement"], [24, 3, 1, "", "set_neuron_vertex_and_partition_id"], [24, 3, 1, "", "set_sdram_partition"]], "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS": [[24, 6, 1, "", "BIT_FIELD_FILTER"], [24, 6, 1, "", "CONNECTOR_BUILDER"], [24, 6, 1, "", "KEY_REGION"], [24, 6, 1, "", "POPULATION_TABLE"], [24, 6, 1, "", "PROFILING"], [24, 6, 1, "", "PROVENANCE_DATA"], [24, 6, 1, "", "RECORDING"], [24, 6, 1, "", "SDRAM_EDGE_PARAMS"], [24, 6, 1, "", "STRUCTURAL_DYNAMICS"], [24, 6, 1, "", "SYNAPSE_DYNAMICS"], [24, 6, 1, "", "SYNAPSE_PARAMS"], [24, 6, 1, "", "SYNAPTIC_MATRIX"], [24, 6, 1, "", "SYSTEM"]], "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead": [[24, 3, 1, "", "generate_data_specification"], [24, 3, 1, "", "get_recorded_region_ids"], [24, 3, 1, "", "regenerate_data_specification"], [24, 3, 1, "", "reload_required"], [24, 3, 1, "", "set_do_synapse_regeneration"], [24, 3, 1, "", "set_reload_required"]], "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexShared": [[24, 3, 1, "", "generate_data_specification"]], "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance": [[24, 6, 1, "", "N_ITEMS"], [24, 6, 1, "", "earliest_receive"], [24, 6, 1, "", "latest_receive"], [24, 6, 1, "", "max_size_input_buffer"], [24, 6, 1, "", "max_spikes_overflow"], [24, 6, 1, "", "max_spikes_processed"], [24, 6, 1, "", "max_spikes_received"], [24, 6, 1, "", "max_transfer_timer_overrun"], [24, 6, 1, "", "n_buffer_overflows"], [24, 6, 1, "", "n_dmas_complete"], [24, 6, 1, "", "n_late_packets"], [24, 6, 1, "", "n_rewires"], [24, 6, 1, "", "n_skipped_time_steps"], [24, 6, 1, "", "n_spikes_processed"], [24, 6, 1, "", "n_transfer_timer_overruns"]], "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance": [[24, 6, 1, "", "N_ITEMS"], [24, 6, 1, "", "max_size_input_buffer"], [24, 6, 1, "", "n_buffer_overflows"], [24, 6, 1, "", "n_dmas_complete"], [24, 6, 1, "", "n_late_packets"], [24, 6, 1, "", "n_rewires"], [24, 6, 1, "", "n_spikes_processed"]], "spynnaker.pyNN.models.neuron.SynapseProvenance": [[24, 6, 1, "", "N_ITEMS"], [24, 6, 1, "", "max_late_spike"], [24, 6, 1, "", "n_failed_bitfield_reads"], [24, 6, 1, "", "n_filtered_by_bitfield"], [24, 6, 1, "", "n_ghost_searches"], [24, 6, 1, "", "n_invalid_pop_table_hits"], [24, 6, 1, "", "n_late_spikes"], [24, 6, 1, "", "n_plastic_saturations"], [24, 6, 1, "", "n_pre_synaptic_events"], [24, 6, 1, "", "n_saturations"], [24, 6, 1, "", "n_skipped_synapses"]], "spynnaker.pyNN.models.neuron.additional_inputs": [[25, 2, 1, "", "AbstractAdditionalInput"], [25, 2, 1, "", "AdditionalInputCa2Adaptive"]], "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive": [[25, 3, 1, "", "add_parameters"], [25, 3, 1, "", "add_state_variables"], [25, 5, 1, "", "i_alpha"], [25, 5, 1, "", "i_ca2"], [25, 5, 1, "", "tau_ca2"]], "spynnaker.pyNN.models.neuron.builds": [[26, 2, 1, "", "EIFConductanceAlphaPopulation"], [26, 2, 1, "", "HHCondExp"], [26, 2, 1, "", "IFCondAlpha"], [26, 2, 1, "", "IFCondExpBase"], [26, 2, 1, "", "IFCondExpStoc"], [26, 2, 1, "", "IFCurrAlpha"], [26, 2, 1, "", "IFCurrDelta"], [26, 2, 1, "", "IFCurrDualExpBase"], [26, 2, 1, "", "IFCurrExpBase"], [26, 2, 1, "", "IFCurrExpCa2Adaptive"], [26, 2, 1, "", "IFCurrExpSEMDBase"], [26, 2, 1, "", "IFFacetsConductancePopulation"], [26, 2, 1, "", "IzkCondExpBase"], [26, 2, 1, "", "IzkCurrExpBase"]], "spynnaker.pyNN.models.neuron.builds.EIFConductanceAlphaPopulation": [[26, 6, 1, "", "default_initial_values"], [26, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.models.neuron.builds.HHCondExp": [[26, 6, 1, "", "default_initial_values"], [26, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.models.neuron.builds.IFCondAlpha": [[26, 6, 1, "", "default_initial_values"], [26, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.models.neuron.builds.IFFacetsConductancePopulation": [[26, 6, 1, "", "default_initial_values"], [26, 6, 1, "", "default_parameters"]], "spynnaker.pyNN.models.neuron.generator_data": [[24, 2, 1, "", "GeneratorData"]], "spynnaker.pyNN.models.neuron.generator_data.GeneratorData": [[24, 6, 1, "", "BASE_SIZE"], [24, 5, 1, "", "gen_data"], [24, 5, 1, "", "size"]], "spynnaker.pyNN.models.neuron.implementations": [[27, 2, 1, "", "AbstractNeuronImpl"], [27, 2, 1, "", "AbstractStandardNeuronComponent"], [27, 2, 1, "", "NeuronImplStandard"], [27, 2, 1, "", "RangedDictVertexSlice"]], "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl": [[27, 3, 1, "", "add_parameters"], [27, 3, 1, "", "add_state_variables"], [27, 5, 1, "", "binary_name"], [27, 3, 1, "", "get_global_weight_scale"], [27, 3, 1, "", "get_n_synapse_types"], [27, 3, 1, "", "get_recordable_data_types"], [27, 3, 1, "", "get_recordable_units"], [27, 3, 1, "", "get_recordable_variable_index"], [27, 3, 1, "", "get_recordable_variables"], [27, 3, 1, "", "get_synapse_id_by_target"], [27, 3, 1, "", "get_synapse_targets"], [27, 3, 1, "", "get_units"], [27, 5, 1, "", "is_conductance_based"], [27, 3, 1, "", "is_recordable"], [27, 5, 1, "", "model_name"], [27, 5, 1, "", "structs"]], "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent": [[27, 3, 1, "", "add_parameters"], [27, 3, 1, "", "add_state_variables"], [27, 3, 1, "", "get_units"], [27, 3, 1, "", "has_variable"], [27, 5, 1, "", "structs"]], "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard": [[27, 3, 1, "", "add_parameters"], [27, 3, 1, "", "add_state_variables"], [27, 5, 1, "", "binary_name"], [27, 3, 1, "", "get_global_weight_scale"], [27, 3, 1, "", "get_n_synapse_types"], [27, 3, 1, "", "get_recordable_data_types"], [27, 3, 1, "", "get_recordable_units"], [27, 3, 1, "", "get_recordable_variable_index"], [27, 3, 1, "", "get_recordable_variables"], [27, 3, 1, "", "get_synapse_id_by_target"], [27, 3, 1, "", "get_synapse_targets"], [27, 3, 1, "", "get_units"], [27, 5, 1, "", "is_conductance_based"], [27, 3, 1, "", "is_recordable"], [27, 5, 1, "", "model_name"], [27, 5, 1, "", "n_steps_per_timestep"], [27, 5, 1, "", "structs"]], "spynnaker.pyNN.models.neuron.input_types": [[28, 2, 1, "", "AbstractInputType"], [28, 2, 1, "", "InputTypeConductance"], [28, 2, 1, "", "InputTypeCurrent"], [28, 2, 1, "", "InputTypeDelta"]], "spynnaker.pyNN.models.neuron.input_types.AbstractInputType": [[28, 3, 1, "", "get_global_weight_scale"]], "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance": [[28, 3, 1, "", "add_parameters"], [28, 3, 1, "", "add_state_variables"], [28, 5, 1, "", "e_rev_E"], [28, 5, 1, "", "e_rev_I"], [28, 3, 1, "", "get_global_weight_scale"]], "spynnaker.pyNN.models.neuron.input_types.InputTypeCurrent": [[28, 3, 1, "", "add_parameters"], [28, 3, 1, "", "add_state_variables"], [28, 3, 1, "", "get_global_weight_scale"]], "spynnaker.pyNN.models.neuron.input_types.InputTypeDelta": [[28, 3, 1, "", "add_parameters"], [28, 3, 1, "", "add_state_variables"], [28, 3, 1, "", "get_global_weight_scale"]], "spynnaker.pyNN.models.neuron.local_only": [[29, 2, 1, "", "AbstractLocalOnly"], [29, 2, 1, "", "LocalOnlyConvolution"], [29, 2, 1, "", "LocalOnlyPoolDense"]], "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly": [[29, 5, 1, "", "absolute_max_atoms_per_core"], [29, 3, 1, "", "get_parameters_usage_in_bytes"], [29, 5, 1, "", "is_combined_core_capable"], [29, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution": [[29, 5, 1, "", "changes_during_run"], [29, 5, 1, "", "delay"], [29, 3, 1, "", "get_maximum_positive_weight"], [29, 3, 1, "", "get_mean_negative_weight"], [29, 3, 1, "", "get_mean_positive_weight"], [29, 3, 1, "", "get_minimum_negative_weight"], [29, 3, 1, "", "get_negative_synapse_index"], [29, 3, 1, "", "get_parameters_usage_in_bytes"], [29, 3, 1, "", "get_positive_synapse_index"], [29, 3, 1, "", "get_variance_negative_weight"], [29, 3, 1, "", "get_variance_positive_weight"], [29, 3, 1, "", "get_vertex_executable_suffix"], [29, 3, 1, "", "merge"], [29, 5, 1, "", "weight"], [29, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense": [[29, 5, 1, "", "changes_during_run"], [29, 5, 1, "", "delay"], [29, 3, 1, "", "get_maximum_positive_weight"], [29, 3, 1, "", "get_mean_negative_weight"], [29, 3, 1, "", "get_mean_positive_weight"], [29, 3, 1, "", "get_minimum_negative_weight"], [29, 3, 1, "", "get_negative_synapse_index"], [29, 3, 1, "", "get_parameters_usage_in_bytes"], [29, 3, 1, "", "get_positive_synapse_index"], [29, 3, 1, "", "get_variance_negative_weight"], [29, 3, 1, "", "get_variance_positive_weight"], [29, 3, 1, "", "get_vertex_executable_suffix"], [29, 3, 1, "", "merge"], [29, 5, 1, "", "weight"], [29, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.master_pop_table": [[24, 2, 1, "", "MasterPopTableAsBinarySearch"]], "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch": [[24, 3, 1, "", "add_application_entry"], [24, 3, 1, "", "add_invalid_application_entry"], [24, 3, 1, "", "get_allowed_row_length"], [24, 3, 1, "", "get_master_population_table_size"], [24, 3, 1, "", "get_next_allowed_address"], [24, 3, 1, "", "get_pop_table_data"], [24, 3, 1, "", "initialise_table"], [24, 5, 1, "", "max_core_mask"], [24, 5, 1, "", "max_index"], [24, 5, 1, "", "max_n_neurons_per_core"]], "spynnaker.pyNN.models.neuron.neuron_data": [[24, 2, 1, "", "NeuronData"]], "spynnaker.pyNN.models.neuron.neuron_data.NeuronData": [[24, 5, 1, "", "gen_on_machine"], [24, 3, 1, "", "generate_data"], [24, 3, 1, "", "read_data"], [24, 3, 1, "", "read_initial_data"], [24, 3, 1, "", "reset_generation"], [24, 3, 1, "", "write_data"]], "spynnaker.pyNN.models.neuron.neuron_models": [[30, 2, 1, "", "NeuronModelIzh"], [30, 2, 1, "", "NeuronModelLeakyIntegrateAndFire"]], "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh": [[30, 5, 1, "", "a"], [30, 3, 1, "", "add_parameters"], [30, 3, 1, "", "add_state_variables"], [30, 5, 1, "", "b"], [30, 5, 1, "", "c"], [30, 5, 1, "", "d"], [30, 5, 1, "", "i_offset"], [30, 5, 1, "", "u_init"], [30, 5, 1, "", "v_init"]], "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire": [[30, 3, 1, "", "add_parameters"], [30, 3, 1, "", "add_state_variables"], [30, 5, 1, "", "cm"], [30, 5, 1, "", "i_offset"], [30, 5, 1, "", "tau_m"], [30, 5, 1, "", "tau_refrac"], [30, 5, 1, "", "v_init"], [30, 5, 1, "", "v_reset"], [30, 5, 1, "", "v_rest"]], "spynnaker.pyNN.models.neuron.plasticity": [[32, 0, 0, "-", "stdp"]], "spynnaker.pyNN.models.neuron.plasticity.stdp": [[32, 0, 0, "-", "common"], [33, 0, 0, "-", "synapse_structure"], [34, 0, 0, "-", "timing_dependence"], [35, 0, 0, "-", "weight_dependence"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.common": [[32, 1, 1, "", "float_to_fixed"], [32, 1, 1, "", "get_exp_lut_array"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure": [[33, 2, 1, "", "AbstractSynapseStructure"], [33, 2, 1, "", "SynapseStructureWeightAccumulator"], [33, 2, 1, "", "SynapseStructureWeightOnly"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.AbstractSynapseStructure": [[33, 3, 1, "", "get_n_half_words_per_connection"], [33, 3, 1, "", "get_weight_half_word"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightAccumulator": [[33, 3, 1, "", "get_n_half_words_per_connection"], [33, 3, 1, "", "get_weight_half_word"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightOnly": [[33, 3, 1, "", "get_n_half_words_per_connection"], [33, 3, 1, "", "get_weight_half_word"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence": [[34, 2, 1, "", "AbstractTimingDependence"], [34, 2, 1, "", "TimingDependencePfisterSpikeTriplet"], [34, 2, 1, "", "TimingDependenceRecurrent"], [34, 2, 1, "", "TimingDependenceSpikeNearestPair"], [34, 2, 1, "", "TimingDependenceSpikePair"], [34, 2, 1, "", "TimingDependenceVogels2011"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence": [[34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet": [[34, 5, 1, "", "A_minus"], [34, 5, 1, "", "A_plus"], [34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "tau_minus"], [34, 5, 1, "", "tau_plus"], [34, 5, 1, "", "tau_x"], [34, 5, 1, "", "tau_y"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent": [[34, 5, 1, "", "A_minus"], [34, 5, 1, "", "A_plus"], [34, 6, 1, "", "default_parameters"], [34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair": [[34, 5, 1, "", "A_minus"], [34, 5, 1, "", "A_plus"], [34, 6, 1, "", "default_parameters"], [34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "tau_minus"], [34, 5, 1, "", "tau_plus"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair": [[34, 5, 1, "", "A_minus"], [34, 5, 1, "", "A_plus"], [34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "tau_minus"], [34, 5, 1, "", "tau_plus"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011": [[34, 5, 1, "", "A_minus"], [34, 5, 1, "", "A_plus"], [34, 5, 1, "", "alpha"], [34, 6, 1, "", "default_parameters"], [34, 3, 1, "", "get_parameter_names"], [34, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [34, 3, 1, "", "is_same_as"], [34, 5, 1, "", "n_weight_terms"], [34, 5, 1, "", "pre_trace_n_bytes"], [34, 5, 1, "", "synaptic_structure"], [34, 5, 1, "", "tau"], [34, 5, 1, "", "vertex_executable_suffix"], [34, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence": [[35, 2, 1, "", "AbstractHasAPlusAMinus"], [35, 2, 1, "", "AbstractWeightDependence"], [35, 2, 1, "", "WeightDependenceAdditive"], [35, 2, 1, "", "WeightDependenceAdditiveTriplet"], [35, 2, 1, "", "WeightDependenceMultiplicative"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractHasAPlusAMinus": [[35, 5, 1, "", "A_minus"], [35, 5, 1, "", "A_plus"], [35, 3, 1, "", "set_a_plus_a_minus"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence": [[35, 3, 1, "", "get_parameter_names"], [35, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [35, 3, 1, "", "is_same_as"], [35, 5, 1, "", "vertex_executable_suffix"], [35, 5, 1, "", "weight_maximum"], [35, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive": [[35, 3, 1, "", "get_parameter_names"], [35, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [35, 3, 1, "", "is_same_as"], [35, 5, 1, "", "vertex_executable_suffix"], [35, 5, 1, "", "w_max"], [35, 5, 1, "", "w_min"], [35, 5, 1, "", "weight_maximum"], [35, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet": [[35, 5, 1, "", "A3_minus"], [35, 5, 1, "", "A3_plus"], [35, 6, 1, "", "default_parameters"], [35, 3, 1, "", "get_parameter_names"], [35, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [35, 3, 1, "", "is_same_as"], [35, 5, 1, "", "vertex_executable_suffix"], [35, 5, 1, "", "w_max"], [35, 5, 1, "", "w_min"], [35, 5, 1, "", "weight_maximum"], [35, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative": [[35, 3, 1, "", "get_parameter_names"], [35, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [35, 3, 1, "", "is_same_as"], [35, 5, 1, "", "vertex_executable_suffix"], [35, 5, 1, "", "w_max"], [35, 5, 1, "", "w_min"], [35, 5, 1, "", "weight_maximum"], [35, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.population_machine_common": [[24, 2, 1, "", "CommonRegions"], [24, 2, 1, "", "PopulationMachineCommon"]], "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions": [[24, 6, 1, "", "profile"], [24, 6, 1, "", "provenance"], [24, 6, 1, "", "recording"], [24, 6, 1, "", "system"]], "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon": [[24, 3, 1, "", "get_binary_file_name"], [24, 3, 1, "", "get_binary_start_type"], [24, 3, 1, "", "get_n_keys_for_partition"], [24, 3, 1, "", "get_profile_data"], [24, 3, 1, "", "get_recording_region_base_address"], [24, 5, 1, "", "sdram_required"]], "spynnaker.pyNN.models.neuron.population_machine_synapses": [[24, 2, 1, "", "PopulationMachineSynapses"]], "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses": [[24, 3, 1, "", "bit_field_base_address"], [24, 5, 1, "", "bit_field_size"], [24, 5, 1, "", "connection_generator_region"], [24, 3, 1, "", "gen_on_machine"], [24, 3, 1, "", "get_connections_from_machine"], [24, 5, 1, "", "max_gen_data"], [24, 3, 1, "", "read_generated_connection_holders"], [24, 3, 1, "", "regeneratable_sdram_blocks_and_sizes"], [24, 3, 1, "", "set_do_synapse_regeneration"]], "spynnaker.pyNN.models.neuron.structural_plasticity": [[37, 0, 0, "-", "synaptogenesis"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis": [[38, 0, 0, "-", "elimination"], [39, 0, 0, "-", "formation"], [40, 0, 0, "-", "partner_selection"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination": [[38, 2, 1, "", "AbstractElimination"], [38, 2, 1, "", "RandomByWeightElimination"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination": [[38, 3, 1, "", "get_parameter_names"], [38, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [38, 5, 1, "", "vertex_executable_suffix"], [38, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination": [[38, 3, 1, "", "get_parameter_names"], [38, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [38, 5, 1, "", "vertex_executable_suffix"], [38, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation": [[39, 2, 1, "", "AbstractFormation"], [39, 2, 1, "", "DistanceDependentFormation"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation": [[39, 3, 1, "", "get_parameter_names"], [39, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [39, 5, 1, "", "vertex_executable_suffix"], [39, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation": [[39, 3, 1, "", "distance"], [39, 3, 1, "", "generate_distance_probability_array"], [39, 3, 1, "", "get_parameter_names"], [39, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [39, 5, 1, "", "vertex_executable_suffix"], [39, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection": [[40, 2, 1, "", "AbstractPartnerSelection"], [40, 2, 1, "", "LastNeuronSelection"], [40, 2, 1, "", "RandomSelection"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection": [[40, 3, 1, "", "get_parameter_names"], [40, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [40, 5, 1, "", "vertex_executable_suffix"], [40, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection": [[40, 3, 1, "", "get_parameter_names"], [40, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [40, 5, 1, "", "vertex_executable_suffix"], [40, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection": [[40, 3, 1, "", "get_parameter_names"], [40, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [40, 5, 1, "", "vertex_executable_suffix"], [40, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics": [[41, 2, 1, "", "AbstractGenerateOnMachine"], [41, 2, 1, "", "AbstractPlasticSynapseDynamics"], [41, 2, 1, "", "AbstractSDRAMSynapseDynamics"], [41, 2, 1, "", "AbstractStaticSynapseDynamics"], [41, 2, 1, "", "AbstractSupportsSignedWeights"], [41, 2, 1, "", "AbstractSynapseDynamics"], [41, 2, 1, "", "AbstractSynapseDynamicsStructural"], [41, 2, 1, "", "PyNNSynapseDynamics"], [41, 2, 1, "", "SynapseDynamicsNeuromodulation"], [41, 2, 1, "", "SynapseDynamicsSTDP"], [41, 2, 1, "", "SynapseDynamicsStatic"], [41, 2, 1, "", "SynapseDynamicsStructuralCommon"], [41, 2, 1, "", "SynapseDynamicsStructuralSTDP"], [41, 2, 1, "", "SynapseDynamicsStructuralStatic"], [41, 1, 1, "", "calculate_spike_pair_additive_stdp_weight"], [41, 1, 1, "", "calculate_spike_pair_multiplicative_stdp_weight"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine": [[41, 5, 1, "", "gen_matrix_id"], [41, 3, 1, "", "gen_matrix_params"], [41, 5, 1, "", "gen_matrix_params_size_in_bytes"], [41, 3, 1, "", "generate_on_machine"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics": [[41, 3, 1, "", "get_n_fixed_plastic_words_per_row"], [41, 3, 1, "", "get_n_plastic_plastic_words_per_row"], [41, 3, 1, "", "get_n_synapses_in_rows"], [41, 3, 1, "", "get_n_words_for_plastic_connections"], [41, 3, 1, "", "get_plastic_synaptic_data"], [41, 3, 1, "", "read_plastic_synaptic_data"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics": [[41, 6, 1, "", "NUMPY_CONNECTORS_DTYPE"], [41, 3, 1, "", "convert_per_connection_data_to_rows"], [41, 3, 1, "", "get_max_synapses"], [41, 3, 1, "", "get_n_items"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [41, 3, 1, "", "get_words"], [41, 3, 1, "", "is_same_as"], [41, 5, 1, "", "pad_to_length"], [41, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics": [[41, 3, 1, "", "get_n_static_words_per_row"], [41, 3, 1, "", "get_n_synapses_in_rows"], [41, 3, 1, "", "get_n_words_for_static_connections"], [41, 3, 1, "", "get_static_synaptic_data"], [41, 3, 1, "", "read_static_synaptic_data"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights": [[41, 3, 1, "", "get_maximum_positive_weight"], [41, 3, 1, "", "get_mean_negative_weight"], [41, 3, 1, "", "get_mean_positive_weight"], [41, 3, 1, "", "get_minimum_negative_weight"], [41, 3, 1, "", "get_negative_synapse_index"], [41, 3, 1, "", "get_positive_synapse_index"], [41, 3, 1, "", "get_variance_negative_weight"], [41, 3, 1, "", "get_variance_positive_weight"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics": [[41, 5, 1, "", "absolute_max_atoms_per_core"], [41, 5, 1, "", "changes_during_run"], [41, 5, 1, "", "delay"], [41, 3, 1, "", "get_connected_vertices"], [41, 3, 1, "", "get_delay_maximum"], [41, 3, 1, "", "get_delay_minimum"], [41, 3, 1, "", "get_delay_variance"], [41, 3, 1, "", "get_provenance_data"], [41, 3, 1, "", "get_synapse_id_by_target"], [41, 3, 1, "", "get_value"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 3, 1, "", "get_weight_maximum"], [41, 3, 1, "", "get_weight_mean"], [41, 3, 1, "", "get_weight_variance"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "merge"], [41, 3, 1, "", "set_value"], [41, 5, 1, "", "weight"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural": [[41, 3, 1, "", "check_initial_delay"], [41, 5, 1, "", "elimination"], [41, 5, 1, "", "f_rew"], [41, 5, 1, "", "formation"], [41, 3, 1, "", "get_max_rewires_per_ts"], [41, 3, 1, "", "get_structural_parameters_sdram_usage_in_bytes"], [41, 5, 1, "", "initial_delay"], [41, 5, 1, "", "initial_weight"], [41, 5, 1, "", "partner_selection"], [41, 5, 1, "", "s_max"], [41, 5, 1, "", "seed"], [41, 3, 1, "", "set_connections"], [41, 5, 1, "", "with_replacement"], [41, 3, 1, "", "write_structural_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.PyNNSynapseDynamics": [[41, 5, 1, "", "slow"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation": [[41, 5, 1, "", "changes_during_run"], [41, 5, 1, "", "delay"], [41, 5, 1, "", "gen_matrix_id"], [41, 3, 1, "", "gen_matrix_params"], [41, 5, 1, "", "gen_matrix_params_size_in_bytes"], [41, 3, 1, "", "get_max_synapses"], [41, 3, 1, "", "get_n_fixed_plastic_words_per_row"], [41, 3, 1, "", "get_n_plastic_plastic_words_per_row"], [41, 3, 1, "", "get_n_synapses_in_rows"], [41, 3, 1, "", "get_n_words_for_plastic_connections"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [41, 3, 1, "", "get_plastic_synaptic_data"], [41, 3, 1, "", "get_synapse_id_by_target"], [41, 3, 1, "", "get_value"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "is_neuromodulation_same_as"], [41, 3, 1, "", "is_same_as"], [41, 3, 1, "", "merge"], [41, 5, 1, "", "pad_to_length"], [41, 3, 1, "", "read_plastic_synaptic_data"], [41, 3, 1, "", "set_value"], [41, 5, 1, "", "tau_c"], [41, 5, 1, "", "tau_d"], [41, 5, 1, "", "w_max"], [41, 5, 1, "", "w_min"], [41, 5, 1, "", "weight"], [41, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP": [[41, 5, 1, "", "backprop_delay"], [41, 5, 1, "", "changes_during_run"], [41, 5, 1, "", "delay"], [41, 5, 1, "", "dendritic_delay_fraction"], [41, 5, 1, "", "gen_matrix_id"], [41, 3, 1, "", "gen_matrix_params"], [41, 5, 1, "", "gen_matrix_params_size_in_bytes"], [41, 3, 1, "", "get_max_synapses"], [41, 3, 1, "", "get_n_fixed_plastic_words_per_row"], [41, 3, 1, "", "get_n_plastic_plastic_words_per_row"], [41, 3, 1, "", "get_n_synapses_in_rows"], [41, 3, 1, "", "get_n_words_for_plastic_connections"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [41, 3, 1, "", "get_plastic_synaptic_data"], [41, 3, 1, "", "get_value"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 3, 1, "", "get_weight_maximum"], [41, 3, 1, "", "get_weight_mean"], [41, 3, 1, "", "get_weight_variance"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "is_same_as"], [41, 3, 1, "", "merge"], [41, 3, 1, "", "merge_neuromodulation"], [41, 5, 1, "", "neuromodulation"], [41, 5, 1, "", "pad_to_length"], [41, 3, 1, "", "read_plastic_synaptic_data"], [41, 3, 1, "", "set_value"], [41, 5, 1, "", "timing_dependence"], [41, 5, 1, "", "weight"], [41, 5, 1, "", "weight_dependence"], [41, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic": [[41, 5, 1, "", "changes_during_run"], [41, 5, 1, "", "delay"], [41, 5, 1, "", "gen_matrix_id"], [41, 3, 1, "", "gen_matrix_params"], [41, 5, 1, "", "gen_matrix_params_size_in_bytes"], [41, 3, 1, "", "get_max_synapses"], [41, 3, 1, "", "get_n_static_words_per_row"], [41, 3, 1, "", "get_n_synapses_in_rows"], [41, 3, 1, "", "get_n_words_for_static_connections"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_parameters_sdram_usage_in_bytes"], [41, 3, 1, "", "get_static_synaptic_data"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "is_same_as"], [41, 3, 1, "", "merge"], [41, 5, 1, "", "pad_to_length"], [41, 3, 1, "", "read_static_synaptic_data"], [41, 5, 1, "", "weight"], [41, 3, 1, "", "write_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon": [[41, 6, 1, "", "PAIR_ERROR"], [41, 3, 1, "", "check_initial_delay"], [41, 5, 1, "", "connections"], [41, 3, 1, "", "get_max_rewires_per_ts"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_seeds"], [41, 3, 1, "", "get_structural_parameters_sdram_usage_in_bytes"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 3, 1, "", "is_same_as"], [41, 5, 1, "", "p_rew"], [41, 3, 1, "", "write_structural_parameters"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP": [[41, 5, 1, "", "connections"], [41, 5, 1, "", "elimination"], [41, 5, 1, "", "f_rew"], [41, 5, 1, "", "formation"], [41, 3, 1, "", "generate_on_machine"], [41, 3, 1, "", "get_connected_vertices"], [41, 3, 1, "", "get_delay_maximum"], [41, 3, 1, "", "get_delay_minimum"], [41, 3, 1, "", "get_delay_variance"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_seeds"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 3, 1, "", "get_weight_maximum"], [41, 3, 1, "", "get_weight_mean"], [41, 5, 1, "", "initial_delay"], [41, 5, 1, "", "initial_weight"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "is_same_as"], [41, 3, 1, "", "merge"], [41, 5, 1, "", "partner_selection"], [41, 5, 1, "", "s_max"], [41, 5, 1, "", "seed"], [41, 3, 1, "", "set_connections"], [41, 3, 1, "", "set_projection_parameter"], [41, 5, 1, "", "with_replacement"]], "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic": [[41, 5, 1, "", "changes_during_run"], [41, 5, 1, "", "connections"], [41, 5, 1, "", "elimination"], [41, 5, 1, "", "f_rew"], [41, 5, 1, "", "formation"], [41, 3, 1, "", "generate_on_machine"], [41, 3, 1, "", "get_connected_vertices"], [41, 3, 1, "", "get_delay_maximum"], [41, 3, 1, "", "get_delay_minimum"], [41, 3, 1, "", "get_delay_variance"], [41, 3, 1, "", "get_parameter_names"], [41, 3, 1, "", "get_seeds"], [41, 3, 1, "", "get_vertex_executable_suffix"], [41, 3, 1, "", "get_weight_maximum"], [41, 3, 1, "", "get_weight_mean"], [41, 3, 1, "", "get_weight_variance"], [41, 5, 1, "", "initial_delay"], [41, 5, 1, "", "initial_weight"], [41, 5, 1, "", "is_combined_core_capable"], [41, 3, 1, "", "is_same_as"], [41, 3, 1, "", "merge"], [41, 5, 1, "", "partner_selection"], [41, 5, 1, "", "s_max"], [41, 5, 1, "", "seed"], [41, 3, 1, "", "set_connections"], [41, 3, 1, "", "set_projection_parameter"], [41, 5, 1, "", "with_replacement"]], "spynnaker.pyNN.models.neuron.synapse_io": [[24, 2, 1, "", "MaxRowInfo"], [24, 1, 1, "", "convert_to_connections"], [24, 1, 1, "", "get_max_row_info"], [24, 1, 1, "", "get_maximum_delay_supported_in_ms"], [24, 1, 1, "", "get_synapses"], [24, 1, 1, "", "read_all_synapses"]], "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo": [[24, 5, 1, "", "delayed_max_bytes"], [24, 5, 1, "", "delayed_max_n_synapses"], [24, 5, 1, "", "delayed_max_words"], [24, 5, 1, "", "undelayed_max_bytes"], [24, 5, 1, "", "undelayed_max_n_synapses"], [24, 5, 1, "", "undelayed_max_words"]], "spynnaker.pyNN.models.neuron.synapse_types": [[42, 2, 1, "", "AbstractSynapseType"], [42, 2, 1, "", "SynapseTypeAlpha"], [42, 2, 1, "", "SynapseTypeDelta"], [42, 2, 1, "", "SynapseTypeDualExponential"], [42, 2, 1, "", "SynapseTypeExponential"], [42, 2, 1, "", "SynapseTypeSEMD"]], "spynnaker.pyNN.models.neuron.synapse_types.AbstractSynapseType": [[42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"]], "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha": [[42, 3, 1, "", "add_parameters"], [42, 3, 1, "", "add_state_variables"], [42, 5, 1, "", "exc_response"], [42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"], [42, 5, 1, "", "inh_response"], [42, 5, 1, "", "tau_syn_E"], [42, 5, 1, "", "tau_syn_I"]], "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta": [[42, 3, 1, "", "add_parameters"], [42, 3, 1, "", "add_state_variables"], [42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"], [42, 5, 1, "", "isyn_exc"], [42, 5, 1, "", "isyn_inh"]], "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential": [[42, 3, 1, "", "add_parameters"], [42, 3, 1, "", "add_state_variables"], [42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"], [42, 5, 1, "", "isyn_exc"], [42, 5, 1, "", "isyn_exc2"], [42, 5, 1, "", "isyn_inh"], [42, 5, 1, "", "tau_syn_E"], [42, 5, 1, "", "tau_syn_E2"], [42, 5, 1, "", "tau_syn_I"]], "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential": [[42, 3, 1, "", "add_parameters"], [42, 3, 1, "", "add_state_variables"], [42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"], [42, 5, 1, "", "isyn_exc"], [42, 5, 1, "", "isyn_inh"], [42, 5, 1, "", "tau_syn_E"], [42, 5, 1, "", "tau_syn_I"]], "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD": [[42, 3, 1, "", "add_parameters"], [42, 3, 1, "", "add_state_variables"], [42, 5, 1, "", "exc2_old"], [42, 3, 1, "", "get_n_synapse_types"], [42, 3, 1, "", "get_synapse_id_by_target"], [42, 3, 1, "", "get_synapse_targets"], [42, 5, 1, "", "isyn_exc"], [42, 5, 1, "", "isyn_exc2"], [42, 5, 1, "", "isyn_inh"], [42, 5, 1, "", "multiplicator"], [42, 5, 1, "", "scaling_factor"], [42, 5, 1, "", "tau_syn_E"], [42, 5, 1, "", "tau_syn_E2"], [42, 5, 1, "", "tau_syn_I"]], "spynnaker.pyNN.models.neuron.synaptic_matrices": [[24, 2, 1, "", "SynapseRegions"], [24, 2, 1, "", "SynapticMatrices"]], "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions": [[24, 6, 1, "", "bitfield_filter"], [24, 6, 1, "", "connection_builder"], [24, 6, 1, "", "pop_table"], [24, 6, 1, "", "structural_dynamics"], [24, 6, 1, "", "synapse_dynamics"], [24, 6, 1, "", "synapse_params"], [24, 6, 1, "", "synaptic_matrix"]], "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices": [[24, 5, 1, "", "bit_field_size"], [24, 5, 1, "", "gen_on_machine"], [24, 3, 1, "", "generate_data"], [24, 3, 1, "", "get_connections_from_machine"], [24, 3, 1, "", "get_index"], [24, 5, 1, "", "host_generated_block_addr"], [24, 5, 1, "", "max_gen_data"], [24, 5, 1, "", "on_chip_generated_matrix_size"], [24, 3, 1, "", "read_generated_connection_holders"], [24, 3, 1, "", "write_synaptic_data"]], "spynnaker.pyNN.models.neuron.synaptic_matrix_app": [[24, 2, 1, "", "SynapticMatrixApp"]], "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp": [[24, 5, 1, "", "gen_size"], [24, 3, 1, "", "get_connections"], [24, 3, 1, "", "get_generator_data"], [24, 3, 1, "", "get_index"], [24, 3, 1, "", "read_generated_connection_holders"], [24, 3, 1, "", "reserve_matrices"], [24, 3, 1, "", "write_matrix"]], "spynnaker.pyNN.models.neuron.threshold_types": [[43, 2, 1, "", "AbstractThresholdType"], [43, 2, 1, "", "ThresholdTypeMaassStochastic"], [43, 2, 1, "", "ThresholdTypeStatic"]], "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic": [[43, 3, 1, "", "add_parameters"], [43, 3, 1, "", "add_state_variables"], [43, 5, 1, "", "du_th"], [43, 5, 1, "", "tau_th"], [43, 5, 1, "", "v_thresh"]], "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeStatic": [[43, 3, 1, "", "add_parameters"], [43, 3, 1, "", "add_state_variables"], [43, 5, 1, "", "v_thresh"]], "spynnaker.pyNN.models.populations": [[44, 2, 1, "", "Assembly"], [44, 2, 1, "", "IDMixin"], [44, 2, 1, "", "Population"], [44, 2, 1, "", "PopulationBase"], [44, 2, 1, "", "PopulationView"]], "spynnaker.pyNN.models.populations.IDMixin": [[44, 3, 1, "", "as_view"], [44, 3, 1, "", "get_initial_value"], [44, 3, 1, "", "get_parameters"], [44, 5, 1, "", "id"], [44, 5, 1, "", "initial_values"], [44, 5, 1, "", "local"], [44, 3, 1, "", "set_initial_value"], [44, 3, 1, "", "set_parameters"]], "spynnaker.pyNN.models.populations.Population": [[44, 3, 1, "", "add_placement_constraint"], [44, 3, 1, "", "all"], [44, 5, 1, "", "all_cells"], [44, 5, 1, "", "annotations"], [44, 3, 1, "", "can_record"], [44, 5, 1, "", "celltype"], [44, 5, 1, "", "conductance_based"], [44, 3, 1, "", "create"], [44, 5, 1, "", "current_values"], [44, 3, 1, "", "describe"], [44, 3, 1, "", "find_units"], [44, 5, 1, "", "first_id"], [44, 3, 1, "", "get"], [44, 3, 1, "", "get_data"], [44, 3, 1, "", "get_spike_counts"], [44, 3, 1, "", "id_to_index"], [44, 3, 1, "", "id_to_local_index"], [44, 3, 1, "", "index_to_id"], [44, 5, 1, "", "initial_values"], [44, 3, 1, "", "initialize"], [44, 3, 1, "", "inject"], [44, 5, 1, "", "label"], [44, 5, 1, "", "last_id"], [44, 5, 1, "", "local_size"], [44, 5, 1, "", "position_generator"], [44, 5, 1, "", "positions"], [44, 3, 1, "", "record"], [44, 3, 1, "", "sample"], [44, 3, 1, "", "set"], [44, 3, 1, "", "set_max_atoms_per_core"], [44, 3, 1, "", "set_state"], [44, 5, 1, "", "size"], [44, 3, 1, "", "spinnaker_get_data"], [44, 5, 1, "", "structure"], [44, 3, 1, "", "write_data"]], "spynnaker.pyNN.models.populations.PopulationBase": [[44, 5, 1, "", "all_cells"], [44, 3, 1, "", "getSpikes"], [44, 3, 1, "", "get_data"], [44, 3, 1, "", "get_gsyn"], [44, 3, 1, "", "get_spike_counts"], [44, 3, 1, "", "get_v"], [44, 3, 1, "", "inject"], [44, 3, 1, "", "is_local"], [44, 5, 1, "", "local_cells"], [44, 5, 1, "", "local_size"], [44, 3, 1, "", "meanSpikeCount"], [44, 3, 1, "", "mean_spike_count"], [44, 3, 1, "", "nearest"], [44, 5, 1, "", "position_generator"], [44, 5, 1, "", "positions"], [44, 3, 1, "", "printSpikes"], [44, 3, 1, "", "print_gsyn"], [44, 3, 1, "", "print_v"], [44, 3, 1, "", "receptor_types"], [44, 3, 1, "", "record"], [44, 3, 1, "", "record_gsyn"], [44, 3, 1, "", "record_v"], [44, 3, 1, "", "rset"], [44, 3, 1, "", "save_positions"], [44, 5, 1, "", "structure"], [44, 3, 1, "", "tset"], [44, 3, 1, "", "write_data"]], "spynnaker.pyNN.models.populations.PopulationView": [[44, 3, 1, "", "all"], [44, 5, 1, "", "all_cells"], [44, 3, 1, "", "can_record"], [44, 5, 1, "", "celltype"], [44, 5, 1, "", "conductance_based"], [44, 5, 1, "", "current_values"], [44, 3, 1, "", "describe"], [44, 3, 1, "", "find_units"], [44, 3, 1, "", "get"], [44, 3, 1, "", "get_data"], [44, 3, 1, "", "get_spike_counts"], [44, 5, 1, "", "grandparent"], [44, 3, 1, "", "id_to_index"], [44, 3, 1, "", "index_in_grandparent"], [44, 5, 1, "", "initial_values"], [44, 3, 1, "", "initialize"], [44, 3, 1, "", "inject"], [44, 5, 1, "", "label"], [44, 5, 1, "", "mask"], [44, 5, 1, "", "parent"], [44, 3, 1, "", "record"], [44, 3, 1, "", "sample"], [44, 3, 1, "", "set"], [44, 3, 1, "", "set_state"], [44, 5, 1, "", "size"], [44, 3, 1, "", "spinnaker_get_data"], [44, 3, 1, "", "spinnaker_get_spikes"], [44, 3, 1, "", "write_data"]], "spynnaker.pyNN.models.projection": [[17, 2, 1, "", "Projection"]], "spynnaker.pyNN.models.projection.Projection": [[17, 3, 1, "", "get"], [17, 3, 1, "", "getDelays"], [17, 3, 1, "", "getSynapseDynamics"], [17, 3, 1, "", "getWeights"], [17, 5, 1, "", "label"], [17, 5, 1, "", "post"], [17, 5, 1, "", "pre"], [17, 3, 1, "", "printDelays"], [17, 3, 1, "", "printWeights"], [17, 3, 1, "", "save"], [17, 3, 1, "", "saveConnections"], [17, 3, 1, "", "set"], [17, 3, 1, "", "size"], [17, 3, 1, "", "weightHistogram"]], "spynnaker.pyNN.models.recorder": [[17, 2, 1, "", "Recorder"]], "spynnaker.pyNN.models.recorder.Recorder": [[17, 3, 1, "", "cache_data"], [17, 3, 1, "", "csv_neo_block"], [17, 3, 1, "", "extract_neo_block"], [17, 3, 1, "", "record"], [17, 5, 1, "", "recording_label"], [17, 3, 1, "", "turn_off_all_recording"], [17, 3, 1, "", "turn_on_record"], [17, 5, 1, "", "write_to_files_indicators"]], "spynnaker.pyNN.models.spike_source": [[45, 2, 1, "", "SpikeSourceArray"], [45, 2, 1, "", "SpikeSourceArrayVertex"], [45, 2, 1, "", "SpikeSourceFromFile"], [45, 2, 1, "", "SpikeSourcePoisson"], [45, 2, 1, "", "SpikeSourcePoissonMachineVertex"], [45, 2, 1, "", "SpikeSourcePoissonVariable"], [45, 2, 1, "", "SpikeSourcePoissonVertex"], [45, 0, 0, "-", "spike_source_array_machine_vertex"]], "spynnaker.pyNN.models.spike_source.SpikeSourceArray": [[45, 3, 1, "", "create_vertex"], [45, 6, 1, "", "default_population_parameters"]], "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex": [[45, 6, 1, "", "SPIKE_RECORDING_REGION_ID"], [45, 5, 1, "", "atoms_shape"], [45, 3, 1, "", "create_machine_vertex"], [45, 3, 1, "", "describe"], [45, 3, 1, "", "get_buffer_data_type"], [45, 3, 1, "", "get_data_type"], [45, 3, 1, "", "get_neurons_recording"], [45, 3, 1, "", "get_parameter_values"], [45, 3, 1, "", "get_parameters"], [45, 3, 1, "", "get_recordable_variables"], [45, 3, 1, "", "get_recording_region"], [45, 3, 1, "", "get_recording_variables"], [45, 3, 1, "", "get_sampling_interval_ms"], [45, 3, 1, "", "get_units"], [45, 5, 1, "", "n_colour_bits"], [45, 3, 1, "", "set_not_recording"], [45, 3, 1, "", "set_parameter_values"], [45, 3, 1, "", "set_recording"], [45, 3, 1, "", "set_structure"]], "spynnaker.pyNN.models.spike_source.SpikeSourceFromFile": [[45, 5, 1, "", "spike_times"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoisson": [[45, 6, 1, "", "absolute_max_atoms_per_core"], [45, 3, 1, "", "create_vertex"], [45, 6, 1, "", "default_population_parameters"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex": [[45, 2, 1, "", "EXTRA_PROVENANCE_DATA_ENTRIES"], [45, 6, 1, "", "FAST_RATE_PER_TICK_CUTOFF"], [45, 2, 1, "", "POISSON_SPIKE_SOURCE_REGIONS"], [45, 6, 1, "", "PROFILE_TAG_LABELS"], [45, 6, 1, "", "SEED_OFFSET_BYTES"], [45, 6, 1, "", "SEED_SIZE_BYTES"], [45, 6, 1, "", "SLOW_RATE_PER_TICK_CUTOFF"], [45, 3, 1, "", "generate_data_specification"], [45, 3, 1, "", "get_binary_file_name"], [45, 3, 1, "", "get_binary_start_type"], [45, 3, 1, "", "get_n_keys_for_partition"], [45, 3, 1, "", "get_profile_data"], [45, 3, 1, "", "get_recorded_region_ids"], [45, 3, 1, "", "get_recording_region_base_address"], [45, 3, 1, "", "max_spikes_per_second"], [45, 3, 1, "", "max_spikes_per_ts"], [45, 3, 1, "", "parse_extra_provenance_items"], [45, 3, 1, "", "read_parameters_from_machine"], [45, 3, 1, "", "regenerate_data_specification"], [45, 3, 1, "", "reload_required"], [45, 5, 1, "", "sdram_required"], [45, 3, 1, "", "sdram_requirement"], [45, 3, 1, "", "set_rate_changed"], [45, 3, 1, "", "set_reload_required"], [45, 3, 1, "", "set_sdram_partition"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES": [[45, 6, 1, "", "TDMA_MISSED_SLOTS"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS": [[45, 6, 1, "", "EXPANDER_REGION"], [45, 6, 1, "", "POISSON_PARAMS_REGION"], [45, 6, 1, "", "PROFILER_REGION"], [45, 6, 1, "", "PROVENANCE_REGION"], [45, 6, 1, "", "RATES_REGION"], [45, 6, 1, "", "SDRAM_EDGE_PARAMS"], [45, 6, 1, "", "SPIKE_HISTORY_REGION"], [45, 6, 1, "", "SYSTEM_REGION"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVariable": [[45, 6, 1, "", "absolute_max_atoms_per_core"], [45, 3, 1, "", "create_vertex"], [45, 6, 1, "", "default_population_parameters"]], "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex": [[45, 6, 1, "", "SPIKE_RECORDING_REGION_ID"], [45, 3, 1, "", "add_outgoing_projection"], [45, 5, 1, "", "atoms_shape"], [45, 3, 1, "", "clear_spike_recording"], [45, 3, 1, "", "create_machine_vertex"], [45, 5, 1, "", "data"], [45, 3, 1, "", "describe"], [45, 3, 1, "", "get_buffer_data_type"], [45, 3, 1, "", "get_data_type"], [45, 3, 1, "", "get_neurons_recording"], [45, 3, 1, "", "get_parameter_values"], [45, 3, 1, "", "get_parameters"], [45, 3, 1, "", "get_recordable_variables"], [45, 3, 1, "", "get_recording_region"], [45, 3, 1, "", "get_recording_sdram_usage"], [45, 3, 1, "", "get_recording_variables"], [45, 3, 1, "", "get_sampling_interval_ms"], [45, 3, 1, "", "get_sdram_used_by_atoms"], [45, 3, 1, "", "get_units"], [45, 5, 1, "", "incoming_control_edge"], [45, 3, 1, "", "kiss_seed"], [45, 5, 1, "", "max_n_rates"], [45, 5, 1, "", "max_rate"], [45, 3, 1, "", "max_spikes_per_ts"], [45, 5, 1, "", "n_atoms"], [45, 5, 1, "", "n_colour_bits"], [45, 5, 1, "", "n_profile_samples"], [45, 5, 1, "", "outgoing_projections"], [45, 5, 1, "", "rates"], [45, 5, 1, "", "seed"], [45, 3, 1, "", "set_live_poisson_control_edge"], [45, 3, 1, "", "set_not_recording"], [45, 3, 1, "", "set_parameter_values"], [45, 3, 1, "", "set_recording"], [45, 3, 1, "", "set_structure"], [45, 5, 1, "", "time_to_spike"], [45, 3, 1, "", "update_kiss_seed"]], "spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex": [[45, 2, 1, "", "SpikeSourceArrayMachineVertex"]], "spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex.SpikeSourceArrayMachineVertex": [[45, 3, 1, "", "get_n_keys_for_partition"]], "spynnaker.pyNN.models.utility_models": [[47, 0, 0, "-", "delays"], [48, 0, 0, "-", "spike_injector"]], "spynnaker.pyNN.models.utility_models.delays": [[47, 2, 1, "", "DelayExtensionMachineVertex"], [47, 2, 1, "", "DelayExtensionVertex"]], "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex": [[47, 6, 1, "", "BACKGROUND_MAX_QUEUED_NAME"], [47, 6, 1, "", "BACKGROUND_OVERLOADS_NAME"], [47, 6, 1, "", "COUNT_SATURATION_NAME"], [47, 6, 1, "", "DELAYED_FOR_TRAFFIC_NAME"], [47, 2, 1, "", "EXTRA_PROVENANCE_DATA_ENTRIES"], [47, 6, 1, "", "INPUT_BUFFER_LOST_NAME"], [47, 6, 1, "", "INVALID_KEY_COUNT_NAME"], [47, 6, 1, "", "INVALID_NEURON_ID_COUNT_NAME"], [47, 6, 1, "", "MISMATCH_ADDED_FROM_PROCESSED_NAME"], [47, 6, 1, "", "N_EXTRA_PROVENANCE_DATA_ENTRIES"], [47, 6, 1, "", "N_LATE_SPIKES_NAME"], [47, 6, 1, "", "N_PACKETS_PROCESSED_NAME"], [47, 6, 1, "", "N_PACKETS_RECEIVED_NAME"], [47, 6, 1, "", "N_PACKETS_SENT_NAME"], [47, 3, 1, "", "generate_data_specification"], [47, 3, 1, "", "get_binary_file_name"], [47, 3, 1, "", "get_binary_start_type"], [47, 3, 1, "", "get_n_keys_for_partition"], [47, 3, 1, "", "parse_extra_provenance_items"], [47, 5, 1, "", "sdram_required"], [47, 3, 1, "", "write_delay_parameters"]], "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES": [[47, 6, 1, "", "MAX_BACKGROUND_QUEUED"], [47, 6, 1, "", "N_BACKGROUND_OVERLOADS"], [47, 6, 1, "", "N_BUFFER_OVERFLOWS"], [47, 6, 1, "", "N_DELAYS"], [47, 6, 1, "", "N_LATE_SPIKES"], [47, 6, 1, "", "N_PACKETS_ADDED"], [47, 6, 1, "", "N_PACKETS_DROPPED_DUE_TO_INVALID_KEY"], [47, 6, 1, "", "N_PACKETS_LOST_DUE_TO_COUNT_SATURATION"], [47, 6, 1, "", "N_PACKETS_PROCESSED"], [47, 6, 1, "", "N_PACKETS_RECEIVED"], [47, 6, 1, "", "N_PACKETS_SENT"], [47, 6, 1, "", "N_PACKETS_WITH_INVALID_NEURON_IDS"]], "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex": [[47, 6, 1, "", "MAX_DTCM_AVAILABLE"], [47, 6, 1, "", "MAX_SLOTS"], [47, 6, 1, "", "MISMATCHED_DELAY_PER_STAGE_ERROR_MESSAGE"], [47, 6, 1, "", "SAFETY_FACTOR"], [47, 3, 1, "", "add_outgoing_edge"], [47, 3, 1, "", "delay_params_size"], [47, 5, 1, "", "delay_per_stage"], [47, 5, 1, "", "drop_late_spikes"], [47, 3, 1, "", "get_max_delay_ticks_supported"], [47, 5, 1, "", "n_atoms"], [47, 5, 1, "", "n_colour_bits"], [47, 5, 1, "", "n_delay_stages"], [47, 5, 1, "", "outgoing_edges"], [47, 5, 1, "", "partition"], [47, 3, 1, "", "set_new_n_delay_stages_and_delay_per_stage"], [47, 5, 1, "", "source_vertex"]], "spynnaker.pyNN.models.utility_models.spike_injector": [[48, 2, 1, "", "SpikeInjector"], [48, 0, 0, "-", "spike_injector_vertex"]], "spynnaker.pyNN.models.utility_models.spike_injector.SpikeInjector": [[48, 3, 1, "", "create_vertex"], [48, 6, 1, "", "default_population_parameters"]], "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex": [[48, 2, 1, "", "SpikeInjectorVertex"]], "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex": [[48, 6, 1, "", "SPIKE_RECORDING_REGION_ID"], [48, 6, 1, "", "default_parameters"], [48, 3, 1, "", "describe"], [48, 3, 1, "", "get_buffer_data_type"], [48, 3, 1, "", "get_data_type"], [48, 3, 1, "", "get_neurons_recording"], [48, 3, 1, "", "get_recordable_variables"], [48, 3, 1, "", "get_recording_region"], [48, 3, 1, "", "get_recording_variables"], [48, 3, 1, "", "get_sampling_interval_ms"], [48, 3, 1, "", "get_units"], [48, 3, 1, "", "set_not_recording"], [48, 3, 1, "", "set_recording"]], "spynnaker.pyNN.protocols": [[49, 2, 1, "", "MUNICH_MODES"], [49, 2, 1, "", "MunichIoEthernetProtocol"], [49, 2, 1, "", "MunichIoSpiNNakerLinkProtocol"], [49, 2, 1, "", "RetinaKey"], [49, 2, 1, "", "RetinaPayload"]], "spynnaker.pyNN.protocols.MUNICH_MODES": [[49, 6, 1, "", "BALL_BALANCER"], [49, 6, 1, "", "FREE"], [49, 6, 1, "", "MY_ORO_BOTICS"], [49, 6, 1, "", "PUSH_BOT"], [49, 6, 1, "", "RESET_TO_DEFAULT"], [49, 6, 1, "", "SPOMNIBOT"]], "spynnaker.pyNN.protocols.MunichIoEthernetProtocol": [[49, 3, 1, "", "disable_motor"], [49, 3, 1, "", "disable_retina"], [49, 3, 1, "", "enable_motor"], [49, 3, 1, "", "enable_retina"], [49, 3, 1, "", "laser_active_time"], [49, 3, 1, "", "laser_frequency"], [49, 3, 1, "", "laser_total_period"], [49, 3, 1, "", "led_back_active_time"], [49, 3, 1, "", "led_frequency"], [49, 3, 1, "", "led_front_active_time"], [49, 3, 1, "", "led_total_period"], [49, 3, 1, "", "motor_0_leaky_velocity"], [49, 3, 1, "", "motor_0_permanent_velocity"], [49, 3, 1, "", "motor_1_leaky_velocity"], [49, 3, 1, "", "motor_1_permanent_velocity"], [49, 3, 1, "", "set_retina_transmission"], [49, 3, 1, "", "speaker_active_time"], [49, 3, 1, "", "speaker_frequency"], [49, 3, 1, "", "speaker_total_period"]], "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol": [[49, 3, 1, "", "add_payload_logic_to_current_output"], [49, 5, 1, "", "add_payload_logic_to_current_output_key"], [49, 3, 1, "", "bias_values"], [49, 5, 1, "", "bias_values_key"], [49, 3, 1, "", "configure_master_key"], [49, 5, 1, "", "configure_master_key_key"], [49, 3, 1, "", "disable_retina"], [49, 5, 1, "", "disable_retina_key"], [49, 5, 1, "", "enable_disable_motor_key"], [49, 3, 1, "", "generic_motor0_raw_output_leak_to_0"], [49, 5, 1, "", "generic_motor0_raw_output_leak_to_0_key"], [49, 3, 1, "", "generic_motor0_raw_output_permanent"], [49, 5, 1, "", "generic_motor0_raw_output_permanent_key"], [49, 3, 1, "", "generic_motor1_raw_output_leak_to_0"], [49, 5, 1, "", "generic_motor1_raw_output_leak_to_0_key"], [49, 3, 1, "", "generic_motor1_raw_output_permanent"], [49, 5, 1, "", "generic_motor1_raw_output_permanent_key"], [49, 3, 1, "", "generic_motor_disable"], [49, 3, 1, "", "generic_motor_enable"], [49, 3, 1, "", "generic_motor_total_period"], [49, 5, 1, "", "generic_motor_total_period_key"], [49, 5, 1, "", "instance_key"], [49, 5, 1, "", "master_slave_key"], [49, 3, 1, "", "master_slave_set_master_clock_active"], [49, 3, 1, "", "master_slave_set_master_clock_not_started"], [49, 3, 1, "", "master_slave_set_slave"], [49, 3, 1, "", "master_slave_use_internal_counter"], [49, 5, 1, "", "mode"], [49, 3, 1, "", "poll_individual_sensor_continuously"], [49, 5, 1, "", "poll_individual_sensor_continuously_key"], [49, 3, 1, "", "poll_sensors_once"], [49, 5, 1, "", "poll_sensors_once_key"], [49, 6, 1, "", "protocol_instance"], [49, 3, 1, "", "push_bot_laser_config_active_time"], [49, 5, 1, "", "push_bot_laser_config_active_time_key"], [49, 3, 1, "", "push_bot_laser_config_total_period"], [49, 5, 1, "", "push_bot_laser_config_total_period_key"], [49, 3, 1, "", "push_bot_laser_set_frequency"], [49, 5, 1, "", "push_bot_laser_set_frequency_key"], [49, 3, 1, "", "push_bot_led_back_active_time"], [49, 5, 1, "", "push_bot_led_back_active_time_key"], [49, 3, 1, "", "push_bot_led_front_active_time"], [49, 5, 1, "", "push_bot_led_front_active_time_key"], [49, 3, 1, "", "push_bot_led_set_frequency"], [49, 5, 1, "", "push_bot_led_set_frequency_key"], [49, 3, 1, "", "push_bot_led_total_period"], [49, 5, 1, "", "push_bot_led_total_period_key"], [49, 3, 1, "", "push_bot_motor_0_leaking_towards_zero"], [49, 5, 1, "", "push_bot_motor_0_leaking_towards_zero_key"], [49, 3, 1, "", "push_bot_motor_0_permanent"], [49, 5, 1, "", "push_bot_motor_0_permanent_key"], [49, 3, 1, "", "push_bot_motor_1_leaking_towards_zero"], [49, 5, 1, "", "push_bot_motor_1_leaking_towards_zero_key"], [49, 3, 1, "", "push_bot_motor_1_permanent"], [49, 5, 1, "", "push_bot_motor_1_permanent_key"], [49, 3, 1, "", "push_bot_speaker_config_active_time"], [49, 5, 1, "", "push_bot_speaker_config_active_time_key"], [49, 3, 1, "", "push_bot_speaker_config_total_period"], [49, 5, 1, "", "push_bot_speaker_config_total_period_key"], [49, 3, 1, "", "push_bot_speaker_set_melody"], [49, 5, 1, "", "push_bot_speaker_set_melody_key"], [49, 3, 1, "", "push_bot_speaker_set_tone"], [49, 5, 1, "", "push_bot_speaker_set_tone_key"], [49, 3, 1, "", "pwm_pin_output_timer_a_channel_0_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_a_channel_0_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_a_channel_1_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_a_channel_1_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_a_duration"], [49, 5, 1, "", "pwm_pin_output_timer_a_duration_key"], [49, 3, 1, "", "pwm_pin_output_timer_b_channel_0_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_b_channel_0_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_b_channel_1_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_b_channel_1_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_b_duration"], [49, 5, 1, "", "pwm_pin_output_timer_b_duration_key"], [49, 3, 1, "", "pwm_pin_output_timer_c_channel_0_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_c_channel_0_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_c_channel_1_ratio"], [49, 5, 1, "", "pwm_pin_output_timer_c_channel_1_ratio_key"], [49, 3, 1, "", "pwm_pin_output_timer_c_duration"], [49, 5, 1, "", "pwm_pin_output_timer_c_duration_key"], [49, 3, 1, "", "query_state_of_io_lines"], [49, 5, 1, "", "query_state_of_io_lines_key"], [49, 3, 1, "", "remove_payload_logic_to_current_output"], [49, 5, 1, "", "remove_payload_logic_to_current_output_key"], [49, 3, 1, "", "reset_retina"], [49, 5, 1, "", "reset_retina_key"], [49, 3, 1, "", "sensor_transmission_key"], [49, 3, 1, "", "sent_mode_command"], [49, 3, 1, "", "set_mode"], [49, 5, 1, "", "set_mode_key"], [49, 3, 1, "", "set_output_pattern_for_payload"], [49, 5, 1, "", "set_output_pattern_for_payload_key"], [49, 3, 1, "", "set_payload_pins_to_high_impedance"], [49, 5, 1, "", "set_payload_pins_to_high_impedance_key"], [49, 3, 1, "", "set_retina_key"], [49, 5, 1, "", "set_retina_key_key"], [49, 3, 1, "", "set_retina_transmission"], [49, 5, 1, "", "set_retina_transmission_key"], [49, 3, 1, "", "turn_off_sensor_reporting"], [49, 5, 1, "", "turn_off_sensor_reporting_key"], [49, 5, 1, "", "uart_id"]], "spynnaker.pyNN.protocols.RetinaKey": [[49, 6, 1, "", "DOWNSAMPLE_16_X_16"], [49, 6, 1, "", "DOWNSAMPLE_32_X_32"], [49, 6, 1, "", "DOWNSAMPLE_64_X_64"], [49, 6, 1, "", "FIXED_KEY"], [49, 6, 1, "", "NATIVE_128_X_128"], [49, 5, 1, "", "bits_per_coordinate"], [49, 5, 1, "", "n_neurons"], [49, 5, 1, "", "pixels"]], "spynnaker.pyNN.protocols.RetinaPayload": [[49, 6, 1, "", "ABSOLUTE_2_BYTE_TIMESTAMPS"], [49, 6, 1, "", "ABSOLUTE_3_BYTE_TIMESTAMPS"], [49, 6, 1, "", "ABSOLUTE_4_BYTE_TIMESTAMPS"], [49, 6, 1, "", "DELTA_TIMESTAMPS"], [49, 6, 1, "", "EVENTS_IN_PAYLOAD"], [49, 6, 1, "", "NO_PAYLOAD"], [49, 5, 1, "", "n_payload_bytes"]], "spynnaker.pyNN.setup_pynn": [[3, 1, 1, "", "install_sPyNNaker_into"], [3, 1, 1, "", "version_satisfies"]], "spynnaker.pyNN.spynnaker_external_device_plugin_manager": [[3, 2, 1, "", "SpynnakerExternalDevicePluginManager"]], "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager": [[3, 3, 1, "", "activate_live_output_for"], [3, 3, 1, "", "activate_live_output_to"], [3, 3, 1, "", "add_application_vertex"], [3, 3, 1, "", "add_database_socket_address"], [3, 3, 1, "", "add_edge"], [3, 3, 1, "", "add_poisson_live_rate_control"], [3, 3, 1, "", "update_live_packet_gather_tracker"]], "spynnaker.pyNN.utilities": [[50, 0, 0, "-", "bit_field_utilities"], [50, 0, 0, "-", "buffer_data_type"], [50, 0, 0, "-", "constants"], [50, 0, 0, "-", "data_population"], [50, 0, 0, "-", "extracted_data"], [50, 0, 0, "-", "fake_HBP_Portal_machine_provider"], [50, 0, 0, "-", "neo_buffer_database"], [50, 0, 0, "-", "neo_compare"], [50, 0, 0, "-", "neo_convertor"], [50, 0, 0, "-", "neo_csv"], [51, 0, 0, "-", "random_stats"], [52, 0, 0, "-", "ranged"], [50, 0, 0, "-", "running_stats"], [50, 0, 0, "-", "struct"], [50, 0, 0, "-", "utility_calls"]], "spynnaker.pyNN.utilities.bit_field_utilities": [[50, 7, 1, "", "FILTER_HEADER_WORDS"], [50, 1, 1, "", "get_bitfield_key_map_data"], [50, 1, 1, "", "get_sdram_for_bit_field_region"], [50, 1, 1, "", "get_sdram_for_keys"], [50, 1, 1, "", "write_bitfield_init_data"]], "spynnaker.pyNN.utilities.buffer_data_type": [[50, 2, 1, "", "BufferDataType"]], "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType": [[50, 6, 1, "", "EIEIO_SPIKES"], [50, 6, 1, "", "MATRIX"], [50, 6, 1, "", "MULTI_SPIKES"], [50, 6, 1, "", "NEURON_SPIKES"], [50, 6, 1, "", "NOT_NEO"], [50, 6, 1, "", "REWIRES"]], "spynnaker.pyNN.utilities.constants": [[50, 7, 1, "", "LIVE_POISSON_CONTROL_PARTITION_ID"], [50, 7, 1, "", "MIN_SUPPORTED_DELAY"], [50, 7, 1, "", "OUT_SPIKE_BYTES"], [50, 7, 1, "", "OUT_SPIKE_SIZE"], [50, 7, 1, "", "POP_TABLE_MAX_ROW_LENGTH"], [50, 7, 1, "", "SPIKE_PARTITION_ID"], [50, 7, 1, "", "SYNAPSE_SDRAM_PARTITION_ID"], [50, 7, 1, "", "SYNAPTIC_ROW_HEADER_WORDS"], [50, 7, 1, "", "WRITE_BANDWIDTH_BYTES_PER_SECOND"]], "spynnaker.pyNN.utilities.data_population": [[50, 2, 1, "", "DataPopulation"]], "spynnaker.pyNN.utilities.data_population.DataPopulation": [[50, 3, 1, "", "describe"], [50, 3, 1, "", "find_units"], [50, 3, 1, "", "get_data"], [50, 3, 1, "", "get_spike_counts"], [50, 3, 1, "", "id_to_index"], [50, 3, 1, "", "index_to_id"], [50, 5, 1, "", "label"], [50, 5, 1, "", "local_size"], [50, 3, 1, "", "mean_spike_count"], [50, 5, 1, "", "size"], [50, 3, 1, "", "spinnaker_get_data"], [50, 3, 1, "", "write_data"]], "spynnaker.pyNN.utilities.extracted_data": [[50, 2, 1, "", "ExtractedData"]], "spynnaker.pyNN.utilities.extracted_data.ExtractedData": [[50, 3, 1, "", "get"], [50, 3, 1, "", "set"]], "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider": [[50, 2, 1, "", "FakeHBPPortalMachineProvider"]], "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider": [[50, 3, 1, "", "create"], [50, 3, 1, "", "destroy"], [50, 3, 1, "", "get_machine_info"], [50, 3, 1, "", "wait_till_not_ready"], [50, 3, 1, "", "wait_until_ready"]], "spynnaker.pyNN.utilities.neo_buffer_database": [[50, 2, 1, "", "NeoBufferDatabase"]], "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase": [[50, 3, 1, "", "add_segment"], [50, 3, 1, "", "array_to_string"], [50, 3, 1, "", "clear_data"], [50, 3, 1, "", "csv_block_metadata"], [50, 3, 1, "", "csv_segment"], [50, 3, 1, "", "get_empty_block"], [50, 3, 1, "", "get_full_block"], [50, 3, 1, "", "get_population"], [50, 3, 1, "", "get_population_metdadata"], [50, 3, 1, "", "get_recording_metadeta"], [50, 3, 1, "", "get_recording_populations"], [50, 3, 1, "", "get_recording_variables"], [50, 3, 1, "", "get_spike_counts"], [50, 3, 1, "", "spinnaker_get_data"], [50, 3, 1, "", "string_to_array"], [50, 3, 1, "", "write_metadata"], [50, 3, 1, "", "write_segment_metadata"], [50, 3, 1, "", "write_t_stop"]], "spynnaker.pyNN.utilities.neo_compare": [[50, 1, 1, "", "compare_analogsignal"], [50, 1, 1, "", "compare_blocks"], [50, 1, 1, "", "compare_segments"], [50, 1, 1, "", "compare_spiketrain"], [50, 1, 1, "", "compare_spiketrains"]], "spynnaker.pyNN.utilities.neo_convertor": [[50, 1, 1, "", "convert_analog_signal"], [50, 1, 1, "", "convert_data"], [50, 1, 1, "", "convert_data_list"], [50, 1, 1, "", "convert_gsyn"], [50, 1, 1, "", "convert_gsyn_exc_list"], [50, 1, 1, "", "convert_gsyn_inh_list"], [50, 1, 1, "", "convert_spikes"], [50, 1, 1, "", "convert_spiketrains"], [50, 1, 1, "", "convert_v_list"], [50, 1, 1, "", "count_spikes"], [50, 1, 1, "", "count_spiketrains"]], "spynnaker.pyNN.utilities.neo_csv": [[50, 2, 1, "", "NeoCsv"]], "spynnaker.pyNN.utilities.neo_csv.NeoCsv": [[50, 3, 1, "", "read_csv"]], "spynnaker.pyNN.utilities.random_stats": [[51, 2, 1, "", "AbstractRandomStats"], [51, 2, 1, "", "RandomStatsBinomialImpl"], [51, 2, 1, "", "RandomStatsExponentialImpl"], [51, 2, 1, "", "RandomStatsGammaImpl"], [51, 2, 1, "", "RandomStatsLogNormalImpl"], [51, 2, 1, "", "RandomStatsNormalClippedImpl"], [51, 2, 1, "", "RandomStatsNormalImpl"], [51, 2, 1, "", "RandomStatsPoissonImpl"], [51, 2, 1, "", "RandomStatsRandIntImpl"], [51, 2, 1, "", "RandomStatsScipyImpl"], [51, 2, 1, "", "RandomStatsUniformImpl"], [51, 2, 1, "", "RandomStatsVonmisesImpl"]], "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl": [[51, 3, 1, "", "cdf"], [51, 3, 1, "", "high"], [51, 3, 1, "", "low"], [51, 3, 1, "", "mean"], [51, 3, 1, "", "ppf"], [51, 3, 1, "", "std"], [51, 3, 1, "", "var"]], "spynnaker.pyNN.utilities.ranged": [[52, 2, 1, "", "SpynnakerRangedList"]], "spynnaker.pyNN.utilities.ranged.SpynnakerRangedList": [[52, 3, 1, "", "as_list"], [52, 3, 1, "", "is_list"]], "spynnaker.pyNN.utilities.running_stats": [[50, 2, 1, "", "RunningStats"]], "spynnaker.pyNN.utilities.running_stats.RunningStats": [[50, 3, 1, "", "add_item"], [50, 3, 1, "", "add_items"], [50, 5, 1, "", "mean"], [50, 5, 1, "", "n_items"], [50, 5, 1, "", "standard_deviation"], [50, 5, 1, "", "variance"]], "spynnaker.pyNN.utilities.struct": [[50, 2, 1, "", "Struct"], [50, 2, 1, "", "StructRepeat"]], "spynnaker.pyNN.utilities.struct.Struct": [[50, 5, 1, "", "fields"], [50, 3, 1, "", "get_data"], [50, 3, 1, "", "get_generator_data"], [50, 3, 1, "", "get_size_in_whole_words"], [50, 5, 1, "", "is_generatable"], [50, 5, 1, "", "numpy_dtype"], [50, 3, 1, "", "read_data"], [50, 5, 1, "", "repeat_type"]], "spynnaker.pyNN.utilities.struct.StructRepeat": [[50, 6, 1, "", "GLOBAL"], [50, 6, 1, "", "PER_NEURON"]], "spynnaker.pyNN.utilities.utility_calls": [[50, 1, 1, "", "check_directory_exists_and_create_if_not"], [50, 1, 1, "", "convert_param_to_numpy"], [50, 1, 1, "", "convert_to"], [50, 1, 1, "", "create_mars_kiss_seeds"], [50, 1, 1, "", "get_maximum_probable_value"], [50, 1, 1, "", "get_mean"], [50, 1, 1, "", "get_minimum_probable_value"], [50, 1, 1, "", "get_n_bits"], [50, 1, 1, "", "get_probability_within_range"], [50, 1, 1, "", "get_probable_maximum_selected"], [50, 1, 1, "", "get_probable_minimum_selected"], [50, 1, 1, "", "get_standard_deviation"], [50, 1, 1, "", "get_time_to_write_us"], [50, 1, 1, "", "get_variance"], [50, 1, 1, "", "high"], [50, 1, 1, "", "low"], [50, 1, 1, "", "moved_in_v6"], [50, 1, 1, "", "moved_in_v7"], [50, 1, 1, "", "moved_in_v7_warning"], [50, 1, 1, "", "read_in_data_from_file"], [50, 1, 1, "", "read_spikes_from_file"]], "spynnaker.spike_checker": [[2, 1, 1, "", "synfire_multiple_lines_spike_checker"], [2, 1, 1, "", "synfire_spike_checker"]], "spynnaker.spynnaker_plotting": [[2, 2, 1, "", "SpynnakerPanel"], [2, 1, 1, "", "heat_plot_neo"], [2, 1, 1, "", "heat_plot_numpy"], [2, 1, 1, "", "plot_segment"], [2, 1, 1, "", "plot_spikes_numpy"], [2, 1, 1, "", "plot_spiketrains"]], "spynnaker.spynnaker_plotting.SpynnakerPanel": [[2, 3, 1, "", "plot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception", "5": "py:property", "6": "py:attribute", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "data", "Python data"]}, "titleterms": {"spynnak": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "subpackag": [2, 3, 7, 8, 13, 17, 21, 24, 31, 32, 36, 37, 46, 50], "submodul": [2, 3, 5, 7, 17, 19, 24, 32, 45, 48, 50], "gsyn_tool": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "plot_util": 2, "spike_check": 2, "spynnaker_plot": 2, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "pynn": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "abstract_spinnaker_common": 3, "config_setup": 3, "except": 3, "setup_pynn": 3, "spinnak": 3, "spynnaker_external_device_plugin_manag": 3, "todo": [3, 22], "avail": 3, "distribut": 3, "connect": 4, "data": 5, "spynnaker_data_writ": 5, "external_devic": 6, "external_devices_model": [7, 8, 9, 10, 11, 12], "external_device_lif_control_vertex": 7, "spif_devic": 7, "push_bot": [8, 9, 10, 11, 12], "control": 9, "ethernet": 10, "paramet": 11, "spinnaker_link": 12, "extra_algorithm": [13, 14], "splitter_compon": 14, "extra_model": 15, "model_binari": 16, "model": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "abstract_pynn_model": 17, "default": 17, "project": 17, "record": 17, "abstract_model": 18, "common": [19, 32], "param_generator_data": 19, "recording_util": 19, "current_sourc": 20, "neural_project": [21, 22], "connector": 22, "neural_properti": 23, "neuron": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "generator_data": 24, "master_pop_t": 24, "neuron_data": 24, "population_machine_common": 24, "population_machine_synaps": 24, "synapse_io": 24, "synaptic_matric": 24, "synaptic_matrix_app": 24, "additional_input": 25, "build": 26, "implement": 27, "input_typ": 28, "local_onli": 29, "neuron_model": 30, "plastic": [31, 32, 33, 34, 35], "stdp": [32, 33, 34, 35], "synapse_structur": 33, "timing_depend": 34, "weight_depend": 35, "structural_plast": [36, 37, 38, 39, 40], "synaptogenesi": [37, 38, 39, 40], "elimin": 38, "format": 39, "partner_select": 40, "synapse_dynam": 41, "synapse_typ": 42, "threshold_typ": 43, "popul": 44, "spike_sourc": 45, "spike_source_array_machine_vertex": 45, "utility_model": [46, 47, 48], "delai": 47, "spike_injector": 48, "spike_injector_vertex": 48, "protocol": 49, "util": [50, 51, 52], "bit_field_util": 50, "buffer_data_typ": 50, "constant": 50, "data_popul": 50, "extracted_data": 50, "fake_hbp_portal_machine_provid": 50, "neo_buffer_databas": 50, "neo_compar": 50, "neo_convertor": 50, "neo_csv": 50, "running_stat": 50, "struct": 50, "utility_cal": 50, "random_stat": 51, "rang": 52}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"sPyNNaker": [[0, "id1"]], "Indices and tables": [[0, "indices-and-tables"]], "spynnaker": [[1, "spynnaker"]], "spynnaker package": [[2, "spynnaker-package"]], "Subpackages": [[2, "subpackages"], [3, "subpackages"], [7, "subpackages"], [8, "subpackages"], [13, "subpackages"], [17, "subpackages"], [21, "subpackages"], [24, "subpackages"], [31, "subpackages"], [32, "subpackages"], [36, "subpackages"], [37, "subpackages"], [46, "subpackages"], [50, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [17, "submodules"], [19, "submodules"], [24, "submodules"], [32, "submodules"], [45, "submodules"], [48, "submodules"], [50, "submodules"]], "spynnaker.gsyn_tools module": [[2, "module-spynnaker.gsyn_tools"]], "spynnaker.plot_utils module": [[2, "module-spynnaker.plot_utils"]], "spynnaker.spike_checker module": [[2, "module-spynnaker.spike_checker"]], "spynnaker.spynnaker_plotting module": [[2, "module-spynnaker.spynnaker_plotting"]], "Module contents": [[2, "module-spynnaker"], [3, "module-contents"], [4, "module-spynnaker.pyNN.connections"], [5, "module-spynnaker.pyNN.data"], [6, "module-contents"], [7, "module-spynnaker.pyNN.external_devices_models"], [8, "module-spynnaker.pyNN.external_devices_models.push_bot"], [9, "module-spynnaker.pyNN.external_devices_models.push_bot.control"], [10, "module-spynnaker.pyNN.external_devices_models.push_bot.ethernet"], [11, "module-spynnaker.pyNN.external_devices_models.push_bot.parameters"], [12, "module-spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link"], [13, "module-spynnaker.pyNN.extra_algorithms"], [14, "module-spynnaker.pyNN.extra_algorithms.splitter_components"], [15, "module-contents"], [16, "module-spynnaker.pyNN.model_binaries"], [17, "module-spynnaker.pyNN.models"], [18, "module-spynnaker.pyNN.models.abstract_models"], [19, "module-spynnaker.pyNN.models.common"], [20, "module-spynnaker.pyNN.models.current_sources"], [21, "module-spynnaker.pyNN.models.neural_projections"], [22, "module-spynnaker.pyNN.models.neural_projections.connectors"], [23, "module-spynnaker.pyNN.models.neural_properties"], [24, "module-spynnaker.pyNN.models.neuron"], [25, "module-spynnaker.pyNN.models.neuron.additional_inputs"], [26, "module-spynnaker.pyNN.models.neuron.builds"], [27, "module-spynnaker.pyNN.models.neuron.implementations"], [28, "module-spynnaker.pyNN.models.neuron.input_types"], [29, "module-spynnaker.pyNN.models.neuron.local_only"], [30, "module-spynnaker.pyNN.models.neuron.neuron_models"], [31, "module-spynnaker.pyNN.models.neuron.plasticity"], [32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp"], [33, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure"], [34, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence"], [35, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence"], [36, "module-spynnaker.pyNN.models.neuron.structural_plasticity"], [37, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis"], [38, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination"], [39, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation"], [40, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection"], [41, "module-spynnaker.pyNN.models.neuron.synapse_dynamics"], [42, "module-spynnaker.pyNN.models.neuron.synapse_types"], [43, "module-spynnaker.pyNN.models.neuron.threshold_types"], [44, "module-spynnaker.pyNN.models.populations"], [45, "module-spynnaker.pyNN.models.spike_source"], [46, "module-spynnaker.pyNN.models.utility_models"], [47, "module-spynnaker.pyNN.models.utility_models.delays"], [48, "module-spynnaker.pyNN.models.utility_models.spike_injector"], [49, "module-spynnaker.pyNN.protocols"], [50, "module-spynnaker.pyNN.utilities"], [51, "module-spynnaker.pyNN.utilities.random_stats"], [52, "module-spynnaker.pyNN.utilities.ranged"]], "spynnaker.pyNN package": [[3, "spynnaker-pynn-package"]], "spynnaker.pyNN.abstract_spinnaker_common module": [[3, "module-spynnaker.pyNN.abstract_spinnaker_common"]], "spynnaker.pyNN.config_setup module": [[3, "module-spynnaker.pyNN.config_setup"]], "spynnaker.pyNN.exceptions module": [[3, "module-spynnaker.pyNN.exceptions"]], "spynnaker.pyNN.setup_pynn module": [[3, "module-spynnaker.pyNN.setup_pynn"]], "spynnaker.pyNN.spinnaker module": [[3, "module-spynnaker.pyNN.spinnaker"]], "spynnaker.pyNN.spynnaker_external_device_plugin_manager module": [[3, "module-spynnaker.pyNN.spynnaker_external_device_plugin_manager"]], "TODO": [[3, null], [22, null]], "Available distributions": [[3, "id1"]], "spynnaker.pyNN.connections package": [[4, "spynnaker-pynn-connections-package"]], "spynnaker.pyNN.data package": [[5, "spynnaker-pynn-data-package"]], "spynnaker.pyNN.data.spynnaker_data_writer module": [[5, "module-spynnaker.pyNN.data.spynnaker_data_writer"]], "spynnaker.pyNN.external_devices package": [[6, "spynnaker-pynn-external-devices-package"]], "spynnaker.pyNN.external_devices_models package": [[7, "spynnaker-pynn-external-devices-models-package"]], "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex module": [[7, "module-spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex"]], "spynnaker.pyNN.external_devices_models.spif_devices module": [[7, "module-spynnaker.pyNN.external_devices_models.spif_devices"]], "spynnaker.pyNN.external_devices_models.push_bot package": [[8, "spynnaker-pynn-external-devices-models-push-bot-package"]], "spynnaker.pyNN.external_devices_models.push_bot.control package": [[9, "spynnaker-pynn-external-devices-models-push-bot-control-package"]], "spynnaker.pyNN.external_devices_models.push_bot.ethernet package": [[10, "spynnaker-pynn-external-devices-models-push-bot-ethernet-package"]], "spynnaker.pyNN.external_devices_models.push_bot.parameters package": [[11, "spynnaker-pynn-external-devices-models-push-bot-parameters-package"]], "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link package": [[12, "spynnaker-pynn-external-devices-models-push-bot-spinnaker-link-package"]], "spynnaker.pyNN.extra_algorithms package": [[13, "spynnaker-pynn-extra-algorithms-package"]], "spynnaker.pyNN.extra_algorithms.splitter_components package": [[14, "spynnaker-pynn-extra-algorithms-splitter-components-package"]], "spynnaker.pyNN.extra_models package": [[15, "spynnaker-pynn-extra-models-package"]], "spynnaker.pyNN.model_binaries package": [[16, "spynnaker-pynn-model-binaries-package"]], "spynnaker.pyNN.models package": [[17, "spynnaker-pynn-models-package"]], "spynnaker.pyNN.models.abstract_pynn_model module": [[17, "module-spynnaker.pyNN.models.abstract_pynn_model"]], "spynnaker.pyNN.models.defaults module": [[17, "module-spynnaker.pyNN.models.defaults"]], "spynnaker.pyNN.models.projection module": [[17, "module-spynnaker.pyNN.models.projection"]], "spynnaker.pyNN.models.recorder module": [[17, "module-spynnaker.pyNN.models.recorder"]], "spynnaker.pyNN.models.abstract_models package": [[18, "spynnaker-pynn-models-abstract-models-package"]], "spynnaker.pyNN.models.common package": [[19, "spynnaker-pynn-models-common-package"]], "spynnaker.pyNN.models.common.param_generator_data module": [[19, "module-spynnaker.pyNN.models.common.param_generator_data"]], "spynnaker.pyNN.models.common.recording_utils module": [[19, "module-spynnaker.pyNN.models.common.recording_utils"]], "spynnaker.pyNN.models.current_sources package": [[20, "spynnaker-pynn-models-current-sources-package"]], "spynnaker.pyNN.models.neural_projections package": [[21, "spynnaker-pynn-models-neural-projections-package"]], "spynnaker.pyNN.models.neural_projections.connectors package": [[22, "spynnaker-pynn-models-neural-projections-connectors-package"]], "spynnaker.pyNN.models.neural_properties package": [[23, "spynnaker-pynn-models-neural-properties-package"]], "spynnaker.pyNN.models.neuron package": [[24, "spynnaker-pynn-models-neuron-package"]], "spynnaker.pyNN.models.neuron.generator_data module": [[24, "module-spynnaker.pyNN.models.neuron.generator_data"]], "spynnaker.pyNN.models.neuron.master_pop_table module": [[24, "module-spynnaker.pyNN.models.neuron.master_pop_table"]], "spynnaker.pyNN.models.neuron.neuron_data module": [[24, "module-spynnaker.pyNN.models.neuron.neuron_data"]], "spynnaker.pyNN.models.neuron.population_machine_common module": [[24, "module-spynnaker.pyNN.models.neuron.population_machine_common"]], "spynnaker.pyNN.models.neuron.population_machine_synapses module": [[24, "module-spynnaker.pyNN.models.neuron.population_machine_synapses"]], "spynnaker.pyNN.models.neuron.synapse_io module": [[24, "module-spynnaker.pyNN.models.neuron.synapse_io"]], "spynnaker.pyNN.models.neuron.synaptic_matrices module": [[24, "module-spynnaker.pyNN.models.neuron.synaptic_matrices"]], "spynnaker.pyNN.models.neuron.synaptic_matrix_app module": [[24, "module-spynnaker.pyNN.models.neuron.synaptic_matrix_app"]], "spynnaker.pyNN.models.neuron.additional_inputs package": [[25, "spynnaker-pynn-models-neuron-additional-inputs-package"]], "spynnaker.pyNN.models.neuron.builds package": [[26, "spynnaker-pynn-models-neuron-builds-package"]], "spynnaker.pyNN.models.neuron.implementations package": [[27, "spynnaker-pynn-models-neuron-implementations-package"]], "spynnaker.pyNN.models.neuron.input_types package": [[28, "spynnaker-pynn-models-neuron-input-types-package"]], "spynnaker.pyNN.models.neuron.local_only package": [[29, "spynnaker-pynn-models-neuron-local-only-package"]], "spynnaker.pyNN.models.neuron.neuron_models package": [[30, "spynnaker-pynn-models-neuron-neuron-models-package"]], "spynnaker.pyNN.models.neuron.plasticity package": [[31, "spynnaker-pynn-models-neuron-plasticity-package"]], "spynnaker.pyNN.models.neuron.plasticity.stdp package": [[32, "spynnaker-pynn-models-neuron-plasticity-stdp-package"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.common module": [[32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.common"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure package": [[33, "spynnaker-pynn-models-neuron-plasticity-stdp-synapse-structure-package"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence package": [[34, "spynnaker-pynn-models-neuron-plasticity-stdp-timing-dependence-package"]], "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence package": [[35, "spynnaker-pynn-models-neuron-plasticity-stdp-weight-dependence-package"]], "spynnaker.pyNN.models.neuron.structural_plasticity package": [[36, "spynnaker-pynn-models-neuron-structural-plasticity-package"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis package": [[37, "spynnaker-pynn-models-neuron-structural-plasticity-synaptogenesis-package"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination package": [[38, "spynnaker-pynn-models-neuron-structural-plasticity-synaptogenesis-elimination-package"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation package": [[39, "spynnaker-pynn-models-neuron-structural-plasticity-synaptogenesis-formation-package"]], "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection package": [[40, "spynnaker-pynn-models-neuron-structural-plasticity-synaptogenesis-partner-selection-package"]], "spynnaker.pyNN.models.neuron.synapse_dynamics package": [[41, "spynnaker-pynn-models-neuron-synapse-dynamics-package"]], "spynnaker.pyNN.models.neuron.synapse_types package": [[42, "spynnaker-pynn-models-neuron-synapse-types-package"]], "spynnaker.pyNN.models.neuron.threshold_types package": [[43, "spynnaker-pynn-models-neuron-threshold-types-package"]], "spynnaker.pyNN.models.populations package": [[44, "spynnaker-pynn-models-populations-package"]], "spynnaker.pyNN.models.spike_source package": [[45, "spynnaker-pynn-models-spike-source-package"]], "spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex module": [[45, "module-spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex"]], "spynnaker.pyNN.models.utility_models package": [[46, "spynnaker-pynn-models-utility-models-package"]], "spynnaker.pyNN.models.utility_models.delays package": [[47, "spynnaker-pynn-models-utility-models-delays-package"]], "spynnaker.pyNN.models.utility_models.spike_injector package": [[48, "spynnaker-pynn-models-utility-models-spike-injector-package"]], "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex module": [[48, "module-spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex"]], "spynnaker.pyNN.protocols package": [[49, "spynnaker-pynn-protocols-package"]], "spynnaker.pyNN.utilities package": [[50, "spynnaker-pynn-utilities-package"]], "spynnaker.pyNN.utilities.bit_field_utilities module": [[50, "module-spynnaker.pyNN.utilities.bit_field_utilities"]], "spynnaker.pyNN.utilities.buffer_data_type module": [[50, "module-spynnaker.pyNN.utilities.buffer_data_type"]], "spynnaker.pyNN.utilities.constants module": [[50, "module-spynnaker.pyNN.utilities.constants"]], "spynnaker.pyNN.utilities.data_population module": [[50, "module-spynnaker.pyNN.utilities.data_population"]], "spynnaker.pyNN.utilities.extracted_data module": [[50, "module-spynnaker.pyNN.utilities.extracted_data"]], "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider module": [[50, "module-spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider"]], "spynnaker.pyNN.utilities.neo_buffer_database module": [[50, "module-spynnaker.pyNN.utilities.neo_buffer_database"]], "spynnaker.pyNN.utilities.neo_compare module": [[50, "module-spynnaker.pyNN.utilities.neo_compare"]], "spynnaker.pyNN.utilities.neo_convertor module": [[50, "module-spynnaker.pyNN.utilities.neo_convertor"]], "spynnaker.pyNN.utilities.neo_csv module": [[50, "module-spynnaker.pyNN.utilities.neo_csv"]], "spynnaker.pyNN.utilities.running_stats module": [[50, "module-spynnaker.pyNN.utilities.running_stats"]], "spynnaker.pyNN.utilities.struct module": [[50, "module-spynnaker.pyNN.utilities.struct"]], "spynnaker.pyNN.utilities.utility_calls module": [[50, "module-spynnaker.pyNN.utilities.utility_calls"]], "spynnaker.pyNN.utilities.random_stats package": [[51, "spynnaker-pynn-utilities-random-stats-package"]], "spynnaker.pyNN.utilities.ranged package": [[52, "spynnaker-pynn-utilities-ranged-package"]]}, "indexentries": {"spynnakerpanel (class in spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.SpynnakerPanel"]], "check_gsyn() (in module spynnaker.gsyn_tools)": [[2, "spynnaker.gsyn_tools.check_gsyn"]], "check_path_gysn() (in module spynnaker.gsyn_tools)": [[2, "spynnaker.gsyn_tools.check_path_gysn"]], "check_sister_gysn() (in module spynnaker.gsyn_tools)": [[2, "spynnaker.gsyn_tools.check_sister_gysn"]], "heat_plot() (in module spynnaker.plot_utils)": [[2, "spynnaker.plot_utils.heat_plot"]], "heat_plot_neo() (in module spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.heat_plot_neo"]], "heat_plot_numpy() (in module spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.heat_plot_numpy"]], "line_plot() (in module spynnaker.plot_utils)": [[2, "spynnaker.plot_utils.line_plot"]], "module": [[2, "module-spynnaker"], [2, "module-spynnaker.gsyn_tools"], [2, "module-spynnaker.plot_utils"], [2, "module-spynnaker.spike_checker"], [2, "module-spynnaker.spynnaker_plotting"], [3, "module-spynnaker.pyNN.abstract_spinnaker_common"], [3, "module-spynnaker.pyNN.config_setup"], [3, "module-spynnaker.pyNN.exceptions"], [3, "module-spynnaker.pyNN.setup_pynn"], [3, "module-spynnaker.pyNN.spinnaker"], [3, "module-spynnaker.pyNN.spynnaker_external_device_plugin_manager"], [4, "module-spynnaker.pyNN.connections"], [5, "module-spynnaker.pyNN.data"], [5, "module-spynnaker.pyNN.data.spynnaker_data_writer"], [7, "module-spynnaker.pyNN.external_devices_models"], [7, "module-spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex"], [7, "module-spynnaker.pyNN.external_devices_models.spif_devices"], [8, "module-spynnaker.pyNN.external_devices_models.push_bot"], [9, "module-spynnaker.pyNN.external_devices_models.push_bot.control"], [10, "module-spynnaker.pyNN.external_devices_models.push_bot.ethernet"], [11, "module-spynnaker.pyNN.external_devices_models.push_bot.parameters"], [12, "module-spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link"], [13, "module-spynnaker.pyNN.extra_algorithms"], [14, "module-spynnaker.pyNN.extra_algorithms.splitter_components"], [16, "module-spynnaker.pyNN.model_binaries"], [17, "module-spynnaker.pyNN.models"], [17, "module-spynnaker.pyNN.models.abstract_pynn_model"], [17, "module-spynnaker.pyNN.models.defaults"], [17, "module-spynnaker.pyNN.models.projection"], [17, "module-spynnaker.pyNN.models.recorder"], [18, "module-spynnaker.pyNN.models.abstract_models"], [19, "module-spynnaker.pyNN.models.common"], [19, "module-spynnaker.pyNN.models.common.param_generator_data"], [19, "module-spynnaker.pyNN.models.common.recording_utils"], [20, "module-spynnaker.pyNN.models.current_sources"], [21, "module-spynnaker.pyNN.models.neural_projections"], [22, "module-spynnaker.pyNN.models.neural_projections.connectors"], [23, "module-spynnaker.pyNN.models.neural_properties"], [24, "module-spynnaker.pyNN.models.neuron"], [24, "module-spynnaker.pyNN.models.neuron.generator_data"], [24, "module-spynnaker.pyNN.models.neuron.master_pop_table"], [24, "module-spynnaker.pyNN.models.neuron.neuron_data"], [24, "module-spynnaker.pyNN.models.neuron.population_machine_common"], [24, "module-spynnaker.pyNN.models.neuron.population_machine_synapses"], [24, "module-spynnaker.pyNN.models.neuron.synapse_io"], [24, "module-spynnaker.pyNN.models.neuron.synaptic_matrices"], [24, "module-spynnaker.pyNN.models.neuron.synaptic_matrix_app"], [25, "module-spynnaker.pyNN.models.neuron.additional_inputs"], [26, "module-spynnaker.pyNN.models.neuron.builds"], [27, "module-spynnaker.pyNN.models.neuron.implementations"], [28, "module-spynnaker.pyNN.models.neuron.input_types"], [29, "module-spynnaker.pyNN.models.neuron.local_only"], [30, "module-spynnaker.pyNN.models.neuron.neuron_models"], [31, "module-spynnaker.pyNN.models.neuron.plasticity"], [32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp"], [32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.common"], [33, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure"], [34, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence"], [35, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence"], [36, "module-spynnaker.pyNN.models.neuron.structural_plasticity"], [37, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis"], [38, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination"], [39, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation"], [40, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection"], [41, "module-spynnaker.pyNN.models.neuron.synapse_dynamics"], [42, "module-spynnaker.pyNN.models.neuron.synapse_types"], [43, "module-spynnaker.pyNN.models.neuron.threshold_types"], [44, "module-spynnaker.pyNN.models.populations"], [45, "module-spynnaker.pyNN.models.spike_source"], [45, "module-spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex"], [46, "module-spynnaker.pyNN.models.utility_models"], [47, "module-spynnaker.pyNN.models.utility_models.delays"], [48, "module-spynnaker.pyNN.models.utility_models.spike_injector"], [48, "module-spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex"], [49, "module-spynnaker.pyNN.protocols"], [50, "module-spynnaker.pyNN.utilities"], [50, "module-spynnaker.pyNN.utilities.bit_field_utilities"], [50, "module-spynnaker.pyNN.utilities.buffer_data_type"], [50, "module-spynnaker.pyNN.utilities.constants"], [50, "module-spynnaker.pyNN.utilities.data_population"], [50, "module-spynnaker.pyNN.utilities.extracted_data"], [50, "module-spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider"], [50, "module-spynnaker.pyNN.utilities.neo_buffer_database"], [50, "module-spynnaker.pyNN.utilities.neo_compare"], [50, "module-spynnaker.pyNN.utilities.neo_convertor"], [50, "module-spynnaker.pyNN.utilities.neo_csv"], [50, "module-spynnaker.pyNN.utilities.running_stats"], [50, "module-spynnaker.pyNN.utilities.struct"], [50, "module-spynnaker.pyNN.utilities.utility_calls"], [51, "module-spynnaker.pyNN.utilities.random_stats"], [52, "module-spynnaker.pyNN.utilities.ranged"]], "plot() (spynnaker.spynnaker_plotting.spynnakerpanel method)": [[2, "spynnaker.spynnaker_plotting.SpynnakerPanel.plot"]], "plot_segment() (in module spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.plot_segment"]], "plot_spikes() (in module spynnaker.plot_utils)": [[2, "spynnaker.plot_utils.plot_spikes"]], "plot_spikes_numpy() (in module spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.plot_spikes_numpy"]], "plot_spiketrains() (in module spynnaker.spynnaker_plotting)": [[2, "spynnaker.spynnaker_plotting.plot_spiketrains"]], "spynnaker": [[2, "module-spynnaker"]], "spynnaker.gsyn_tools": [[2, "module-spynnaker.gsyn_tools"]], "spynnaker.plot_utils": [[2, "module-spynnaker.plot_utils"]], "spynnaker.spike_checker": [[2, "module-spynnaker.spike_checker"]], "spynnaker.spynnaker_plotting": [[2, "module-spynnaker.spynnaker_plotting"]], "synfire_multiple_lines_spike_checker() (in module spynnaker.spike_checker)": [[2, "spynnaker.spike_checker.synfire_multiple_lines_spike_checker"]], "synfire_spike_checker() (in module spynnaker.spike_checker)": [[2, "spynnaker.spike_checker.synfire_spike_checker"]], "abstractspinnakercommon (class in spynnaker.pynn.abstract_spinnaker_common)": [[3, "spynnaker.pyNN.abstract_spinnaker_common.AbstractSpiNNakerCommon"]], "delayextensionexception": [[3, "spynnaker.pyNN.exceptions.DelayExtensionException"]], "filterableexception": [[3, "spynnaker.pyNN.exceptions.FilterableException"]], "invalidparametertype": [[3, "spynnaker.pyNN.exceptions.InvalidParameterType"]], "memreadexception": [[3, "spynnaker.pyNN.exceptions.MemReadException"]], "spynnakerexception": [[3, "spynnaker.pyNN.exceptions.SpynnakerException"]], "spynnakerexternaldevicepluginmanager (class in spynnaker.pynn.spynnaker_external_device_plugin_manager)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager"]], "spynnakersplitterconfigurationexception": [[3, "spynnaker.pyNN.exceptions.SpynnakerSplitterConfigurationException"]], "synapserowtoobigexception": [[3, "spynnaker.pyNN.exceptions.SynapseRowTooBigException"]], "synapticblockgenerationexception": [[3, "spynnaker.pyNN.exceptions.SynapticBlockGenerationException"]], "synapticblockreadexception": [[3, "spynnaker.pyNN.exceptions.SynapticBlockReadException"]], "synapticconfigurationexception": [[3, "spynnaker.pyNN.exceptions.SynapticConfigurationException"]], "synapticmaxincomingatomssupportexception": [[3, "spynnaker.pyNN.exceptions.SynapticMaxIncomingAtomsSupportException"]], "activate_live_output_for() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.activate_live_output_for"]], "activate_live_output_to() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.activate_live_output_to"]], "add_application_vertex() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.add_application_vertex"]], "add_database_socket_address() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.add_database_socket_address"]], "add_edge() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.add_edge"]], "add_poisson_live_rate_control() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.add_poisson_live_rate_control"]], "add_spynnaker_cfg() (in module spynnaker.pynn.config_setup)": [[3, "spynnaker.pyNN.config_setup.add_spynnaker_cfg"]], "install_spynnaker_into() (in module spynnaker.pynn.setup_pynn)": [[3, "spynnaker.pyNN.setup_pynn.install_sPyNNaker_into"]], "max_size (spynnaker.pynn.exceptions.synapserowtoobigexception property)": [[3, "spynnaker.pyNN.exceptions.SynapseRowTooBigException.max_size"]], "register_binary_search_path() (spynnaker.pynn.abstract_spinnaker_common.abstractspinnakercommon static method)": [[3, "spynnaker.pyNN.abstract_spinnaker_common.AbstractSpiNNakerCommon.register_binary_search_path"]], "setup_configs() (in module spynnaker.pynn.config_setup)": [[3, "spynnaker.pyNN.config_setup.setup_configs"]], "spynnaker.pynn.abstract_spinnaker_common": [[3, "module-spynnaker.pyNN.abstract_spinnaker_common"]], "spynnaker.pynn.config_setup": [[3, "module-spynnaker.pyNN.config_setup"]], "spynnaker.pynn.exceptions": [[3, "module-spynnaker.pyNN.exceptions"]], "spynnaker.pynn.setup_pynn": [[3, "module-spynnaker.pyNN.setup_pynn"]], "spynnaker.pynn.spinnaker": [[3, "module-spynnaker.pyNN.spinnaker"]], "spynnaker.pynn.spynnaker_external_device_plugin_manager": [[3, "module-spynnaker.pyNN.spynnaker_external_device_plugin_manager"]], "unittest_setup() (in module spynnaker.pynn.config_setup)": [[3, "spynnaker.pyNN.config_setup.unittest_setup"]], "update_live_packet_gather_tracker() (spynnaker.pynn.spynnaker_external_device_plugin_manager.spynnakerexternaldevicepluginmanager static method)": [[3, "spynnaker.pyNN.spynnaker_external_device_plugin_manager.SpynnakerExternalDevicePluginManager.update_live_packet_gather_tracker"]], "version_satisfies() (in module spynnaker.pynn.setup_pynn)": [[3, "spynnaker.pyNN.setup_pynn.version_satisfies"]], "ethernetcommandconnection (class in spynnaker.pynn.connections)": [[4, "spynnaker.pyNN.connections.EthernetCommandConnection"]], "ethernetcontrolconnection (class in spynnaker.pynn.connections)": [[4, "spynnaker.pyNN.connections.EthernetControlConnection"]], "spiflivespikesconnection (class in spynnaker.pynn.connections)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection"]], "spynnakerlivespikesconnection (class in spynnaker.pynn.connections)": [[4, "spynnaker.pyNN.connections.SpynnakerLiveSpikesConnection"]], "spynnakerpoissoncontrolconnection (class in spynnaker.pynn.connections)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection"]], "add_command_container() (spynnaker.pynn.connections.ethernetcommandconnection method)": [[4, "spynnaker.pyNN.connections.EthernetCommandConnection.add_command_container"]], "add_init_callback() (spynnaker.pynn.connections.spiflivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection.add_init_callback"]], "add_init_callback() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_init_callback"]], "add_pause_stop_callback() (spynnaker.pynn.connections.spiflivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection.add_pause_stop_callback"]], "add_pause_stop_callback() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_pause_stop_callback"]], "add_poisson_label() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_poisson_label"]], "add_receive_callback() (spynnaker.pynn.connections.spiflivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection.add_receive_callback"]], "add_receive_callback() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_receive_callback"]], "add_receive_label() (spynnaker.pynn.connections.spiflivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection.add_receive_label"]], "add_start_callback() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_start_callback"]], "add_start_resume_callback() (spynnaker.pynn.connections.spiflivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SPIFLiveSpikesConnection.add_start_resume_callback"]], "add_start_resume_callback() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.add_start_resume_callback"]], "add_translator() (spynnaker.pynn.connections.ethernetcontrolconnection method)": [[4, "spynnaker.pyNN.connections.EthernetControlConnection.add_translator"]], "send_spike() (spynnaker.pynn.connections.spynnakerlivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerLiveSpikesConnection.send_spike"]], "send_spikes() (spynnaker.pynn.connections.spynnakerlivespikesconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerLiveSpikesConnection.send_spikes"]], "set_rate() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.set_rate"]], "set_rates() (spynnaker.pynn.connections.spynnakerpoissoncontrolconnection method)": [[4, "spynnaker.pyNN.connections.SpynnakerPoissonControlConnection.set_rates"]], "spynnaker.pynn.connections": [[4, "module-spynnaker.pyNN.connections"]], "spynnakerdataview (class in spynnaker.pynn.data)": [[5, "spynnaker.pyNN.data.SpynnakerDataView"]], "spynnakerdatawriter (class in spynnaker.pynn.data.spynnaker_data_writer)": [[5, "spynnaker.pyNN.data.spynnaker_data_writer.SpynnakerDataWriter"]], "add_population() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.add_population"]], "add_projection() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.add_projection"]], "get_min_delay() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.get_min_delay"]], "get_n_populations() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.get_n_populations"]], "get_n_projections() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.get_n_projections"]], "get_segment_counter() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.get_segment_counter"]], "get_sim_name() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.get_sim_name"]], "has_min_delay() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.has_min_delay"]], "iterate_populations() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.iterate_populations"]], "iterate_projections() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.iterate_projections"]], "set_number_of_neurons_per_dimension_per_core() (spynnaker.pynn.data.spynnakerdataview class method)": [[5, "spynnaker.pyNN.data.SpynnakerDataView.set_number_of_neurons_per_dimension_per_core"]], "set_up_timings_and_delay() (spynnaker.pynn.data.spynnaker_data_writer.spynnakerdatawriter method)": [[5, "spynnaker.pyNN.data.spynnaker_data_writer.SpynnakerDataWriter.set_up_timings_and_delay"]], "shut_down() (spynnaker.pynn.data.spynnaker_data_writer.spynnakerdatawriter method)": [[5, "spynnaker.pyNN.data.spynnaker_data_writer.SpynnakerDataWriter.shut_down"]], "spynnaker.pynn.data": [[5, "module-spynnaker.pyNN.data"]], "spynnaker.pynn.data.spynnaker_data_writer": [[5, "module-spynnaker.pyNN.data.spynnaker_data_writer"]], "abstractethernetcontroller (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetController"]], "abstractethernetsensor (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor"]], "abstractethernettranslator (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetTranslator"]], "abstractmulticastcontrollabledevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice"]], "arbitraryfpgadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ArbitraryFPGADevice"]], "config_pkt_cnt (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.CONFIG_PKT_CNT"]], "down_polarity (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.DOWN_POLARITY"]], "down_polarity (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.DOWN_POLARITY"]], "dropped_pkt_cnt (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.DROPPED_PKT_CNT"]], "externalcochleadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ExternalCochleaDevice"]], "externaldevicelifcontrol (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ExternalDeviceLifControl"]], "externaldevicelifcontrolvertex (class in spynnaker.pynn.external_devices_models.external_device_lif_control_vertex)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex"]], "externalfpgaretinadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice"]], "fl_mask_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.FL_MASK_BASE"]], "fl_value_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.FL_VALUE_BASE"]], "icubretinadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice"]], "input_buffer_full_name (spynnaker.pynn.external_devices_models.machinemunichmotordevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.INPUT_BUFFER_FULL_NAME"]], "in_periph_pkt_cnt (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.IN_PERIPH_PKT_CNT"]], "ir_key_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.IR_KEY_BASE"]], "ir_mask_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.IR_MASK_BASE"]], "ir_route_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.IR_ROUTE_BASE"]], "lc_key (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.LC_KEY"]], "lc_mask (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.LC_MASK"]], "left_retina (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.LEFT_RETINA"]], "merged_polarity (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.MERGED_POLARITY"]], "merged_polarity (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.MERGED_POLARITY"]], "mode_128 (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.MODE_128"]], "mode_16 (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.MODE_16"]], "mode_32 (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.MODE_32"]], "mode_64 (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.MODE_64"]], "motor_partition_id (spynnaker.pynn.external_devices_models.machinemunichmotordevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.MOTOR_PARTITION_ID"]], "mp_fld_limit_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.MP_FLD_LIMIT_BASE"]], "mp_fld_mask_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.MP_FLD_MASK_BASE"]], "mp_fld_shift_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.MP_FLD_SHIFT_BASE"]], "mp_key_base (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.MP_KEY_BASE"]], "machinemunichmotordevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice"]], "munichmotordevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.MunichMotorDevice"]], "munichretinadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice"]], "n_fields (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.N_FIELDS"]], "n_filters (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.N_FILTERS"]], "n_inputs (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.N_INPUTS"]], "n_pipes (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.N_PIPES"]], "out_periph_pkt_cnt (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.OUT_PERIPH_PKT_CNT"]], "p_key (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.P_KEY"]], "p_mask (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.P_MASK"]], "rc_key (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.RC_KEY"]], "rc_mask (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.RC_MASK"]], "reply_key (spynnaker.pynn.external_devices_models.spif_devices.spifregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.REPLY_KEY"]], "right_retina (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.RIGHT_RETINA"]], "spifoutputdevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.SPIFOutputDevice"]], "spifregister (class in spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister"]], "spifretinadevice (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice"]], "spif_fpga_id (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIF_FPGA_ID"]], "spif_input_fpga_links (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIF_INPUT_FPGA_LINKS"]], "spif_output_fpga_link (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIF_OUTPUT_FPGA_LINK"]], "start (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.START"]], "stop (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister attribute)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.STOP"]], "spinnfpgaregister (class in spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister"]], "thresholdtypemulticastdevicecontrol (class in spynnaker.pynn.external_devices_models)": [[7, "spynnaker.pyNN.external_devices_models.ThresholdTypeMulticastDeviceControl"]], "up_polarity (spynnaker.pynn.external_devices_models.externalfpgaretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.UP_POLARITY"]], "up_polarity (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.UP_POLARITY"]], "x_mask (spynnaker.pynn.external_devices_models.spifretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.X_MASK"]], "x_per_row (spynnaker.pynn.external_devices_models.spifretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.X_PER_ROW"]], "y_mask (spynnaker.pynn.external_devices_models.spifretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.Y_MASK"]], "add_incoming_edge() (spynnaker.pynn.external_devices_models.spifoutputdevice method)": [[7, "spynnaker.pyNN.external_devices_models.SPIFOutputDevice.add_incoming_edge"]], "add_parameters() (spynnaker.pynn.external_devices_models.thresholdtypemulticastdevicecontrol method)": [[7, "spynnaker.pyNN.external_devices_models.ThresholdTypeMulticastDeviceControl.add_parameters"]], "add_state_variables() (spynnaker.pynn.external_devices_models.thresholdtypemulticastdevicecontrol method)": [[7, "spynnaker.pyNN.external_devices_models.ThresholdTypeMulticastDeviceControl.add_state_variables"]], "cmd() (spynnaker.pynn.external_devices_models.spif_devices.spifregister method)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SPIFRegister.cmd"]], "cmd() (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister method)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.cmd"]], "create_vertex() (spynnaker.pynn.external_devices_models.externaldevicelifcontrol method)": [[7, "spynnaker.pyNN.external_devices_models.ExternalDeviceLifControl.create_vertex"]], "default_initial_values (spynnaker.pynn.external_devices_models.munichmotordevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichMotorDevice.default_initial_values"]], "default_parameters (spynnaker.pynn.external_devices_models.munichmotordevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichMotorDevice.default_parameters"]], "default_parameters (spynnaker.pynn.external_devices_models.munichretinadevice attribute)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.default_parameters"]], "delayed_command() (spynnaker.pynn.external_devices_models.spif_devices.spinnfpgaregister method)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.SpiNNFPGARegister.delayed_command"]], "dependent_vertices() (spynnaker.pynn.external_devices_models.munichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MunichMotorDevice.dependent_vertices"]], "dependent_vertices() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.dependent_vertices"]], "device_control_first_send_timestep (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_first_send_timestep"]], "device_control_key (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_key"]], "device_control_max_value (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_max_value"]], "device_control_min_value (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_min_value"]], "device_control_partition_id (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_partition_id"]], "device_control_scaling_factor (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_scaling_factor"]], "device_control_send_type (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_send_type"]], "device_control_timesteps_between_sending (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_timesteps_between_sending"]], "device_control_uses_payload (spynnaker.pynn.external_devices_models.abstractmulticastcontrollabledevice property)": [[7, "spynnaker.pyNN.external_devices_models.AbstractMulticastControllableDevice.device_control_uses_payload"]], "edge_partition_identifiers_for_dependent_vertex() (spynnaker.pynn.external_devices_models.munichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MunichMotorDevice.edge_partition_identifiers_for_dependent_vertex"]], "edge_partition_identifiers_for_dependent_vertex() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.edge_partition_identifiers_for_dependent_vertex"]], "generate_data_specification() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.generate_data_specification"]], "get_atom_key_map() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.get_atom_key_map"]], "get_binary_file_name() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.get_binary_file_name"]], "get_binary_start_type() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.get_binary_start_type"]], "get_database_connection() (spynnaker.pynn.external_devices_models.abstractethernetsensor method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor.get_database_connection"]], "get_external_devices() (spynnaker.pynn.external_devices_models.abstractethernetcontroller method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetController.get_external_devices"]], "get_external_devices() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.get_external_devices"]], "get_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.externalfpgaretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.get_fixed_key_and_mask"]], "get_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.icubretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice.get_fixed_key_and_mask"]], "get_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.munichretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.get_fixed_key_and_mask"]], "get_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.spifretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.get_fixed_key_and_mask"]], "get_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.get_fixed_key_and_mask"]], "get_incoming_slice() (spynnaker.pynn.external_devices_models.icubretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice.get_incoming_slice"]], "get_incoming_slice_for_link() (spynnaker.pynn.external_devices_models.spifretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.get_incoming_slice_for_link"]], "get_injector_label() (spynnaker.pynn.external_devices_models.abstractethernetsensor method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor.get_injector_label"]], "get_injector_parameters() (spynnaker.pynn.external_devices_models.abstractethernetsensor method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor.get_injector_parameters"]], "get_machine_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.icubretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice.get_machine_fixed_key_and_mask"]], "get_machine_fixed_key_and_mask() (spynnaker.pynn.external_devices_models.spifretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.get_machine_fixed_key_and_mask"]], "get_message_translator() (spynnaker.pynn.external_devices_models.abstractethernetcontroller method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetController.get_message_translator"]], "get_message_translator() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.get_message_translator"]], "get_n_keys_for_partition() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.get_n_keys_for_partition"]], "get_n_neurons() (spynnaker.pynn.external_devices_models.abstractethernetsensor method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor.get_n_neurons"]], "get_n_neurons() (spynnaker.pynn.external_devices_models.externalfpgaretinadevice static method)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.get_n_neurons"]], "get_outgoing_partition_ids() (spynnaker.pynn.external_devices_models.abstractethernetcontroller method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetController.get_outgoing_partition_ids"]], "get_outgoing_partition_ids() (spynnaker.pynn.external_devices_models.external_device_lif_control_vertex.externaldevicelifcontrolvertex method)": [[7, "spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex.ExternalDeviceLifControlVertex.get_outgoing_partition_ids"]], "get_shape_key_fields() (spynnaker.pynn.external_devices_models.icubretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.ICUBRetinaDevice.get_shape_key_fields"]], "get_shape_key_fields() (spynnaker.pynn.external_devices_models.spifretinadevice method)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.get_shape_key_fields"]], "get_translator() (spynnaker.pynn.external_devices_models.abstractethernetsensor method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetSensor.get_translator"]], "parse_extra_provenance_items() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.parse_extra_provenance_items"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.externalfpgaretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.munichretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.spifoutputdevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFOutputDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.spifretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.pause_stop_commands"]], "reserve_memory_regions() (spynnaker.pynn.external_devices_models.machinemunichmotordevice method)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.reserve_memory_regions"]], "sdram_required (spynnaker.pynn.external_devices_models.machinemunichmotordevice property)": [[7, "spynnaker.pyNN.external_devices_models.MachineMunichMotorDevice.sdram_required"]], "set_field_limit() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_field_limit"]], "set_field_mask() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_field_mask"]], "set_field_shift() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_field_shift"]], "set_filter_mask() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_filter_mask"]], "set_filter_value() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_filter_value"]], "set_input_key() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_input_key"]], "set_input_mask() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_input_mask"]], "set_input_route() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_input_route"]], "set_mapper_key() (in module spynnaker.pynn.external_devices_models.spif_devices)": [[7, "spynnaker.pyNN.external_devices_models.spif_devices.set_mapper_key"]], "spynnaker.pynn.external_devices_models": [[7, "module-spynnaker.pyNN.external_devices_models"]], "spynnaker.pynn.external_devices_models.external_device_lif_control_vertex": [[7, "module-spynnaker.pyNN.external_devices_models.external_device_lif_control_vertex"]], "spynnaker.pynn.external_devices_models.spif_devices": [[7, "module-spynnaker.pyNN.external_devices_models.spif_devices"]], "start_resume_commands (spynnaker.pynn.external_devices_models.externalfpgaretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.munichretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.spifoutputdevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFOutputDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.spifretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.start_resume_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.externalfpgaretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.ExternalFPGARetinaDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.munichretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.MunichRetinaDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.spifoutputdevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFOutputDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.spifretinadevice property)": [[7, "spynnaker.pyNN.external_devices_models.SPIFRetinaDevice.timed_commands"]], "translate_control_packet() (spynnaker.pynn.external_devices_models.abstractethernettranslator method)": [[7, "spynnaker.pyNN.external_devices_models.AbstractEthernetTranslator.translate_control_packet"]], "abstractpushbotoutputdevice (class in spynnaker.pynn.external_devices_models.push_bot)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice"]], "abstractpushbotretinadevice (class in spynnaker.pynn.external_devices_models.push_bot)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotRetinaDevice"]], "max_value (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotoutputdevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice.max_value"]], "min_value (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotoutputdevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice.min_value"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotretinadevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotRetinaDevice.pause_stop_commands"]], "protocol_property (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotoutputdevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice.protocol_property"]], "send_type (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotoutputdevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice.send_type"]], "spynnaker.pynn.external_devices_models.push_bot": [[8, "module-spynnaker.pyNN.external_devices_models.push_bot"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotretinadevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotRetinaDevice.start_resume_commands"]], "time_between_send (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotoutputdevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotOutputDevice.time_between_send"]], "timed_commands (spynnaker.pynn.external_devices_models.push_bot.abstractpushbotretinadevice property)": [[8, "spynnaker.pyNN.external_devices_models.push_bot.AbstractPushBotRetinaDevice.timed_commands"]], "pushbotlifethernet (class in spynnaker.pynn.external_devices_models.push_bot.control)": [[9, "spynnaker.pyNN.external_devices_models.push_bot.control.PushBotLifEthernet"]], "pushbotlifspinnakerlink (class in spynnaker.pynn.external_devices_models.push_bot.control)": [[9, "spynnaker.pyNN.external_devices_models.push_bot.control.PushBotLifSpinnakerLink"]], "spynnaker.pynn.external_devices_models.push_bot.control": [[9, "module-spynnaker.pyNN.external_devices_models.push_bot.control"]], "pushbotethernetdevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice"]], "pushbotethernetleddevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice"]], "pushbotethernetlaserdevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice"]], "pushbotethernetmotordevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice"]], "pushbotethernetretinadevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice"]], "pushbotethernetspeakerdevice (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice"]], "pushbotretinaconnection (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotRetinaConnection"]], "pushbottranslator (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotTranslator"]], "pushbotwificonnection (class in spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection"]], "recv_size (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection attribute)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.RECV_SIZE"]], "close() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.close"]], "device_control_first_send_timestep (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_first_send_timestep"]], "device_control_key (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_key"]], "device_control_max_value (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_max_value"]], "device_control_min_value (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_min_value"]], "device_control_partition_id (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_partition_id"]], "device_control_send_type (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_send_type"]], "device_control_timesteps_between_sending (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_timesteps_between_sending"]], "device_control_uses_payload (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.device_control_uses_payload"]], "get_database_connection() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetretinadevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice.get_database_connection"]], "get_injector_label() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetretinadevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice.get_injector_label"]], "get_injector_parameters() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetretinadevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice.get_injector_parameters"]], "get_n_neurons() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetretinadevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice.get_n_neurons"]], "get_pushbot_wifi_connection() (in module spynnaker.pynn.external_devices_models.push_bot.ethernet)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.get_pushbot_wifi_connection"]], "get_receive_method() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.get_receive_method"]], "get_translator() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetretinadevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetRetinaDevice.get_translator"]], "is_connected() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.is_connected"]], "is_ready_to_receive() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.is_ready_to_receive"]], "local_ip_address (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.local_ip_address"]], "local_port (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.local_port"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetleddevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetlaserdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetmotordevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice.pause_stop_commands"]], "pause_stop_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetspeakerdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice.pause_stop_commands"]], "protocol (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.protocol"]], "receive() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.receive"]], "remote_ip_address (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.remote_ip_address"]], "remote_port (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.remote_port"]], "send() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotwificonnection method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotWIFIConnection.send"]], "set_command_protocol() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetdevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetDevice.set_command_protocol"]], "set_command_protocol() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetleddevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice.set_command_protocol"]], "set_command_protocol() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetlaserdevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice.set_command_protocol"]], "set_command_protocol() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetmotordevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice.set_command_protocol"]], "set_command_protocol() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetspeakerdevice method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice.set_command_protocol"]], "spynnaker.pynn.external_devices_models.push_bot.ethernet": [[10, "module-spynnaker.pyNN.external_devices_models.push_bot.ethernet"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetleddevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetlaserdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetmotordevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice.start_resume_commands"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetspeakerdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice.start_resume_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetleddevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLEDDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetlaserdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetLaserDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetmotordevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetMotorDevice.timed_commands"]], "timed_commands (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbotethernetspeakerdevice property)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotEthernetSpeakerDevice.timed_commands"]], "translate_control_packet() (spynnaker.pynn.external_devices_models.push_bot.ethernet.pushbottranslator method)": [[10, "spynnaker.pyNN.external_devices_models.push_bot.ethernet.PushBotTranslator.translate_control_packet"]], "downsample_16_x_16 (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaresolution attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution.DOWNSAMPLE_16_X_16"]], "downsample_32_x_32 (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaresolution attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution.DOWNSAMPLE_32_X_32"]], "downsample_64_x_64 (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaresolution attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution.DOWNSAMPLE_64_X_64"]], "laser_active_time (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotlaser attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLaser.LASER_ACTIVE_TIME"]], "laser_frequency (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotlaser attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLaser.LASER_FREQUENCY"]], "laser_total_period (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotlaser attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLaser.LASER_TOTAL_PERIOD"]], "led_back_active_time (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotled attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED.LED_BACK_ACTIVE_TIME"]], "led_frequency (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotled attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED.LED_FREQUENCY"]], "led_front_active_time (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotled attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED.LED_FRONT_ACTIVE_TIME"]], "led_total_period (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotled attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED.LED_TOTAL_PERIOD"]], "motor_0_leaky (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotmotor attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor.MOTOR_0_LEAKY"]], "motor_0_permanent (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotmotor attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor.MOTOR_0_PERMANENT"]], "motor_1_leaky (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotmotor attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor.MOTOR_1_LEAKY"]], "motor_1_permanent (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotmotor attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor.MOTOR_1_PERMANENT"]], "native_128_x_128 (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaresolution attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution.NATIVE_128_X_128"]], "pushbotled (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLED"]], "pushbotlaser (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotLaser"]], "pushbotmotor (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotMotor"]], "pushbotretinaresolution (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaResolution"]], "pushbotretinaviewer (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaViewer"]], "pushbotspeaker (class in spynnaker.pynn.external_devices_models.push_bot.parameters)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker"]], "speaker_active_time (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotspeaker attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker.SPEAKER_ACTIVE_TIME"]], "speaker_melody (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotspeaker attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker.SPEAKER_MELODY"]], "speaker_tone (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotspeaker attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker.SPEAKER_TONE"]], "speaker_total_period (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotspeaker attribute)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotSpeaker.SPEAKER_TOTAL_PERIOD"]], "port (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaviewer property)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaViewer.port"]], "run() (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaviewer method)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaViewer.run"]], "run_until_closed() (spynnaker.pynn.external_devices_models.push_bot.parameters.pushbotretinaviewer method)": [[11, "spynnaker.pyNN.external_devices_models.push_bot.parameters.PushBotRetinaViewer.run_until_closed"]], "spynnaker.pynn.external_devices_models.push_bot.parameters": [[11, "module-spynnaker.pyNN.external_devices_models.push_bot.parameters"]], "pushbotspinnakerlinkleddevice (class in spynnaker.pynn.external_devices_models.push_bot.spinnaker_link)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLEDDevice"]], "pushbotspinnakerlinklaserdevice (class in spynnaker.pynn.external_devices_models.push_bot.spinnaker_link)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLaserDevice"]], "pushbotspinnakerlinkmotordevice (class in spynnaker.pynn.external_devices_models.push_bot.spinnaker_link)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkMotorDevice"]], "pushbotspinnakerlinkretinadevice (class in spynnaker.pynn.external_devices_models.push_bot.spinnaker_link)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkRetinaDevice"]], "pushbotspinnakerlinkspeakerdevice (class in spynnaker.pynn.external_devices_models.push_bot.spinnaker_link)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkSpeakerDevice"]], "default_parameters (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkleddevice attribute)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLEDDevice.default_parameters"]], "default_parameters (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinklaserdevice attribute)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkLaserDevice.default_parameters"]], "default_parameters (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkmotordevice attribute)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkMotorDevice.default_parameters"]], "default_parameters (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkretinadevice attribute)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkRetinaDevice.default_parameters"]], "default_parameters (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkspeakerdevice attribute)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkSpeakerDevice.default_parameters"]], "new_key_command_payload() (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkretinadevice method)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkRetinaDevice.new_key_command_payload"]], "spynnaker.pynn.external_devices_models.push_bot.spinnaker_link": [[12, "module-spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link"]], "start_resume_commands (spynnaker.pynn.external_devices_models.push_bot.spinnaker_link.pushbotspinnakerlinkretinadevice property)": [[12, "spynnaker.pyNN.external_devices_models.push_bot.spinnaker_link.PushBotSpiNNakerLinkRetinaDevice.start_resume_commands"]], "spynnakerconnectionholdergenerator (class in spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.SpYNNakerConnectionHolderGenerator"]], "spynnakersynapticmatrixreport (class in spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.SpYNNakerSynapticMatrixReport"]], "__call__() (spynnaker.pynn.extra_algorithms.spynnakerconnectionholdergenerator method)": [[13, "spynnaker.pyNN.extra_algorithms.SpYNNakerConnectionHolderGenerator.__call__"]], "__call__() (spynnaker.pynn.extra_algorithms.spynnakersynapticmatrixreport method)": [[13, "spynnaker.pyNN.extra_algorithms.SpYNNakerSynapticMatrixReport.__call__"]], "delay_support_adder() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.delay_support_adder"]], "finish_connection_holders() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.finish_connection_holders"]], "neuron_expander() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.neuron_expander"]], "redundant_packet_count_report() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.redundant_packet_count_report"]], "spynnaker.pynn.extra_algorithms": [[13, "module-spynnaker.pyNN.extra_algorithms"]], "spynnaker_machine_bitfield_pair_router_compressor() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.spynnaker_machine_bitField_pair_router_compressor"]], "spynnaker_machine_bitfield_ordered_covering_compressor() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.spynnaker_machine_bitfield_ordered_covering_compressor"]], "spynnaker_neuron_graph_network_specification_report() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.spynnaker_neuron_graph_network_specification_report"]], "synapse_expander() (in module spynnaker.pynn.extra_algorithms)": [[13, "spynnaker.pyNN.extra_algorithms.synapse_expander"]], "abstractspynnakersplitterdelay (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSpynnakerSplitterDelay"]], "abstractsupportsonetoonesdraminput (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSupportsOneToOneSDRAMInput"]], "delay_recording_error (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.DELAY_RECORDING_ERROR"]], "invalid_pop_error_message (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.INVALID_POP_ERROR_MESSAGE"]], "invalid_pop_error_message (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.INVALID_POP_ERROR_MESSAGE"]], "invalid_pop_error_message (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.INVALID_POP_ERROR_MESSAGE"]], "invalid_pop_error_message (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.INVALID_POP_ERROR_MESSAGE"]], "max_supported_delay_tics (spynnaker.pynn.extra_algorithms.splitter_components.abstractspynnakersplitterdelay attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSpynnakerSplitterDelay.MAX_SUPPORTED_DELAY_TICS"]], "need_exact_error_message (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice attribute)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.NEED_EXACT_ERROR_MESSAGE"]], "splitterabstractpopulationvertexfixed (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed"]], "splitterabstractpopulationvertexneuronssynapses (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses"]], "splitterdelayvertexslice (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice"]], "splitterpoissondelegate (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate"]], "spynnakersplitterfixedlegacy (class in spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SpynnakerSplitterFixedLegacy"]], "accepts_edges_from_delay_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.abstractspynnakersplitterdelay method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSpynnakerSplitterDelay.accepts_edges_from_delay_vertex"]], "accepts_edges_from_delay_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.accepts_edges_from_delay_vertex"]], "create_machine_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.create_machine_vertex"]], "create_machine_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.create_machine_vertex"]], "create_machine_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.create_machine_vertices"]], "create_machine_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.create_machine_vertices"]], "create_machine_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.create_machine_vertices"]], "create_machine_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.create_machine_vertices"]], "get_in_coming_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_in_coming_slices"]], "get_in_coming_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_in_coming_slices"]], "get_in_coming_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_in_coming_slices"]], "get_in_coming_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.get_in_coming_slices"]], "get_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_in_coming_vertices"]], "get_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_in_coming_vertices"]], "get_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_in_coming_vertices"]], "get_internal_multicast_partitions() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_internal_multicast_partitions"]], "get_internal_sdram_partitions() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_internal_sdram_partitions"]], "get_machine_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_machine_vertex"]], "get_out_going_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_out_going_slices"]], "get_out_going_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_out_going_slices"]], "get_out_going_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_out_going_slices"]], "get_out_going_slices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.get_out_going_slices"]], "get_out_going_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_out_going_vertices"]], "get_out_going_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_out_going_vertices"]], "get_out_going_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_out_going_vertices"]], "get_out_going_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.get_out_going_vertices"]], "get_same_chip_groups() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_same_chip_groups"]], "get_same_chip_groups() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.get_same_chip_groups"]], "get_sdram_used_by_atoms() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_sdram_used_by_atoms"]], "get_sdram_used_by_atoms() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_sdram_used_by_atoms"]], "get_source_specific_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.get_source_specific_in_coming_vertices"]], "get_source_specific_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.get_source_specific_in_coming_vertices"]], "get_source_specific_in_coming_vertices() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.get_source_specific_in_coming_vertices"]], "handles_source_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.abstractsupportsonetoonesdraminput method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSupportsOneToOneSDRAMInput.handles_source_vertex"]], "handles_source_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.handles_source_vertex"]], "is_direct_poisson_source() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.is_direct_poisson_source"]], "machine_vertices_for_recording() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.machine_vertices_for_recording"]], "machine_vertices_for_recording() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.machine_vertices_for_recording"]], "machine_vertices_for_recording() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.machine_vertices_for_recording"]], "max_support_delay() (spynnaker.pynn.extra_algorithms.splitter_components.abstractspynnakersplitterdelay method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.AbstractSpynnakerSplitterDelay.max_support_delay"]], "max_support_delay() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.max_support_delay"]], "n_synapse_vertices (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses property)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.n_synapse_vertices"]], "reset_called() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.reset_called"]], "reset_called() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.reset_called"]], "reset_called() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.reset_called"]], "send_over_sdram (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate property)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.send_over_sdram"]], "set_governed_app_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexfixed method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexFixed.set_governed_app_vertex"]], "set_governed_app_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterabstractpopulationvertexneuronssynapses method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterAbstractPopulationVertexNeuronsSynapses.set_governed_app_vertex"]], "set_governed_app_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterdelayvertexslice method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterDelayVertexSlice.set_governed_app_vertex"]], "set_governed_app_vertex() (spynnaker.pynn.extra_algorithms.splitter_components.splitterpoissondelegate method)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.SplitterPoissonDelegate.set_governed_app_vertex"]], "spynnaker.pynn.extra_algorithms.splitter_components": [[14, "module-spynnaker.pyNN.extra_algorithms.splitter_components"]], "spynnaker_splitter_partitioner() (in module spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.spynnaker_splitter_partitioner"]], "spynnaker_splitter_selector() (in module spynnaker.pynn.extra_algorithms.splitter_components)": [[14, "spynnaker.pyNN.extra_algorithms.splitter_components.spynnaker_splitter_selector"]], "spynnaker.pynn.model_binaries": [[16, "module-spynnaker.pyNN.model_binaries"]], "abstractpynnmodel (class in spynnaker.pynn.models.abstract_pynn_model)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel"]], "projection (class in spynnaker.pynn.models.projection)": [[17, "spynnaker.pyNN.models.projection.Projection"]], "recorder (class in spynnaker.pynn.models.recorder)": [[17, "spynnaker.pyNN.models.recorder.Recorder"]], "absolute_max_atoms_per_core (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel attribute)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.absolute_max_atoms_per_core"]], "cache_data() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.cache_data"]], "create_vertex() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.create_vertex"]], "csv_neo_block() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.csv_neo_block"]], "default_initial_values (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel attribute)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.default_initial_values"]], "default_initial_values() (in module spynnaker.pynn.models.defaults)": [[17, "spynnaker.pyNN.models.defaults.default_initial_values"]], "default_parameters (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel attribute)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.default_parameters"]], "default_parameters() (in module spynnaker.pynn.models.defaults)": [[17, "spynnaker.pyNN.models.defaults.default_parameters"]], "default_population_parameters (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel property)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.default_population_parameters"]], "describe() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.describe"]], "extract_neo_block() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.extract_neo_block"]], "get() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.get"]], "getdelays() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.getDelays"]], "getsynapsedynamics() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.getSynapseDynamics"]], "getweights() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.getWeights"]], "get_dict_from_init() (in module spynnaker.pynn.models.defaults)": [[17, "spynnaker.pyNN.models.defaults.get_dict_from_init"]], "get_model_max_atoms_per_dimension_per_core() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel class method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.get_model_max_atoms_per_dimension_per_core"]], "get_parameter_names() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel class method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.get_parameter_names"]], "has_parameter() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel class method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.has_parameter"]], "label (spynnaker.pynn.models.projection.projection property)": [[17, "spynnaker.pyNN.models.projection.Projection.label"]], "name (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel property)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.name"]], "post (spynnaker.pynn.models.projection.projection property)": [[17, "spynnaker.pyNN.models.projection.Projection.post"]], "pre (spynnaker.pynn.models.projection.projection property)": [[17, "spynnaker.pyNN.models.projection.Projection.pre"]], "printdelays() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.printDelays"]], "printweights() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.printWeights"]], "record() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.record"]], "recording_label (spynnaker.pynn.models.recorder.recorder property)": [[17, "spynnaker.pyNN.models.recorder.Recorder.recording_label"]], "save() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.save"]], "saveconnections() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.saveConnections"]], "set() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.set"]], "set_model_max_atoms_per_dimension_per_core() (spynnaker.pynn.models.abstract_pynn_model.abstractpynnmodel class method)": [[17, "spynnaker.pyNN.models.abstract_pynn_model.AbstractPyNNModel.set_model_max_atoms_per_dimension_per_core"]], "size() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.size"]], "spynnaker.pynn.models": [[17, "module-spynnaker.pyNN.models"]], "spynnaker.pynn.models.abstract_pynn_model": [[17, "module-spynnaker.pyNN.models.abstract_pynn_model"]], "spynnaker.pynn.models.defaults": [[17, "module-spynnaker.pyNN.models.defaults"]], "spynnaker.pynn.models.projection": [[17, "module-spynnaker.pyNN.models.projection"]], "spynnaker.pynn.models.recorder": [[17, "module-spynnaker.pyNN.models.recorder"]], "turn_off_all_recording() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.turn_off_all_recording"]], "turn_on_record() (spynnaker.pynn.models.recorder.recorder method)": [[17, "spynnaker.pyNN.models.recorder.Recorder.turn_on_record"]], "weighthistogram() (spynnaker.pynn.models.projection.projection method)": [[17, "spynnaker.pyNN.models.projection.Projection.weightHistogram"]], "write_to_files_indicators (spynnaker.pynn.models.recorder.recorder property)": [[17, "spynnaker.pyNN.models.recorder.Recorder.write_to_files_indicators"]], "abstractacceptsincomingsynapses (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses"]], "abstracthasdelaystages (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractHasDelayStages"]], "abstractmaxspikes (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractMaxSpikes"]], "abstractneuronexpandable (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractNeuronExpandable"]], "abstractsynapseexpandable (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable"]], "hasshapekeyfields (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.HasShapeKeyFields"]], "hassynapses (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.HasSynapses"]], "n_bytes_per_input (spynnaker.pynn.models.abstract_models.receivessynapticinputsoversdram attribute)": [[18, "spynnaker.pyNN.models.abstract_models.ReceivesSynapticInputsOverSDRAM.N_BYTES_PER_INPUT"]], "receivessynapticinputsoversdram (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.ReceivesSynapticInputsOverSDRAM"]], "sendssynapticinputsoversdram (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.SendsSynapticInputsOverSDRAM"]], "supportsstructure (class in spynnaker.pynn.models.abstract_models)": [[18, "spynnaker.pyNN.models.abstract_models.SupportsStructure"]], "bit_field_size (spynnaker.pynn.models.abstract_models.abstractsynapseexpandable property)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable.bit_field_size"]], "clear_connection_cache() (spynnaker.pynn.models.abstract_models.abstractacceptsincomingsynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses.clear_connection_cache"]], "connection_generator_region (spynnaker.pynn.models.abstract_models.abstractsynapseexpandable property)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable.connection_generator_region"]], "gen_neurons_on_machine() (spynnaker.pynn.models.abstract_models.abstractneuronexpandable method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractNeuronExpandable.gen_neurons_on_machine"]], "gen_on_machine() (spynnaker.pynn.models.abstract_models.abstractsynapseexpandable method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable.gen_on_machine"]], "get_connections_from_machine() (spynnaker.pynn.models.abstract_models.abstractacceptsincomingsynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses.get_connections_from_machine"]], "get_connections_from_machine() (spynnaker.pynn.models.abstract_models.hassynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.HasSynapses.get_connections_from_machine"]], "get_shape_key_fields() (spynnaker.pynn.models.abstract_models.hasshapekeyfields method)": [[18, "spynnaker.pyNN.models.abstract_models.HasShapeKeyFields.get_shape_key_fields"]], "get_synapse_id_by_target() (spynnaker.pynn.models.abstract_models.abstractacceptsincomingsynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses.get_synapse_id_by_target"]], "max_gen_data (spynnaker.pynn.models.abstract_models.abstractsynapseexpandable property)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable.max_gen_data"]], "max_spikes_per_second() (spynnaker.pynn.models.abstract_models.abstractmaxspikes method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractMaxSpikes.max_spikes_per_second"]], "max_spikes_per_ts() (spynnaker.pynn.models.abstract_models.abstractmaxspikes method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractMaxSpikes.max_spikes_per_ts"]], "n_bytes_for_transfer (spynnaker.pynn.models.abstract_models.receivessynapticinputsoversdram property)": [[18, "spynnaker.pyNN.models.abstract_models.ReceivesSynapticInputsOverSDRAM.n_bytes_for_transfer"]], "n_delay_stages (spynnaker.pynn.models.abstract_models.abstracthasdelaystages property)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractHasDelayStages.n_delay_stages"]], "neuron_generator_region (spynnaker.pynn.models.abstract_models.abstractneuronexpandable property)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractNeuronExpandable.neuron_generator_region"]], "read_generated_connection_holders() (spynnaker.pynn.models.abstract_models.abstractsynapseexpandable method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractSynapseExpandable.read_generated_connection_holders"]], "read_generated_initial_values() (spynnaker.pynn.models.abstract_models.abstractneuronexpandable method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractNeuronExpandable.read_generated_initial_values"]], "set_structure() (spynnaker.pynn.models.abstract_models.supportsstructure method)": [[18, "spynnaker.pyNN.models.abstract_models.SupportsStructure.set_structure"]], "set_synapse_dynamics() (spynnaker.pynn.models.abstract_models.abstractacceptsincomingsynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses.set_synapse_dynamics"]], "spynnaker.pynn.models.abstract_models": [[18, "module-spynnaker.pyNN.models.abstract_models"]], "verify_splitter() (spynnaker.pynn.models.abstract_models.abstractacceptsincomingsynapses method)": [[18, "spynnaker.pyNN.models.abstract_models.AbstractAcceptsIncomingSynapses.verify_splitter"]], "weight_scales (spynnaker.pynn.models.abstract_models.receivessynapticinputsoversdram property)": [[18, "spynnaker.pyNN.models.abstract_models.ReceivesSynapticInputsOverSDRAM.weight_scales"]], "eieiospikerecorder (class in spynnaker.pynn.models.common)": [[19, "spynnaker.pyNN.models.common.EIEIOSpikeRecorder"]], "max_params_bytes (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.MAX_PARAMS_BYTES"]], "max_rewires (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.MAX_REWIRES"]], "multispikerecorder (class in spynnaker.pynn.models.common)": [[19, "spynnaker.pyNN.models.common.MultiSpikeRecorder"]], "neuronrecorder (class in spynnaker.pynn.models.common)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder"]], "packets (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.PACKETS"]], "packets_type (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.PACKETS_TYPE"]], "parameterholder (class in spynnaker.pynn.models.common)": [[19, "spynnaker.pyNN.models.common.ParameterHolder"]], "populationapplicationvertex (class in spynnaker.pynn.models.common)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex"]], "rewiring (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.REWIRING"]], "rewiring_type (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.REWIRING_TYPE"]], "spikes (spynnaker.pynn.models.common.neuronrecorder attribute)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.SPIKES"]], "add_region_offset() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.add_region_offset"]], "check_indexes() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.check_indexes"]], "conductance_based (spynnaker.pynn.models.common.populationapplicationvertex property)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.conductance_based"]], "get_atom_key_map() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_atom_key_map"]], "get_buffer_data_type() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_buffer_data_type"]], "get_buffer_data_type() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_buffer_data_type"]], "get_buffered_sdram() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_buffered_sdram"]], "get_buffered_sdram_per_record() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_buffered_sdram_per_record"]], "get_buffered_sdram_per_timestep() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_buffered_sdram_per_timestep"]], "get_current_state_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_current_state_values"]], "get_data_type() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_data_type"]], "get_data_type() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_data_type"]], "get_event_recordable_variables() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_event_recordable_variables"]], "get_generator_data() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_generator_data"]], "get_generator_sdram_usage_in_bytes() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_generator_sdram_usage_in_bytes"]], "get_generator_type() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.get_generator_type"]], "get_initial_state_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_initial_state_values"]], "get_max_buffered_sdram_per_record() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_max_buffered_sdram_per_record"]], "get_max_variable_sdram_usage() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_max_variable_sdram_usage"]], "get_metadata_sdram_usage_in_bytes() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_metadata_sdram_usage_in_bytes"]], "get_neurons_recording() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_neurons_recording"]], "get_parameter_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_parameter_values"]], "get_parameters() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_parameters"]], "get_recordable_variables() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_recordable_variables"]], "get_recordable_variables() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_recordable_variables"]], "get_recorded_indices() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_recorded_indices"]], "get_recording_region() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_recording_region"]], "get_recording_variables() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_recording_variables"]], "get_region() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_region"]], "get_region_sizes() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_region_sizes"]], "get_sampling_interval_ms() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_sampling_interval_ms"]], "get_sampling_interval_ms() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_sampling_interval_ms"]], "get_sampling_overflow_sdram() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_sampling_overflow_sdram"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.common.multispikerecorder method)": [[19, "spynnaker.pyNN.models.common.MultiSpikeRecorder.get_sdram_usage_in_bytes"]], "get_state_variables() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_state_variables"]], "get_units() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.get_units"]], "get_variable_sdram_usage() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.get_variable_sdram_usage"]], "inject() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.inject"]], "is_global_generatable (spynnaker.pynn.models.common.neuronrecorder property)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.is_global_generatable"]], "is_param_generatable() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.is_param_generatable"]], "is_recordable() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.is_recordable"]], "is_recording() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.is_recording"]], "items() (spynnaker.pynn.models.common.parameterholder method)": [[19, "spynnaker.pyNN.models.common.ParameterHolder.items"]], "keys() (spynnaker.pynn.models.common.parameterholder method)": [[19, "spynnaker.pyNN.models.common.ParameterHolder.keys"]], "make_missing_string() (in module spynnaker.pynn.models.common.recording_utils)": [[19, "spynnaker.pyNN.models.common.recording_utils.make_missing_string"]], "n_colour_bits (spynnaker.pynn.models.common.populationapplicationvertex property)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.n_colour_bits"]], "neurons_recording() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.neurons_recording"]], "param_generator_id() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.param_generator_id"]], "param_generator_params() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.param_generator_params"]], "param_generator_params_size_in_bytes() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.param_generator_params_size_in_bytes"]], "record (spynnaker.pynn.models.common.eieiospikerecorder property)": [[19, "spynnaker.pyNN.models.common.EIEIOSpikeRecorder.record"]], "record (spynnaker.pynn.models.common.multispikerecorder property)": [[19, "spynnaker.pyNN.models.common.MultiSpikeRecorder.record"]], "recorded_ids_by_slice() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.recorded_ids_by_slice"]], "recorded_region_ids (spynnaker.pynn.models.common.neuronrecorder property)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.recorded_region_ids"]], "recording_variables (spynnaker.pynn.models.common.neuronrecorder property)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.recording_variables"]], "set_current_state_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.set_current_state_values"]], "set_initial_state_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.set_initial_state_values"]], "set_max_rewires_per_ts() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.set_max_rewires_per_ts"]], "set_not_recording() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.set_not_recording"]], "set_parameter_values() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.set_parameter_values"]], "set_recording() (spynnaker.pynn.models.common.eieiospikerecorder method)": [[19, "spynnaker.pyNN.models.common.EIEIOSpikeRecorder.set_recording"]], "set_recording() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.set_recording"]], "set_recording() (spynnaker.pynn.models.common.populationapplicationvertex method)": [[19, "spynnaker.pyNN.models.common.PopulationApplicationVertex.set_recording"]], "spynnaker.pynn.models.common": [[19, "module-spynnaker.pyNN.models.common"]], "spynnaker.pynn.models.common.param_generator_data": [[19, "module-spynnaker.pyNN.models.common.param_generator_data"]], "spynnaker.pynn.models.common.recording_utils": [[19, "module-spynnaker.pyNN.models.common.recording_utils"]], "type_has_generator() (in module spynnaker.pynn.models.common.param_generator_data)": [[19, "spynnaker.pyNN.models.common.param_generator_data.type_has_generator"]], "values() (spynnaker.pynn.models.common.parameterholder method)": [[19, "spynnaker.pyNN.models.common.ParameterHolder.values"]], "write_neuron_recording_region() (spynnaker.pynn.models.common.neuronrecorder method)": [[19, "spynnaker.pyNN.models.common.NeuronRecorder.write_neuron_recording_region"]], "acsource (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.ACSource"]], "ac_source (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.AC_SOURCE"]], "abstractcurrentsource (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource"]], "currentsourceids (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs"]], "dcsource (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.DCSource"]], "dc_source (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.DC_SOURCE"]], "noisy_current_source (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.NOISY_CURRENT_SOURCE"]], "no_source (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.NO_SOURCE"]], "n_sources (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.N_SOURCES"]], "noisycurrentsource (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource"]], "step_current_source (spynnaker.pynn.models.current_sources.currentsourceids attribute)": [[20, "spynnaker.pyNN.models.current_sources.CurrentSourceIDs.STEP_CURRENT_SOURCE"]], "stepcurrentsource (class in spynnaker.pynn.models.current_sources)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource"]], "app_vertex (spynnaker.pynn.models.current_sources.abstractcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.app_vertex"]], "current_source_id (spynnaker.pynn.models.current_sources.acsource property)": [[20, "spynnaker.pyNN.models.current_sources.ACSource.current_source_id"]], "current_source_id (spynnaker.pynn.models.current_sources.abstractcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.current_source_id"]], "current_source_id (spynnaker.pynn.models.current_sources.dcsource property)": [[20, "spynnaker.pyNN.models.current_sources.DCSource.current_source_id"]], "current_source_id (spynnaker.pynn.models.current_sources.noisycurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource.current_source_id"]], "current_source_id (spynnaker.pynn.models.current_sources.stepcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource.current_source_id"]], "get_parameter_types (spynnaker.pynn.models.current_sources.acsource property)": [[20, "spynnaker.pyNN.models.current_sources.ACSource.get_parameter_types"]], "get_parameter_types (spynnaker.pynn.models.current_sources.abstractcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.get_parameter_types"]], "get_parameter_types (spynnaker.pynn.models.current_sources.dcsource property)": [[20, "spynnaker.pyNN.models.current_sources.DCSource.get_parameter_types"]], "get_parameter_types (spynnaker.pynn.models.current_sources.noisycurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource.get_parameter_types"]], "get_parameter_types (spynnaker.pynn.models.current_sources.stepcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource.get_parameter_types"]], "get_parameters (spynnaker.pynn.models.current_sources.acsource property)": [[20, "spynnaker.pyNN.models.current_sources.ACSource.get_parameters"]], "get_parameters (spynnaker.pynn.models.current_sources.abstractcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.get_parameters"]], "get_parameters (spynnaker.pynn.models.current_sources.dcsource property)": [[20, "spynnaker.pyNN.models.current_sources.DCSource.get_parameters"]], "get_parameters (spynnaker.pynn.models.current_sources.noisycurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource.get_parameters"]], "get_parameters (spynnaker.pynn.models.current_sources.stepcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource.get_parameters"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.current_sources.acsource method)": [[20, "spynnaker.pyNN.models.current_sources.ACSource.get_sdram_usage_in_bytes"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.current_sources.abstractcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.get_sdram_usage_in_bytes"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.current_sources.dcsource method)": [[20, "spynnaker.pyNN.models.current_sources.DCSource.get_sdram_usage_in_bytes"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.current_sources.noisycurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource.get_sdram_usage_in_bytes"]], "get_sdram_usage_in_bytes() (spynnaker.pynn.models.current_sources.stepcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource.get_sdram_usage_in_bytes"]], "inject_into() (spynnaker.pynn.models.current_sources.abstractcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.inject_into"]], "population (spynnaker.pynn.models.current_sources.abstractcurrentsource property)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.population"]], "set_app_vertex() (spynnaker.pynn.models.current_sources.abstractcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.set_app_vertex"]], "set_parameters() (spynnaker.pynn.models.current_sources.acsource method)": [[20, "spynnaker.pyNN.models.current_sources.ACSource.set_parameters"]], "set_parameters() (spynnaker.pynn.models.current_sources.abstractcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.set_parameters"]], "set_parameters() (spynnaker.pynn.models.current_sources.dcsource method)": [[20, "spynnaker.pyNN.models.current_sources.DCSource.set_parameters"]], "set_parameters() (spynnaker.pynn.models.current_sources.noisycurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.NoisyCurrentSource.set_parameters"]], "set_parameters() (spynnaker.pynn.models.current_sources.stepcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.StepCurrentSource.set_parameters"]], "set_population() (spynnaker.pynn.models.current_sources.abstractcurrentsource method)": [[20, "spynnaker.pyNN.models.current_sources.AbstractCurrentSource.set_population"]], "spynnaker.pynn.models.current_sources": [[20, "module-spynnaker.pyNN.models.current_sources"]], "delayafferentapplicationedge (class in spynnaker.pynn.models.neural_projections)": [[21, "spynnaker.pyNN.models.neural_projections.DelayAfferentApplicationEdge"]], "delayedapplicationedge (class in spynnaker.pynn.models.neural_projections)": [[21, "spynnaker.pyNN.models.neural_projections.DelayedApplicationEdge"]], "projectionapplicationedge (class in spynnaker.pynn.models.neural_projections)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge"]], "synapseinformation (class in spynnaker.pynn.models.neural_projections)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation"]], "add_pre_run_connection_holder() (spynnaker.pynn.models.neural_projections.synapseinformation method)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.add_pre_run_connection_holder"]], "add_synapse_information() (spynnaker.pynn.models.neural_projections.delayedapplicationedge method)": [[21, "spynnaker.pyNN.models.neural_projections.DelayedApplicationEdge.add_synapse_information"]], "add_synapse_information() (spynnaker.pynn.models.neural_projections.projectionapplicationedge method)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.add_synapse_information"]], "connector (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.connector"]], "delay_edge (spynnaker.pynn.models.neural_projections.projectionapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.delay_edge"]], "delays (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.delays"]], "finish_connection_holders() (spynnaker.pynn.models.neural_projections.synapseinformation method)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.finish_connection_holders"]], "get_local_provenance_data() (spynnaker.pynn.models.neural_projections.projectionapplicationedge method)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.get_local_provenance_data"]], "is_neuromodulation (spynnaker.pynn.models.neural_projections.projectionapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.is_neuromodulation"]], "may_generate_on_machine() (spynnaker.pynn.models.neural_projections.synapseinformation method)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.may_generate_on_machine"]], "may_use_direct_matrix() (spynnaker.pynn.models.neural_projections.synapseinformation method)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.may_use_direct_matrix"]], "n_delay_stages (spynnaker.pynn.models.neural_projections.projectionapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.n_delay_stages"]], "n_post_neurons (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.n_post_neurons"]], "n_pre_neurons (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.n_pre_neurons"]], "post_population (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.post_population"]], "postpop_is_view (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.postpop_is_view"]], "pre_population (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.pre_population"]], "pre_run_connection_holders (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.pre_run_connection_holders"]], "prepop_is_view (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.prepop_is_view"]], "receptor_type (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.receptor_type"]], "rng (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.rng"]], "spynnaker.pynn.models.neural_projections": [[21, "module-spynnaker.pyNN.models.neural_projections"]], "synapse_dynamics (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.synapse_dynamics"]], "synapse_information (spynnaker.pynn.models.neural_projections.delayedapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.DelayedApplicationEdge.synapse_information"]], "synapse_information (spynnaker.pynn.models.neural_projections.projectionapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.ProjectionApplicationEdge.synapse_information"]], "synapse_type (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.synapse_type"]], "synapse_type_from_dynamics (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.synapse_type_from_dynamics"]], "undelayed_edge (spynnaker.pynn.models.neural_projections.delayedapplicationedge property)": [[21, "spynnaker.pyNN.models.neural_projections.DelayedApplicationEdge.undelayed_edge"]], "weights (spynnaker.pynn.models.neural_projections.synapseinformation property)": [[21, "spynnaker.pyNN.models.neural_projections.SynapseInformation.weights"]], "abstractconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector"]], "abstractgenerateconnectoronhost (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnHost"]], "abstractgenerateconnectoronmachine (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine"]], "alltoallconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector"]], "arrayconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector"]], "csaconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector"]], "convolutionconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector"]], "distancedependentprobabilityconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector"]], "fixednumberpostconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector"]], "fixednumberpreconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector"]], "fixedprobabilityconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector"]], "fromfileconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromFileConnector"]], "fromlistconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector"]], "indexbasedprobabilityconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector"]], "kernelconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector"]], "multapseconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector"]], "numpy_synapses_dtype (spynnaker.pynn.models.neural_projections.connectors.abstractconnector attribute)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.NUMPY_SYNAPSES_DTYPE"]], "onetooneconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector"]], "pooldenseconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector"]], "smallworldconnector (class in spynnaker.pynn.models.neural_projections.connectors)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector"]], "allow_self_connections (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.allow_self_connections"]], "allow_self_connections (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.allow_self_connections"]], "allow_self_connections (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.allow_self_connections"]], "allow_self_connections (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.allow_self_connections"]], "allow_self_connections (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.allow_self_connections"]], "column_names (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.column_names"]], "conn_list (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.conn_list"]], "connect() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.connect"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronhost method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnHost.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.create_synaptic_block"]], "create_synaptic_block() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.create_synaptic_block"]], "d_expression (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.d_expression"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.kernelconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.multapseconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.gen_connector_id"]], "gen_connector_id (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.gen_connector_id"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.gen_connector_params"]], "gen_connector_params() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.gen_connector_params"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.kernelconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.multapseconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.gen_connector_params_size_in_bytes"]], "gen_connector_params_size_in_bytes (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.gen_connector_params_size_in_bytes"]], "gen_delay_params() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_delay_params"]], "gen_delay_params_size_in_bytes() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_delay_params_size_in_bytes"]], "gen_delays_id() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_delays_id"]], "gen_weight_params_size_in_bytes() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_weight_params_size_in_bytes"]], "gen_weights_id() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_weights_id"]], "gen_weights_params() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.gen_weights_params"]], "generate_on_machine() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.generate_on_machine"]], "get_connected_vertices() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_connected_vertices"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.get_delay_maximum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.get_delay_minimum"]], "get_delay_variance() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_delay_variance"]], "get_delay_variance() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_delay_variance"]], "get_delay_variance() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_delay_variance"]], "get_extra_parameter_names() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_extra_parameter_names"]], "get_extra_parameters() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_extra_parameters"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_from_pre_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.get_n_connections_from_pre_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_n_connections_to_post_vertex_maximum"]], "get_n_connections_to_post_vertex_maximum() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.get_n_connections_to_post_vertex_maximum"]], "get_post_pool_shape() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector static method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_post_pool_shape"]], "get_post_shape() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_post_shape"]], "get_provenance_data() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_provenance_data"]], "get_reader() (spynnaker.pynn.models.neural_projections.connectors.fromfileconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromFileConnector.get_reader"]], "get_rng_next() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_rng_next"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.alltoallconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AllToAllConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.arrayconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ArrayConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.get_weight_maximum"]], "get_weight_mean() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_weight_mean"]], "get_weight_mean() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_weight_mean"]], "get_weight_mean() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_weight_mean"]], "get_weight_variance() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.get_weight_variance"]], "get_weight_variance() (spynnaker.pynn.models.neural_projections.connectors.fromlistconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FromListConnector.get_weight_variance"]], "get_weight_variance() (spynnaker.pynn.models.neural_projections.connectors.kernelconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.KernelConnector.get_weight_variance"]], "index_expression (spynnaker.pynn.models.neural_projections.connectors.indexbasedprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.IndexBasedProbabilityConnector.index_expression"]], "kernel_weights (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.kernel_weights"]], "local_only_n_bytes (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.local_only_n_bytes"]], "local_only_n_bytes() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.local_only_n_bytes"]], "negative_receptor_type (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.negative_receptor_type"]], "negative_receptor_type (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.negative_receptor_type"]], "p_connect (spynnaker.pynn.models.neural_projections.connectors.fixedprobabilityconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedProbabilityConnector.p_connect"]], "positive_receptor_type (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.positive_receptor_type"]], "positive_receptor_type (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.positive_receptor_type"]], "safe (spynnaker.pynn.models.neural_projections.connectors.abstractconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.safe"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.set_projection_information"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.distancedependentprobabilityconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.DistanceDependentProbabilityConnector.set_projection_information"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpostconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPostConnector.set_projection_information"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.fixednumberpreconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.FixedNumberPreConnector.set_projection_information"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.multapseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.MultapseConnector.set_projection_information"]], "set_projection_information() (spynnaker.pynn.models.neural_projections.connectors.smallworldconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.SmallWorldConnector.set_projection_information"]], "set_space() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.set_space"]], "show_connection_set() (spynnaker.pynn.models.neural_projections.connectors.csaconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.CSAConnector.show_connection_set"]], "space (spynnaker.pynn.models.neural_projections.connectors.abstractconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.space"]], "spynnaker.pynn.models.neural_projections.connectors": [[22, "module-spynnaker.pyNN.models.neural_projections.connectors"]], "synapse_info (spynnaker.pynn.models.neural_projections.connectors.abstractconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.synapse_info"]], "use_direct_matrix() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.use_direct_matrix"]], "use_direct_matrix() (spynnaker.pynn.models.neural_projections.connectors.onetooneconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.OneToOneConnector.use_direct_matrix"]], "validate_connection() (spynnaker.pynn.models.neural_projections.connectors.abstractconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.validate_connection"]], "validate_connection() (spynnaker.pynn.models.neural_projections.connectors.abstractgenerateconnectoronmachine method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractGenerateConnectorOnMachine.validate_connection"]], "validate_connection() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.validate_connection"]], "validate_connection() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.validate_connection"]], "verbose (spynnaker.pynn.models.neural_projections.connectors.abstractconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.AbstractConnector.verbose"]], "weights (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector property)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.weights"]], "write_local_only_data() (spynnaker.pynn.models.neural_projections.connectors.convolutionconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.ConvolutionConnector.write_local_only_data"]], "write_local_only_data() (spynnaker.pynn.models.neural_projections.connectors.pooldenseconnector method)": [[22, "spynnaker.pyNN.models.neural_projections.connectors.PoolDenseConnector.write_local_only_data"]], "neuronparameter (class in spynnaker.pynn.models.neural_properties)": [[23, "spynnaker.pyNN.models.neural_properties.NeuronParameter"]], "get_dataspec_datatype() (spynnaker.pynn.models.neural_properties.neuronparameter method)": [[23, "spynnaker.pyNN.models.neural_properties.NeuronParameter.get_dataspec_datatype"]], "get_value() (spynnaker.pynn.models.neural_properties.neuronparameter method)": [[23, "spynnaker.pyNN.models.neural_properties.NeuronParameter.get_value"]], "iterator_by_slice() (spynnaker.pynn.models.neural_properties.neuronparameter method)": [[23, "spynnaker.pyNN.models.neural_properties.NeuronParameter.iterator_by_slice"]], "spynnaker.pynn.models.neural_properties": [[23, "module-spynnaker.pyNN.models.neural_properties"]], "abstractpopulationvertex (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex"]], "abstractpynnneuronmodel (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModel"]], "abstractpynnneuronmodelstandard (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModelStandard"]], "background_max_queued_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.BACKGROUND_MAX_QUEUED_NAME"]], "background_max_queued_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.BACKGROUND_MAX_QUEUED_NAME"]], "background_overloads_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.BACKGROUND_OVERLOADS_NAME"]], "background_overloads_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.BACKGROUND_OVERLOADS_NAME"]], "base_size (spynnaker.pynn.models.neuron.generator_data.generatordata attribute)": [[24, "spynnaker.pyNN.models.neuron.generator_data.GeneratorData.BASE_SIZE"]], "bit_field_filter (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.BIT_FIELD_FILTER"]], "bit_field_filter (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.BIT_FIELD_FILTER"]], "common_regions (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.COMMON_REGIONS"]], "common_regions (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.COMMON_REGIONS"]], "common_regions (spynnaker.pynn.models.neuron.populationneuronsmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.COMMON_REGIONS"]], "common_regions (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.COMMON_REGIONS"]], "connector_builder (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.CONNECTOR_BUILDER"]], "connector_builder (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.CONNECTOR_BUILDER"]], "core_params (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.CORE_PARAMS"]], "core_params (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.CORE_PARAMS"]], "core_params (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.CORE_PARAMS"]], "core_params_base_size (spynnaker.pynn.models.neuron.abstractpopulationvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.CORE_PARAMS_BASE_SIZE"]], "current_source_params (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.CURRENT_SOURCE_PARAMS"]], "current_source_params (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.CURRENT_SOURCE_PARAMS"]], "current_source_params (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.CURRENT_SOURCE_PARAMS"]], "commonregions (class in spynnaker.pynn.models.neuron.population_machine_common)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions"]], "connectionholder (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.ConnectionHolder"]], "dma_complete (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.DMA_COMPLETE"]], "dma_complete (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.DMA_COMPLETE"]], "earliest_receive (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.EARLIEST_RECEIVE"]], "generatordata (class in spynnaker.pynn.models.neuron.generator_data)": [[24, "spynnaker.pyNN.models.neuron.generator_data.GeneratorData"]], "initial_values (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.INITIAL_VALUES"]], "initial_values (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.INITIAL_VALUES"]], "initial_values (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.INITIAL_VALUES"]], "input_buffer_full_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.INPUT_BUFFER_FULL_NAME"]], "input_buffer_full_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.INPUT_BUFFER_FULL_NAME"]], "input_buffer_full_name (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.INPUT_BUFFER_FULL_NAME"]], "key_region (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.KEY_REGION"]], "latest_receive (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.LATEST_RECEIVE"]], "local_only (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.LOCAL_ONLY"]], "local_only_params (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.LOCAL_ONLY_PARAMS"]], "local_only_size (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.LOCAL_ONLY_SIZE"]], "localonlyprovenance (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance"]], "max_filled_size_of_input_buffer_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"]], "max_filled_size_of_input_buffer_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"]], "max_filled_size_of_input_buffer_name (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.MAX_FILLED_SIZE_OF_INPUT_BUFFER_NAME"]], "max_spikes_per_time_step_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.MAX_SPIKES_PER_TIME_STEP_NAME"]], "max_spikes_processed (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.MAX_SPIKES_PROCESSED"]], "max_spikes_received (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.MAX_SPIKES_RECEIVED"]], "max_spike_overflow (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.MAX_SPIKE_OVERFLOW"]], "max_transfer_timer_overruns (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.MAX_TRANSFER_TIMER_OVERRUNS"]], "masterpoptableasbinarysearch (class in spynnaker.pynn.models.neuron.master_pop_table)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch"]], "maxrowinfo (class in spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo"]], "neuron_builder (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.NEURON_BUILDER"]], "neuron_builder (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.NEURON_BUILDER"]], "neuron_builder (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.NEURON_BUILDER"]], "neuron_params (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.NEURON_PARAMS"]], "neuron_params (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.NEURON_PARAMS"]], "neuron_params (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.NEURON_PARAMS"]], "neuron_recording (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.NEURON_RECORDING"]], "neuron_recording (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.NEURON_RECORDING"]], "neuron_recording (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.NEURON_RECORDING"]], "neuron_regions (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.NEURON_REGIONS"]], "neuron_regions (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.NEURON_REGIONS"]], "neuron_regions (spynnaker.pynn.models.neuron.populationneuronsmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.NEURON_REGIONS"]], "n_items (spynnaker.pynn.models.neuron.localonlyprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance.N_ITEMS"]], "n_items (spynnaker.pynn.models.neuron.neuronprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance.N_ITEMS"]], "n_items (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.N_ITEMS"]], "n_items (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.N_ITEMS"]], "n_items (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.N_ITEMS"]], "n_late_spikes_name (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.N_LATE_SPIKES_NAME"]], "n_late_spikes_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.N_LATE_SPIKES_NAME"]], "n_late_spikes_name (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.N_LATE_SPIKES_NAME"]], "n_rewires_name (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.N_REWIRES_NAME"]], "n_rewires_name (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.N_REWIRES_NAME"]], "n_skipped_time_steps (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.N_SKIPPED_TIME_STEPS"]], "n_transfer_timer_overruns (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.N_TRANSFER_TIMER_OVERRUNS"]], "neurondata (class in spynnaker.pynn.models.neuron.neuron_data)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData"]], "neuronprovenance (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance"]], "population_table (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.POPULATION_TABLE"]], "population_table (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.POPULATION_TABLE"]], "profiling (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.PROFILING"]], "profiling (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.PROFILING"]], "profiling (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.PROFILING"]], "profiling (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.PROFILING"]], "provenance_data (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.PROVENANCE_DATA"]], "provenance_data (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.PROVENANCE_DATA"]], "provenance_data (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.PROVENANCE_DATA"]], "provenance_data (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.PROVENANCE_DATA"]], "populationmachinecommon (class in spynnaker.pynn.models.neuron.population_machine_common)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon"]], "populationmachinelocalonlycombinedvertex (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex"]], "populationmachinelocalonlycombinedvertex.regions (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS"]], "populationmachinesynapses (class in spynnaker.pynn.models.neuron.population_machine_synapses)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses"]], "populationmachinevertex (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex"]], "populationmachinevertex.regions (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS"]], "populationneuronsmachinevertex (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex"]], "populationneuronsmachinevertex.regions (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS"]], "populationsynapsesmachinevertexcommon (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon"]], "populationsynapsesmachinevertexcommon.regions (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS"]], "populationsynapsesmachinevertexlead (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead"]], "populationsynapsesmachinevertexshared (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexShared"]], "recording (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.RECORDING"]], "recording (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.RECORDING"]], "recording (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.RECORDING"]], "recording (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.RECORDING"]], "sdram_edge_params (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.SDRAM_EDGE_PARAMS"]], "sdram_edge_params (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.SDRAM_EDGE_PARAMS"]], "spikes_processed (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.SPIKES_PROCESSED"]], "spikes_processed (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.SPIKES_PROCESSED"]], "structural_dynamics (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.STRUCTURAL_DYNAMICS"]], "structural_dynamics (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.STRUCTURAL_DYNAMICS"]], "synapse_dynamics (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.SYNAPSE_DYNAMICS"]], "synapse_dynamics (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.SYNAPSE_DYNAMICS"]], "synapse_params (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.SYNAPSE_PARAMS"]], "synapse_params (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.SYNAPSE_PARAMS"]], "synapse_regions (spynnaker.pynn.models.neuron.populationmachinevertex attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.SYNAPSE_REGIONS"]], "synapse_regions (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.SYNAPSE_REGIONS"]], "synaptic_matrix (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.SYNAPTIC_MATRIX"]], "synaptic_matrix (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.SYNAPTIC_MATRIX"]], "system (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.REGIONS.SYSTEM"]], "system (spynnaker.pynn.models.neuron.populationmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.REGIONS.SYSTEM"]], "system (spynnaker.pynn.models.neuron.populationneuronsmachinevertex.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.REGIONS.SYSTEM"]], "system (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon.regions attribute)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.REGIONS.SYSTEM"]], "spikeprocessingfastprovenance (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance"]], "spikeprocessingprovenance (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance"]], "synapseprovenance (class in spynnaker.pynn.models.neuron)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance"]], "synapseregions (class in spynnaker.pynn.models.neuron.synaptic_matrices)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions"]], "synapticmatrices (class in spynnaker.pynn.models.neuron.synaptic_matrices)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices"]], "synapticmatrixapp (class in spynnaker.pynn.models.neuron.synaptic_matrix_app)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp"]], "add_application_entry() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.add_application_entry"]], "add_connections() (spynnaker.pynn.models.neuron.connectionholder method)": [[24, "spynnaker.pyNN.models.neuron.ConnectionHolder.add_connections"]], "add_incoming_projection() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.add_incoming_projection"]], "add_invalid_application_entry() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.add_invalid_application_entry"]], "atoms_shape (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.atoms_shape"]], "bit_field_base_address() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.bit_field_base_address"]], "bit_field_size (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses property)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.bit_field_size"]], "bit_field_size (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.bit_field_size"]], "bitfield_filter (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.bitfield_filter"]], "clear_connection_cache() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.clear_connection_cache"]], "combined_core_capable (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.combined_core_capable"]], "conductance_based (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.conductance_based"]], "connection_builder (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.connection_builder"]], "connection_generator_region (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses property)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.connection_generator_region"]], "connections (spynnaker.pynn.models.neuron.connectionholder property)": [[24, "spynnaker.pyNN.models.neuron.ConnectionHolder.connections"]], "convert_to_connections() (in module spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.convert_to_connections"]], "copy_initial_state_variables() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.copy_initial_state_variables"]], "core_seed() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.core_seed"]], "create_vertex() (spynnaker.pynn.models.neuron.abstractpynnneuronmodel method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModel.create_vertex"]], "create_vertex() (spynnaker.pynn.models.neuron.abstractpynnneuronmodelstandard method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModelStandard.create_vertex"]], "current_source_id_list (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.current_source_id_list"]], "current_sources (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.current_sources"]], "current_timer_tick (spynnaker.pynn.models.neuron.neuronprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance.current_timer_tick"]], "default_population_parameters (spynnaker.pynn.models.neuron.abstractpynnneuronmodel attribute)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModel.default_population_parameters"]], "default_population_parameters (spynnaker.pynn.models.neuron.abstractpynnneuronmodelstandard attribute)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModelStandard.default_population_parameters"]], "delayed_max_bytes (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.delayed_max_bytes"]], "delayed_max_n_synapses (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.delayed_max_n_synapses"]], "delayed_max_words (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.delayed_max_words"]], "describe() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.describe"]], "drop_late_spikes (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.drop_late_spikes"]], "earliest_receive (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.earliest_receive"]], "earliest_send (spynnaker.pynn.models.neuron.neuronprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance.earliest_send"]], "finish() (spynnaker.pynn.models.neuron.connectionholder method)": [[24, "spynnaker.pyNN.models.neuron.ConnectionHolder.finish"]], "gen_data (spynnaker.pynn.models.neuron.generator_data.generatordata property)": [[24, "spynnaker.pyNN.models.neuron.generator_data.GeneratorData.gen_data"]], "gen_on_machine (spynnaker.pynn.models.neuron.neuron_data.neurondata property)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.gen_on_machine"]], "gen_on_machine (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.gen_on_machine"]], "gen_on_machine() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.gen_on_machine"]], "gen_size (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.gen_size"]], "generate_data() (spynnaker.pynn.models.neuron.neuron_data.neurondata method)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.generate_data"]], "generate_data() (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.generate_data"]], "generate_data_specification() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.generate_data_specification"]], "generate_data_specification() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.generate_data_specification"]], "generate_data_specification() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.generate_data_specification"]], "generate_data_specification() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.generate_data_specification"]], "generate_data_specification() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexshared method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexShared.generate_data_specification"]], "get_allowed_row_length() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch static method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.get_allowed_row_length"]], "get_binary_file_name() (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.get_binary_file_name"]], "get_binary_start_type() (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.get_binary_start_type"]], "get_buffer_data_type() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_buffer_data_type"]], "get_common_constant_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_common_constant_sdram"]], "get_connections() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.get_connections"]], "get_connections_from_machine() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_connections_from_machine"]], "get_connections_from_machine() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.get_connections_from_machine"]], "get_connections_from_machine() (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.get_connections_from_machine"]], "get_current_state_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_current_state_values"]], "get_data_type() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_data_type"]], "get_generator_data() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.get_generator_data"]], "get_incoming_projections_from() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_incoming_projections_from"]], "get_index() (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.get_index"]], "get_index() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.get_index"]], "get_initial_state_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_initial_state_values"]], "get_master_population_table_size() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch static method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.get_master_population_table_size"]], "get_max_atoms_per_core() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_max_atoms_per_core"]], "get_max_atoms_per_dimension_per_core() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_max_atoms_per_dimension_per_core"]], "get_max_neuron_variable_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_max_neuron_variable_sdram"]], "get_max_row_info() (in module spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.get_max_row_info"]], "get_max_row_info() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_max_row_info"]], "get_max_synapse_variable_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_max_synapse_variable_sdram"]], "get_maximum_delay_supported_in_ms() (in module spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.get_maximum_delay_supported_in_ms"]], "get_n_bytes_for_transfer() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex static method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.get_n_bytes_for_transfer"]], "get_n_keys_for_partition() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.get_n_keys_for_partition"]], "get_n_keys_for_partition() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.get_n_keys_for_partition"]], "get_n_keys_for_partition() (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.get_n_keys_for_partition"]], "get_neuron_constant_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_neuron_constant_sdram"]], "get_neuron_variable_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_neuron_variable_sdram"]], "get_neurons_recording() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_neurons_recording"]], "get_next_allowed_address() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch static method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.get_next_allowed_address"]], "get_parameter_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_parameter_values"]], "get_parameters() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_parameters"]], "get_pop_table_data() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.get_pop_table_data"]], "get_profile_data() (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.get_profile_data"]], "get_recordable_variables() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_recordable_variables"]], "get_recorded_region_ids() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.get_recorded_region_ids"]], "get_recorded_region_ids() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.get_recorded_region_ids"]], "get_recorded_region_ids() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.get_recorded_region_ids"]], "get_recorded_region_ids() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.get_recorded_region_ids"]], "get_recorded_region_ids() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.get_recorded_region_ids"]], "get_recording_region() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_recording_region"]], "get_recording_region_base_address() (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.get_recording_region_base_address"]], "get_recording_variables() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_recording_variables"]], "get_ring_buffer_shifts() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_ring_buffer_shifts"]], "get_sampling_interval_ms() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_sampling_interval_ms"]], "get_sdram_usage_for_core_neuron_params() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_sdram_usage_for_core_neuron_params"]], "get_sdram_usage_for_current_source_params() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_sdram_usage_for_current_source_params"]], "get_sdram_usage_for_neuron_generation() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_sdram_usage_for_neuron_generation"]], "get_sdram_usage_for_neuron_params() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_sdram_usage_for_neuron_params"]], "get_state_variables() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_state_variables"]], "get_structural_dynamics_size() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_structural_dynamics_size"]], "get_synapse_dynamics_size() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapse_dynamics_size"]], "get_synapse_expander_size() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapse_expander_size"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapse_id_by_target"]], "get_synapse_params_size() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapse_params_size"]], "get_synapse_variable_sdram() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapse_variable_sdram"]], "get_synapses() (in module spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.get_synapses"]], "get_synapses_size() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_synapses_size"]], "get_units() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_units"]], "get_weight_scales() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.get_weight_scales"]], "host_generated_block_addr (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.host_generated_block_addr"]], "incoming_poisson_projections (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.incoming_poisson_projections"]], "incoming_projections (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.incoming_projections"]], "incoming_spike_buffer_size (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.incoming_spike_buffer_size"]], "initial_state_variables (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.initial_state_variables"]], "initialise_table() (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch method)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.initialise_table"]], "inject() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.inject"]], "latest_receive (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.latest_receive"]], "latest_send (spynnaker.pynn.models.neuron.neuronprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance.latest_send"]], "max_core_mask (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch property)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.max_core_mask"]], "max_gen_data (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses property)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.max_gen_data"]], "max_gen_data (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.max_gen_data"]], "max_index (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch property)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.max_index"]], "max_late_spike (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.max_late_spike"]], "max_n_neurons_per_core (spynnaker.pynn.models.neuron.master_pop_table.masterpoptableasbinarysearch property)": [[24, "spynnaker.pyNN.models.neuron.master_pop_table.MasterPopTableAsBinarySearch.max_n_neurons_per_core"]], "max_size_input_buffer (spynnaker.pynn.models.neuron.localonlyprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance.max_size_input_buffer"]], "max_size_input_buffer (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.max_size_input_buffer"]], "max_size_input_buffer (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.max_size_input_buffer"]], "max_spikes_overflow (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.max_spikes_overflow"]], "max_spikes_per_timestep (spynnaker.pynn.models.neuron.localonlyprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance.max_spikes_per_timestep"]], "max_spikes_processed (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.max_spikes_processed"]], "max_spikes_received (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.max_spikes_received"]], "max_transfer_timer_overrun (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.max_transfer_timer_overrun"]], "n_atoms (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.n_atoms"]], "n_buffer_overflows (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_buffer_overflows"]], "n_buffer_overflows (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.n_buffer_overflows"]], "n_bytes_for_transfer (spynnaker.pynn.models.neuron.populationneuronsmachinevertex property)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.n_bytes_for_transfer"]], "n_colour_bits (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.n_colour_bits"]], "n_dmas_complete (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_dmas_complete"]], "n_dmas_complete (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.n_dmas_complete"]], "n_failed_bitfield_reads (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_failed_bitfield_reads"]], "n_filtered_by_bitfield (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_filtered_by_bitfield"]], "n_ghost_searches (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_ghost_searches"]], "n_invalid_pop_table_hits (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_invalid_pop_table_hits"]], "n_late_packets (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_late_packets"]], "n_late_packets (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.n_late_packets"]], "n_late_spikes (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_late_spikes"]], "n_plastic_saturations (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_plastic_saturations"]], "n_pre_synaptic_events (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_pre_synaptic_events"]], "n_profile_samples (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.n_profile_samples"]], "n_rewires (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_rewires"]], "n_rewires (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.n_rewires"]], "n_saturations (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_saturations"]], "n_skipped_synapses (spynnaker.pynn.models.neuron.synapseprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SynapseProvenance.n_skipped_synapses"]], "n_skipped_time_steps (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_skipped_time_steps"]], "n_spikes_dropped (spynnaker.pynn.models.neuron.localonlyprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance.n_spikes_dropped"]], "n_spikes_lost_from_input (spynnaker.pynn.models.neuron.localonlyprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.LocalOnlyProvenance.n_spikes_lost_from_input"]], "n_spikes_processed (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_spikes_processed"]], "n_spikes_processed (spynnaker.pynn.models.neuron.spikeprocessingprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingProvenance.n_spikes_processed"]], "n_synapse_cores_required (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.n_synapse_cores_required"]], "n_tdma_misses (spynnaker.pynn.models.neuron.neuronprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.NeuronProvenance.n_tdma_misses"]], "n_transfer_timer_overruns (spynnaker.pynn.models.neuron.spikeprocessingfastprovenance attribute)": [[24, "spynnaker.pyNN.models.neuron.SpikeProcessingFastProvenance.n_transfer_timer_overruns"]], "name (spynnaker.pynn.models.neuron.abstractpynnneuronmodel property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPyNNNeuronModel.name"]], "neuron_impl (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.neuron_impl"]], "neuron_recordables (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.neuron_recordables"]], "neuron_recorder (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.neuron_recorder"]], "on_chip_generated_matrix_size (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices property)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.on_chip_generated_matrix_size"]], "parameters (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.parameters"]], "parse_extra_provenance_items() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.parse_extra_provenance_items"]], "parse_extra_provenance_items() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.parse_extra_provenance_items"]], "parse_extra_provenance_items() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.parse_extra_provenance_items"]], "parse_extra_provenance_items() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.parse_extra_provenance_items"]], "pop_seed (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.pop_seed"]], "pop_table (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.pop_table"]], "profile (spynnaker.pynn.models.neuron.population_machine_common.commonregions attribute)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions.profile"]], "provenance (spynnaker.pynn.models.neuron.population_machine_common.commonregions attribute)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions.provenance"]], "read_all_synapses() (in module spynnaker.pynn.models.neuron.synapse_io)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.read_all_synapses"]], "read_data() (spynnaker.pynn.models.neuron.neuron_data.neurondata method)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.read_data"]], "read_generated_connection_holders() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.read_generated_connection_holders"]], "read_generated_connection_holders() (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.read_generated_connection_holders"]], "read_generated_connection_holders() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.read_generated_connection_holders"]], "read_initial_data() (spynnaker.pynn.models.neuron.neuron_data.neurondata method)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.read_initial_data"]], "read_initial_values (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.read_initial_values"]], "recording (spynnaker.pynn.models.neuron.population_machine_common.commonregions attribute)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions.recording"]], "regeneratable_sdram_blocks_and_sizes() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.regeneratable_sdram_blocks_and_sizes"]], "regenerate_data_specification() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.regenerate_data_specification"]], "regenerate_data_specification() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.regenerate_data_specification"]], "regenerate_data_specification() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.regenerate_data_specification"]], "regenerate_data_specification() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.regenerate_data_specification"]], "reload_required() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.reload_required"]], "reload_required() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.reload_required"]], "reload_required() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.reload_required"]], "reload_required() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.reload_required"]], "reserve_matrices() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.reserve_matrices"]], "reset_generation() (spynnaker.pynn.models.neuron.neuron_data.neurondata method)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.reset_generation"]], "reset_to_first_timestep() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.reset_to_first_timestep"]], "ring_buffer_sigma (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.ring_buffer_sigma"]], "sdram_required (spynnaker.pynn.models.neuron.population_machine_common.populationmachinecommon property)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.PopulationMachineCommon.sdram_required"]], "sdram_requirement() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.sdram_requirement"]], "sdram_requirement() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.sdram_requirement"]], "self_projection (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.self_projection"]], "set_current_state_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_current_state_values"]], "set_do_neuron_regeneration() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.set_do_neuron_regeneration"]], "set_do_neuron_regeneration() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.set_do_neuron_regeneration"]], "set_do_neuron_regeneration() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.set_do_neuron_regeneration"]], "set_do_synapse_regeneration() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.set_do_synapse_regeneration"]], "set_do_synapse_regeneration() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.set_do_synapse_regeneration"]], "set_do_synapse_regeneration() (spynnaker.pynn.models.neuron.population_machine_synapses.populationmachinesynapses method)": [[24, "spynnaker.pyNN.models.neuron.population_machine_synapses.PopulationMachineSynapses.set_do_synapse_regeneration"]], "set_initial_state_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_initial_state_values"]], "set_max_atoms_per_dimension_per_core() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_max_atoms_per_dimension_per_core"]], "set_neuron_vertex_and_partition_id() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.set_neuron_vertex_and_partition_id"]], "set_not_recording() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_not_recording"]], "set_parameter_values() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_parameter_values"]], "set_recording() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_recording"]], "set_reload_required() (spynnaker.pynn.models.neuron.populationmachinelocalonlycombinedvertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineLocalOnlyCombinedVertex.set_reload_required"]], "set_reload_required() (spynnaker.pynn.models.neuron.populationmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationMachineVertex.set_reload_required"]], "set_reload_required() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.set_reload_required"]], "set_reload_required() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexlead method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexLead.set_reload_required"]], "set_sdram_partition() (spynnaker.pynn.models.neuron.populationneuronsmachinevertex method)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.set_sdram_partition"]], "set_sdram_partition() (spynnaker.pynn.models.neuron.populationsynapsesmachinevertexcommon method)": [[24, "spynnaker.pyNN.models.neuron.PopulationSynapsesMachineVertexCommon.set_sdram_partition"]], "set_structure() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_structure"]], "set_synapse_dynamics() (spynnaker.pynn.models.neuron.abstractpopulationvertex method)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.set_synapse_dynamics"]], "size (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.size"]], "size (spynnaker.pynn.models.neuron.generator_data.generatordata property)": [[24, "spynnaker.pyNN.models.neuron.generator_data.GeneratorData.size"]], "spikes_per_second (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.spikes_per_second"]], "spynnaker.pynn.models.neuron": [[24, "module-spynnaker.pyNN.models.neuron"]], "spynnaker.pynn.models.neuron.generator_data": [[24, "module-spynnaker.pyNN.models.neuron.generator_data"]], "spynnaker.pynn.models.neuron.master_pop_table": [[24, "module-spynnaker.pyNN.models.neuron.master_pop_table"]], "spynnaker.pynn.models.neuron.neuron_data": [[24, "module-spynnaker.pyNN.models.neuron.neuron_data"]], "spynnaker.pynn.models.neuron.population_machine_common": [[24, "module-spynnaker.pyNN.models.neuron.population_machine_common"]], "spynnaker.pynn.models.neuron.population_machine_synapses": [[24, "module-spynnaker.pyNN.models.neuron.population_machine_synapses"]], "spynnaker.pynn.models.neuron.synapse_io": [[24, "module-spynnaker.pyNN.models.neuron.synapse_io"]], "spynnaker.pynn.models.neuron.synaptic_matrices": [[24, "module-spynnaker.pyNN.models.neuron.synaptic_matrices"]], "spynnaker.pynn.models.neuron.synaptic_matrix_app": [[24, "module-spynnaker.pyNN.models.neuron.synaptic_matrix_app"]], "state_variables (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.state_variables"]], "structural_dynamics (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.structural_dynamics"]], "synapse_dynamics (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.synapse_dynamics"]], "synapse_dynamics (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.synapse_dynamics"]], "synapse_executable_suffix (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.synapse_executable_suffix"]], "synapse_params (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.synapse_params"]], "synapse_recordables (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.synapse_recordables"]], "synapse_recorder (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.synapse_recorder"]], "synaptic_matrix (spynnaker.pynn.models.neuron.synaptic_matrices.synapseregions attribute)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapseRegions.synaptic_matrix"]], "system (spynnaker.pynn.models.neuron.population_machine_common.commonregions attribute)": [[24, "spynnaker.pyNN.models.neuron.population_machine_common.CommonRegions.system"]], "undelayed_max_bytes (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.undelayed_max_bytes"]], "undelayed_max_n_synapses (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.undelayed_max_n_synapses"]], "undelayed_max_words (spynnaker.pynn.models.neuron.synapse_io.maxrowinfo property)": [[24, "spynnaker.pyNN.models.neuron.synapse_io.MaxRowInfo.undelayed_max_words"]], "weight_scale (spynnaker.pynn.models.neuron.abstractpopulationvertex property)": [[24, "spynnaker.pyNN.models.neuron.AbstractPopulationVertex.weight_scale"]], "weight_scales (spynnaker.pynn.models.neuron.populationneuronsmachinevertex property)": [[24, "spynnaker.pyNN.models.neuron.PopulationNeuronsMachineVertex.weight_scales"]], "write_data() (spynnaker.pynn.models.neuron.neuron_data.neurondata method)": [[24, "spynnaker.pyNN.models.neuron.neuron_data.NeuronData.write_data"]], "write_matrix() (spynnaker.pynn.models.neuron.synaptic_matrix_app.synapticmatrixapp method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrix_app.SynapticMatrixApp.write_matrix"]], "write_synaptic_data() (spynnaker.pynn.models.neuron.synaptic_matrices.synapticmatrices method)": [[24, "spynnaker.pyNN.models.neuron.synaptic_matrices.SynapticMatrices.write_synaptic_data"]], "abstractadditionalinput (class in spynnaker.pynn.models.neuron.additional_inputs)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AbstractAdditionalInput"]], "additionalinputca2adaptive (class in spynnaker.pynn.models.neuron.additional_inputs)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive"]], "add_parameters() (spynnaker.pynn.models.neuron.additional_inputs.additionalinputca2adaptive method)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.additional_inputs.additionalinputca2adaptive method)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive.add_state_variables"]], "i_alpha (spynnaker.pynn.models.neuron.additional_inputs.additionalinputca2adaptive property)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive.i_alpha"]], "i_ca2 (spynnaker.pynn.models.neuron.additional_inputs.additionalinputca2adaptive property)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive.i_ca2"]], "spynnaker.pynn.models.neuron.additional_inputs": [[25, "module-spynnaker.pyNN.models.neuron.additional_inputs"]], "tau_ca2 (spynnaker.pynn.models.neuron.additional_inputs.additionalinputca2adaptive property)": [[25, "spynnaker.pyNN.models.neuron.additional_inputs.AdditionalInputCa2Adaptive.tau_ca2"]], "eifconductancealphapopulation (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.EIFConductanceAlphaPopulation"]], "hhcondexp (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.HHCondExp"]], "ifcondalpha (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCondAlpha"]], "ifcondexpbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCondExpBase"]], "ifcondexpstoc (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCondExpStoc"]], "ifcurralpha (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrAlpha"]], "ifcurrdelta (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrDelta"]], "ifcurrdualexpbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrDualExpBase"]], "ifcurrexpbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrExpBase"]], "ifcurrexpca2adaptive (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrExpCa2Adaptive"]], "ifcurrexpsemdbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCurrExpSEMDBase"]], "iffacetsconductancepopulation (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IFFacetsConductancePopulation"]], "izkcondexpbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IzkCondExpBase"]], "izkcurrexpbase (class in spynnaker.pynn.models.neuron.builds)": [[26, "spynnaker.pyNN.models.neuron.builds.IzkCurrExpBase"]], "default_initial_values (spynnaker.pynn.models.neuron.builds.eifconductancealphapopulation attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.EIFConductanceAlphaPopulation.default_initial_values"]], "default_initial_values (spynnaker.pynn.models.neuron.builds.hhcondexp attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.HHCondExp.default_initial_values"]], "default_initial_values (spynnaker.pynn.models.neuron.builds.ifcondalpha attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCondAlpha.default_initial_values"]], "default_initial_values (spynnaker.pynn.models.neuron.builds.iffacetsconductancepopulation attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.IFFacetsConductancePopulation.default_initial_values"]], "default_parameters (spynnaker.pynn.models.neuron.builds.eifconductancealphapopulation attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.EIFConductanceAlphaPopulation.default_parameters"]], "default_parameters (spynnaker.pynn.models.neuron.builds.hhcondexp attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.HHCondExp.default_parameters"]], "default_parameters (spynnaker.pynn.models.neuron.builds.ifcondalpha attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.IFCondAlpha.default_parameters"]], "default_parameters (spynnaker.pynn.models.neuron.builds.iffacetsconductancepopulation attribute)": [[26, "spynnaker.pyNN.models.neuron.builds.IFFacetsConductancePopulation.default_parameters"]], "spynnaker.pynn.models.neuron.builds": [[26, "module-spynnaker.pyNN.models.neuron.builds"]], "abstractneuronimpl (class in spynnaker.pynn.models.neuron.implementations)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl"]], "abstractstandardneuroncomponent (class in spynnaker.pynn.models.neuron.implementations)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent"]], "neuronimplstandard (class in spynnaker.pynn.models.neuron.implementations)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard"]], "rangeddictvertexslice (class in spynnaker.pynn.models.neuron.implementations)": [[27, "spynnaker.pyNN.models.neuron.implementations.RangedDictVertexSlice"]], "add_parameters() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.implementations.abstractstandardneuroncomponent method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.implementations.abstractstandardneuroncomponent method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.add_state_variables"]], "binary_name (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl property)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.binary_name"]], "binary_name (spynnaker.pynn.models.neuron.implementations.neuronimplstandard property)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.binary_name"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_global_weight_scale"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_global_weight_scale"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_n_synapse_types"]], "get_recordable_data_types() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_recordable_data_types"]], "get_recordable_data_types() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_recordable_data_types"]], "get_recordable_units() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_recordable_units"]], "get_recordable_units() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_recordable_units"]], "get_recordable_variable_index() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_recordable_variable_index"]], "get_recordable_variable_index() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_recordable_variable_index"]], "get_recordable_variables() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_recordable_variables"]], "get_recordable_variables() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_recordable_variables"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_synapse_id_by_target"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_synapse_targets"]], "get_units() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.get_units"]], "get_units() (spynnaker.pynn.models.neuron.implementations.abstractstandardneuroncomponent method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent.get_units"]], "get_units() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.get_units"]], "has_variable() (spynnaker.pynn.models.neuron.implementations.abstractstandardneuroncomponent method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent.has_variable"]], "is_conductance_based (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl property)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.is_conductance_based"]], "is_conductance_based (spynnaker.pynn.models.neuron.implementations.neuronimplstandard property)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.is_conductance_based"]], "is_recordable() (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl method)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.is_recordable"]], "is_recordable() (spynnaker.pynn.models.neuron.implementations.neuronimplstandard method)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.is_recordable"]], "model_name (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl property)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.model_name"]], "model_name (spynnaker.pynn.models.neuron.implementations.neuronimplstandard property)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.model_name"]], "n_steps_per_timestep (spynnaker.pynn.models.neuron.implementations.neuronimplstandard property)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.n_steps_per_timestep"]], "spynnaker.pynn.models.neuron.implementations": [[27, "module-spynnaker.pyNN.models.neuron.implementations"]], "structs (spynnaker.pynn.models.neuron.implementations.abstractneuronimpl property)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractNeuronImpl.structs"]], "structs (spynnaker.pynn.models.neuron.implementations.abstractstandardneuroncomponent property)": [[27, "spynnaker.pyNN.models.neuron.implementations.AbstractStandardNeuronComponent.structs"]], "structs (spynnaker.pynn.models.neuron.implementations.neuronimplstandard property)": [[27, "spynnaker.pyNN.models.neuron.implementations.NeuronImplStandard.structs"]], "abstractinputtype (class in spynnaker.pynn.models.neuron.input_types)": [[28, "spynnaker.pyNN.models.neuron.input_types.AbstractInputType"]], "inputtypeconductance (class in spynnaker.pynn.models.neuron.input_types)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance"]], "inputtypecurrent (class in spynnaker.pynn.models.neuron.input_types)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeCurrent"]], "inputtypedelta (class in spynnaker.pynn.models.neuron.input_types)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeDelta"]], "add_parameters() (spynnaker.pynn.models.neuron.input_types.inputtypeconductance method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.input_types.inputtypecurrent method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeCurrent.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.input_types.inputtypedelta method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeDelta.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.input_types.inputtypeconductance method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.input_types.inputtypecurrent method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeCurrent.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.input_types.inputtypedelta method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeDelta.add_state_variables"]], "e_rev_e (spynnaker.pynn.models.neuron.input_types.inputtypeconductance property)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance.e_rev_E"]], "e_rev_i (spynnaker.pynn.models.neuron.input_types.inputtypeconductance property)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance.e_rev_I"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.input_types.abstractinputtype method)": [[28, "spynnaker.pyNN.models.neuron.input_types.AbstractInputType.get_global_weight_scale"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.input_types.inputtypeconductance method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeConductance.get_global_weight_scale"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.input_types.inputtypecurrent method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeCurrent.get_global_weight_scale"]], "get_global_weight_scale() (spynnaker.pynn.models.neuron.input_types.inputtypedelta method)": [[28, "spynnaker.pyNN.models.neuron.input_types.InputTypeDelta.get_global_weight_scale"]], "spynnaker.pynn.models.neuron.input_types": [[28, "module-spynnaker.pyNN.models.neuron.input_types"]], "abstractlocalonly (class in spynnaker.pynn.models.neuron.local_only)": [[29, "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly"]], "localonlyconvolution (class in spynnaker.pynn.models.neuron.local_only)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution"]], "localonlypooldense (class in spynnaker.pynn.models.neuron.local_only)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense"]], "absolute_max_atoms_per_core (spynnaker.pynn.models.neuron.local_only.abstractlocalonly property)": [[29, "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly.absolute_max_atoms_per_core"]], "changes_during_run (spynnaker.pynn.models.neuron.local_only.localonlyconvolution property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.changes_during_run"]], "changes_during_run (spynnaker.pynn.models.neuron.local_only.localonlypooldense property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.changes_during_run"]], "delay (spynnaker.pynn.models.neuron.local_only.localonlyconvolution property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.delay"]], "delay (spynnaker.pynn.models.neuron.local_only.localonlypooldense property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.delay"]], "get_maximum_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_maximum_positive_weight"]], "get_maximum_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_maximum_positive_weight"]], "get_mean_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_mean_negative_weight"]], "get_mean_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_mean_negative_weight"]], "get_mean_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_mean_positive_weight"]], "get_mean_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_mean_positive_weight"]], "get_minimum_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_minimum_negative_weight"]], "get_minimum_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_minimum_negative_weight"]], "get_negative_synapse_index() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_negative_synapse_index"]], "get_negative_synapse_index() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_negative_synapse_index"]], "get_parameters_usage_in_bytes() (spynnaker.pynn.models.neuron.local_only.abstractlocalonly method)": [[29, "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly.get_parameters_usage_in_bytes"]], "get_parameters_usage_in_bytes() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_parameters_usage_in_bytes"]], "get_parameters_usage_in_bytes() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_parameters_usage_in_bytes"]], "get_positive_synapse_index() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_positive_synapse_index"]], "get_positive_synapse_index() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_positive_synapse_index"]], "get_variance_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_variance_negative_weight"]], "get_variance_negative_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_variance_negative_weight"]], "get_variance_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_variance_positive_weight"]], "get_variance_positive_weight() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_variance_positive_weight"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.get_vertex_executable_suffix"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.local_only.abstractlocalonly property)": [[29, "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly.is_combined_core_capable"]], "merge() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.merge"]], "merge() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.merge"]], "spynnaker.pynn.models.neuron.local_only": [[29, "module-spynnaker.pyNN.models.neuron.local_only"]], "weight (spynnaker.pynn.models.neuron.local_only.localonlyconvolution property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.weight"]], "weight (spynnaker.pynn.models.neuron.local_only.localonlypooldense property)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.weight"]], "write_parameters() (spynnaker.pynn.models.neuron.local_only.abstractlocalonly method)": [[29, "spynnaker.pyNN.models.neuron.local_only.AbstractLocalOnly.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.local_only.localonlyconvolution method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyConvolution.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.local_only.localonlypooldense method)": [[29, "spynnaker.pyNN.models.neuron.local_only.LocalOnlyPoolDense.write_parameters"]], "neuronmodelizh (class in spynnaker.pynn.models.neuron.neuron_models)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh"]], "neuronmodelleakyintegrateandfire (class in spynnaker.pynn.models.neuron.neuron_models)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire"]], "a (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.a"]], "add_parameters() (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh method)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire method)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh method)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire method)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.add_state_variables"]], "b (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.b"]], "c (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.c"]], "cm (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.cm"]], "d (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.d"]], "i_offset (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.i_offset"]], "i_offset (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.i_offset"]], "spynnaker.pynn.models.neuron.neuron_models": [[30, "module-spynnaker.pyNN.models.neuron.neuron_models"]], "tau_m (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.tau_m"]], "tau_refrac (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.tau_refrac"]], "u_init (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.u_init"]], "v_init (spynnaker.pynn.models.neuron.neuron_models.neuronmodelizh property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelIzh.v_init"]], "v_init (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.v_init"]], "v_reset (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.v_reset"]], "v_rest (spynnaker.pynn.models.neuron.neuron_models.neuronmodelleakyintegrateandfire property)": [[30, "spynnaker.pyNN.models.neuron.neuron_models.NeuronModelLeakyIntegrateAndFire.v_rest"]], "spynnaker.pynn.models.neuron.plasticity": [[31, "module-spynnaker.pyNN.models.neuron.plasticity"]], "float_to_fixed() (in module spynnaker.pynn.models.neuron.plasticity.stdp.common)": [[32, "spynnaker.pyNN.models.neuron.plasticity.stdp.common.float_to_fixed"]], "get_exp_lut_array() (in module spynnaker.pynn.models.neuron.plasticity.stdp.common)": [[32, "spynnaker.pyNN.models.neuron.plasticity.stdp.common.get_exp_lut_array"]], "spynnaker.pynn.models.neuron.plasticity.stdp": [[32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp"]], "spynnaker.pynn.models.neuron.plasticity.stdp.common": [[32, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.common"]], "abstractsynapsestructure (class in spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.AbstractSynapseStructure"]], "synapsestructureweightaccumulator (class in spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightAccumulator"]], "synapsestructureweightonly (class in spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightOnly"]], "get_n_half_words_per_connection() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.abstractsynapsestructure method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.AbstractSynapseStructure.get_n_half_words_per_connection"]], "get_n_half_words_per_connection() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.synapsestructureweightaccumulator method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightAccumulator.get_n_half_words_per_connection"]], "get_n_half_words_per_connection() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.synapsestructureweightonly method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightOnly.get_n_half_words_per_connection"]], "get_weight_half_word() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.abstractsynapsestructure method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.AbstractSynapseStructure.get_weight_half_word"]], "get_weight_half_word() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.synapsestructureweightaccumulator method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightAccumulator.get_weight_half_word"]], "get_weight_half_word() (spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure.synapsestructureweightonly method)": [[33, "spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure.SynapseStructureWeightOnly.get_weight_half_word"]], "spynnaker.pynn.models.neuron.plasticity.stdp.synapse_structure": [[33, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.synapse_structure"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.A_minus"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.A_minus"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.A_minus"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.A_minus"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.A_minus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.A_plus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.A_plus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.A_plus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.A_plus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.A_plus"]], "abstracttimingdependence (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence"]], "timingdependencepfisterspiketriplet (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet"]], "timingdependencerecurrent (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent"]], "timingdependencespikenearestpair (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair"]], "timingdependencespikepair (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair"]], "timingdependencevogels2011 (class in spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011"]], "alpha (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.alpha"]], "default_parameters (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent attribute)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.default_parameters"]], "default_parameters (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair attribute)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.default_parameters"]], "default_parameters (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 attribute)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.default_parameters"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.get_parameters_sdram_usage_in_bytes"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.is_same_as"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.n_weight_terms"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.n_weight_terms"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.n_weight_terms"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.n_weight_terms"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.n_weight_terms"]], "n_weight_terms (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.n_weight_terms"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.pre_trace_n_bytes"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.pre_trace_n_bytes"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.pre_trace_n_bytes"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.pre_trace_n_bytes"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.pre_trace_n_bytes"]], "pre_trace_n_bytes (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.pre_trace_n_bytes"]], "spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence": [[34, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.synaptic_structure"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.synaptic_structure"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.synaptic_structure"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.synaptic_structure"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.synaptic_structure"]], "synaptic_structure (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.synaptic_structure"]], "tau (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.tau"]], "tau_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.tau_minus"]], "tau_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.tau_minus"]], "tau_minus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.tau_minus"]], "tau_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.tau_plus"]], "tau_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.tau_plus"]], "tau_plus (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.tau_plus"]], "tau_x (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.tau_x"]], "tau_y (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.tau_y"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 property)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.vertex_executable_suffix"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.abstracttimingdependence method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.AbstractTimingDependence.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencepfisterspiketriplet method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependencePfisterSpikeTriplet.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencerecurrent method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceRecurrent.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikenearestpair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikeNearestPair.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencespikepair method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceSpikePair.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.timing_dependence.timingdependencevogels2011 method)": [[34, "spynnaker.pyNN.models.neuron.plasticity.stdp.timing_dependence.TimingDependenceVogels2011.write_parameters"]], "a3_minus (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.A3_minus"]], "a3_plus (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.A3_plus"]], "a_minus (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstracthasaplusaminus property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractHasAPlusAMinus.A_minus"]], "a_plus (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstracthasaplusaminus property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractHasAPlusAMinus.A_plus"]], "abstracthasaplusaminus (class in spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractHasAPlusAMinus"]], "abstractweightdependence (class in spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence"]], "weightdependenceadditive (class in spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive"]], "weightdependenceadditivetriplet (class in spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet"]], "weightdependencemultiplicative (class in spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative"]], "default_parameters (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet attribute)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.default_parameters"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.get_parameters_sdram_usage_in_bytes"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.is_same_as"]], "set_a_plus_a_minus() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstracthasaplusaminus method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractHasAPlusAMinus.set_a_plus_a_minus"]], "spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence": [[35, "module-spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.vertex_executable_suffix"]], "w_max (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.w_max"]], "w_max (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.w_max"]], "w_max (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.w_max"]], "w_min (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.w_min"]], "w_min (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.w_min"]], "w_min (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.w_min"]], "weight_maximum (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.weight_maximum"]], "weight_maximum (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.weight_maximum"]], "weight_maximum (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.weight_maximum"]], "weight_maximum (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative property)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.weight_maximum"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.abstractweightdependence method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.AbstractWeightDependence.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditive method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditive.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependenceadditivetriplet method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceAdditiveTriplet.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.plasticity.stdp.weight_dependence.weightdependencemultiplicative method)": [[35, "spynnaker.pyNN.models.neuron.plasticity.stdp.weight_dependence.WeightDependenceMultiplicative.write_parameters"]], "spynnaker.pynn.models.neuron.structural_plasticity": [[36, "module-spynnaker.pyNN.models.neuron.structural_plasticity"]], "spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis": [[37, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis"]], "abstractelimination (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination"]], "randombyweightelimination (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.abstractelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.randombyweightelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.abstractelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.randombyweightelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination.get_parameters_sdram_usage_in_bytes"]], "spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination": [[38, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.abstractelimination property)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.randombyweightelimination property)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination.vertex_executable_suffix"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.abstractelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.AbstractElimination.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.elimination.randombyweightelimination method)": [[38, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.elimination.RandomByWeightElimination.write_parameters"]], "abstractformation (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation"]], "distancedependentformation (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation"]], "distance() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.distance"]], "generate_distance_probability_array() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.generate_distance_probability_array"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.abstractformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.abstractformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.get_parameters_sdram_usage_in_bytes"]], "spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation": [[39, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.abstractformation property)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation property)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.vertex_executable_suffix"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.abstractformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.AbstractFormation.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.formation.distancedependentformation method)": [[39, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.formation.DistanceDependentFormation.write_parameters"]], "abstractpartnerselection (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection"]], "lastneuronselection (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection"]], "randomselection (class in spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.abstractpartnerselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.lastneuronselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.randomselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.abstractpartnerselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.lastneuronselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.randomselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection.get_parameters_sdram_usage_in_bytes"]], "spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection": [[40, "module-spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.abstractpartnerselection property)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.lastneuronselection property)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection.vertex_executable_suffix"]], "vertex_executable_suffix (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.randomselection property)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection.vertex_executable_suffix"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.abstractpartnerselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.AbstractPartnerSelection.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.lastneuronselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.LastNeuronSelection.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.structural_plasticity.synaptogenesis.partner_selection.randomselection method)": [[40, "spynnaker.pyNN.models.neuron.structural_plasticity.synaptogenesis.partner_selection.RandomSelection.write_parameters"]], "abstractgenerateonmachine (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine"]], "abstractplasticsynapsedynamics (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics"]], "abstractsdramsynapsedynamics (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics"]], "abstractstaticsynapsedynamics (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics"]], "abstractsupportssignedweights (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights"]], "abstractsynapsedynamics (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics"]], "abstractsynapsedynamicsstructural (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural"]], "numpy_connectors_dtype (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics attribute)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.NUMPY_CONNECTORS_DTYPE"]], "pair_error (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon attribute)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.PAIR_ERROR"]], "pynnsynapsedynamics (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.PyNNSynapseDynamics"]], "synapsedynamicsneuromodulation (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation"]], "synapsedynamicsstdp (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP"]], "synapsedynamicsstatic (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic"]], "synapsedynamicsstructuralcommon (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon"]], "synapsedynamicsstructuralstdp (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP"]], "synapsedynamicsstructuralstatic (class in spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic"]], "absolute_max_atoms_per_core (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.absolute_max_atoms_per_core"]], "backprop_delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.backprop_delay"]], "calculate_spike_pair_additive_stdp_weight() (in module spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.calculate_spike_pair_additive_stdp_weight"]], "calculate_spike_pair_multiplicative_stdp_weight() (in module spynnaker.pynn.models.neuron.synapse_dynamics)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.calculate_spike_pair_multiplicative_stdp_weight"]], "changes_during_run (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.changes_during_run"]], "changes_during_run (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.changes_during_run"]], "changes_during_run (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.changes_during_run"]], "changes_during_run (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.changes_during_run"]], "changes_during_run (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.changes_during_run"]], "check_initial_delay() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.check_initial_delay"]], "check_initial_delay() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.check_initial_delay"]], "connections (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.connections"]], "connections (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.connections"]], "connections (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.connections"]], "convert_per_connection_data_to_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.convert_per_connection_data_to_rows"]], "delay (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.delay"]], "delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.delay"]], "delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.delay"]], "delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.delay"]], "dendritic_delay_fraction (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.dendritic_delay_fraction"]], "elimination (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.elimination"]], "elimination (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.elimination"]], "elimination (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.elimination"]], "f_rew (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.f_rew"]], "f_rew (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.f_rew"]], "f_rew (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.f_rew"]], "formation (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.formation"]], "formation (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.formation"]], "formation (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.formation"]], "gen_matrix_id (spynnaker.pynn.models.neuron.synapse_dynamics.abstractgenerateonmachine property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine.gen_matrix_id"]], "gen_matrix_id (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.gen_matrix_id"]], "gen_matrix_id (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.gen_matrix_id"]], "gen_matrix_id (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.gen_matrix_id"]], "gen_matrix_params() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractgenerateonmachine method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine.gen_matrix_params"]], "gen_matrix_params() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.gen_matrix_params"]], "gen_matrix_params() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.gen_matrix_params"]], "gen_matrix_params() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.gen_matrix_params"]], "gen_matrix_params_size_in_bytes (spynnaker.pynn.models.neuron.synapse_dynamics.abstractgenerateonmachine property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine.gen_matrix_params_size_in_bytes"]], "gen_matrix_params_size_in_bytes (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.gen_matrix_params_size_in_bytes"]], "gen_matrix_params_size_in_bytes (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.gen_matrix_params_size_in_bytes"]], "gen_matrix_params_size_in_bytes (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.gen_matrix_params_size_in_bytes"]], "generate_on_machine() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractgenerateonmachine method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractGenerateOnMachine.generate_on_machine"]], "generate_on_machine() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.generate_on_machine"]], "generate_on_machine() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.generate_on_machine"]], "get_connected_vertices() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_connected_vertices"]], "get_connected_vertices() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_connected_vertices"]], "get_delay_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_delay_maximum"]], "get_delay_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_delay_maximum"]], "get_delay_minimum() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_delay_minimum"]], "get_delay_minimum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_delay_minimum"]], "get_delay_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_delay_variance"]], "get_delay_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_delay_variance"]], "get_delay_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_delay_variance"]], "get_max_rewires_per_ts() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.get_max_rewires_per_ts"]], "get_max_rewires_per_ts() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.get_max_rewires_per_ts"]], "get_max_synapses() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.get_max_synapses"]], "get_max_synapses() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_max_synapses"]], "get_max_synapses() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_max_synapses"]], "get_max_synapses() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_max_synapses"]], "get_maximum_positive_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_maximum_positive_weight"]], "get_mean_negative_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_mean_negative_weight"]], "get_mean_positive_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_mean_positive_weight"]], "get_minimum_negative_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_minimum_negative_weight"]], "get_n_fixed_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.get_n_fixed_plastic_words_per_row"]], "get_n_fixed_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_n_fixed_plastic_words_per_row"]], "get_n_fixed_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_n_fixed_plastic_words_per_row"]], "get_n_items() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.get_n_items"]], "get_n_plastic_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.get_n_plastic_plastic_words_per_row"]], "get_n_plastic_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_n_plastic_plastic_words_per_row"]], "get_n_plastic_plastic_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_n_plastic_plastic_words_per_row"]], "get_n_static_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractstaticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics.get_n_static_words_per_row"]], "get_n_static_words_per_row() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_n_static_words_per_row"]], "get_n_synapses_in_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.get_n_synapses_in_rows"]], "get_n_synapses_in_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractstaticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics.get_n_synapses_in_rows"]], "get_n_synapses_in_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_n_synapses_in_rows"]], "get_n_synapses_in_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_n_synapses_in_rows"]], "get_n_synapses_in_rows() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_n_synapses_in_rows"]], "get_n_words_for_plastic_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.get_n_words_for_plastic_connections"]], "get_n_words_for_plastic_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_n_words_for_plastic_connections"]], "get_n_words_for_plastic_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_n_words_for_plastic_connections"]], "get_n_words_for_static_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractstaticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics.get_n_words_for_static_connections"]], "get_n_words_for_static_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_n_words_for_static_connections"]], "get_negative_synapse_index() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_negative_synapse_index"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_parameter_names"]], "get_parameter_names() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_parameter_names"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_parameters_sdram_usage_in_bytes"]], "get_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_parameters_sdram_usage_in_bytes"]], "get_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.get_plastic_synaptic_data"]], "get_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_plastic_synaptic_data"]], "get_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_plastic_synaptic_data"]], "get_positive_synapse_index() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_positive_synapse_index"]], "get_provenance_data() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_provenance_data"]], "get_seeds() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.get_seeds"]], "get_seeds() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_seeds"]], "get_seeds() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_seeds"]], "get_static_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractstaticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics.get_static_synaptic_data"]], "get_static_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_static_synaptic_data"]], "get_structural_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.get_structural_parameters_sdram_usage_in_bytes"]], "get_structural_parameters_sdram_usage_in_bytes() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.get_structural_parameters_sdram_usage_in_bytes"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_synapse_id_by_target"]], "get_value() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_value"]], "get_value() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_value"]], "get_value() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_value"]], "get_variance_negative_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_variance_negative_weight"]], "get_variance_positive_weight() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsupportssignedweights method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSupportsSignedWeights.get_variance_positive_weight"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_vertex_executable_suffix"]], "get_vertex_executable_suffix() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_vertex_executable_suffix"]], "get_weight_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_weight_maximum"]], "get_weight_maximum() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_weight_maximum"]], "get_weight_mean() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_weight_mean"]], "get_weight_mean() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_weight_mean"]], "get_weight_mean() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.get_weight_mean"]], "get_weight_mean() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_weight_mean"]], "get_weight_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.get_weight_variance"]], "get_weight_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.get_weight_variance"]], "get_weight_variance() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.get_weight_variance"]], "get_words() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.get_words"]], "initial_delay (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.initial_delay"]], "initial_delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.initial_delay"]], "initial_delay (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.initial_delay"]], "initial_weight (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.initial_weight"]], "initial_weight (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.initial_weight"]], "initial_weight (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.initial_weight"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.is_combined_core_capable"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.is_combined_core_capable"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.is_combined_core_capable"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.is_combined_core_capable"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.is_combined_core_capable"]], "is_combined_core_capable (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.is_combined_core_capable"]], "is_neuromodulation_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.is_neuromodulation_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.is_same_as"]], "is_same_as() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.is_same_as"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.merge"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.merge"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.merge"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.merge"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.merge"]], "merge() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.merge"]], "merge_neuromodulation() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.merge_neuromodulation"]], "neuromodulation (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.neuromodulation"]], "p_rew (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.p_rew"]], "pad_to_length (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.pad_to_length"]], "pad_to_length (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.pad_to_length"]], "pad_to_length (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.pad_to_length"]], "pad_to_length (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.pad_to_length"]], "partner_selection (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.partner_selection"]], "partner_selection (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.partner_selection"]], "partner_selection (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.partner_selection"]], "read_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractplasticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractPlasticSynapseDynamics.read_plastic_synaptic_data"]], "read_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.read_plastic_synaptic_data"]], "read_plastic_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.read_plastic_synaptic_data"]], "read_static_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractstaticsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractStaticSynapseDynamics.read_static_synaptic_data"]], "read_static_synaptic_data() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.read_static_synaptic_data"]], "s_max (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.s_max"]], "s_max (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.s_max"]], "s_max (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.s_max"]], "seed (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.seed"]], "seed (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.seed"]], "seed (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.seed"]], "set_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.set_connections"]], "set_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.set_connections"]], "set_connections() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.set_connections"]], "set_projection_parameter() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.set_projection_parameter"]], "set_projection_parameter() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.set_projection_parameter"]], "set_value() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.set_value"]], "set_value() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.set_value"]], "set_value() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.set_value"]], "slow (spynnaker.pynn.models.neuron.synapse_dynamics.pynnsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.PyNNSynapseDynamics.slow"]], "spynnaker.pynn.models.neuron.synapse_dynamics": [[41, "module-spynnaker.pyNN.models.neuron.synapse_dynamics"]], "tau_c (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.tau_c"]], "tau_d (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.tau_d"]], "timing_dependence (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.timing_dependence"]], "w_max (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.w_max"]], "w_min (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.w_min"]], "weight (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamics property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamics.weight"]], "weight (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.weight"]], "weight (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.weight"]], "weight (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.weight"]], "weight_dependence (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.weight_dependence"]], "with_replacement (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.with_replacement"]], "with_replacement (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstdp property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralSTDP.with_replacement"]], "with_replacement (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralstatic property)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralStatic.with_replacement"]], "write_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsdramsynapsedynamics method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSDRAMSynapseDynamics.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsneuromodulation method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsNeuromodulation.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstdp method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsSTDP.write_parameters"]], "write_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstatic method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStatic.write_parameters"]], "write_structural_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.abstractsynapsedynamicsstructural method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.AbstractSynapseDynamicsStructural.write_structural_parameters"]], "write_structural_parameters() (spynnaker.pynn.models.neuron.synapse_dynamics.synapsedynamicsstructuralcommon method)": [[41, "spynnaker.pyNN.models.neuron.synapse_dynamics.SynapseDynamicsStructuralCommon.write_structural_parameters"]], "abstractsynapsetype (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.AbstractSynapseType"]], "synapsetypealpha (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha"]], "synapsetypedelta (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta"]], "synapsetypedualexponential (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential"]], "synapsetypeexponential (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential"]], "synapsetypesemd (class in spynnaker.pynn.models.neuron.synapse_types)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD"]], "add_parameters() (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.add_state_variables"]], "exc2_old (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.exc2_old"]], "exc_response (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.exc_response"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.abstractsynapsetype method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.AbstractSynapseType.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.get_n_synapse_types"]], "get_n_synapse_types() (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.get_n_synapse_types"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.abstractsynapsetype method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.AbstractSynapseType.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.get_synapse_id_by_target"]], "get_synapse_id_by_target() (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.get_synapse_id_by_target"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.abstractsynapsetype method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.AbstractSynapseType.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.get_synapse_targets"]], "get_synapse_targets() (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd method)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.get_synapse_targets"]], "inh_response (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.inh_response"]], "isyn_exc (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.isyn_exc"]], "isyn_exc (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.isyn_exc"]], "isyn_exc (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.isyn_exc"]], "isyn_exc (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.isyn_exc"]], "isyn_exc2 (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.isyn_exc2"]], "isyn_exc2 (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.isyn_exc2"]], "isyn_inh (spynnaker.pynn.models.neuron.synapse_types.synapsetypedelta property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDelta.isyn_inh"]], "isyn_inh (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.isyn_inh"]], "isyn_inh (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.isyn_inh"]], "isyn_inh (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.isyn_inh"]], "multiplicator (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.multiplicator"]], "scaling_factor (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.scaling_factor"]], "spynnaker.pynn.models.neuron.synapse_types": [[42, "module-spynnaker.pyNN.models.neuron.synapse_types"]], "tau_syn_e (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.tau_syn_E"]], "tau_syn_e (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.tau_syn_E"]], "tau_syn_e (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.tau_syn_E"]], "tau_syn_e (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.tau_syn_E"]], "tau_syn_e2 (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.tau_syn_E2"]], "tau_syn_e2 (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.tau_syn_E2"]], "tau_syn_i (spynnaker.pynn.models.neuron.synapse_types.synapsetypealpha property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeAlpha.tau_syn_I"]], "tau_syn_i (spynnaker.pynn.models.neuron.synapse_types.synapsetypedualexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeDualExponential.tau_syn_I"]], "tau_syn_i (spynnaker.pynn.models.neuron.synapse_types.synapsetypeexponential property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeExponential.tau_syn_I"]], "tau_syn_i (spynnaker.pynn.models.neuron.synapse_types.synapsetypesemd property)": [[42, "spynnaker.pyNN.models.neuron.synapse_types.SynapseTypeSEMD.tau_syn_I"]], "abstractthresholdtype (class in spynnaker.pynn.models.neuron.threshold_types)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.AbstractThresholdType"]], "thresholdtypemaassstochastic (class in spynnaker.pynn.models.neuron.threshold_types)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic"]], "thresholdtypestatic (class in spynnaker.pynn.models.neuron.threshold_types)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeStatic"]], "add_parameters() (spynnaker.pynn.models.neuron.threshold_types.thresholdtypemaassstochastic method)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic.add_parameters"]], "add_parameters() (spynnaker.pynn.models.neuron.threshold_types.thresholdtypestatic method)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeStatic.add_parameters"]], "add_state_variables() (spynnaker.pynn.models.neuron.threshold_types.thresholdtypemaassstochastic method)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic.add_state_variables"]], "add_state_variables() (spynnaker.pynn.models.neuron.threshold_types.thresholdtypestatic method)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeStatic.add_state_variables"]], "du_th (spynnaker.pynn.models.neuron.threshold_types.thresholdtypemaassstochastic property)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic.du_th"]], "spynnaker.pynn.models.neuron.threshold_types": [[43, "module-spynnaker.pyNN.models.neuron.threshold_types"]], "tau_th (spynnaker.pynn.models.neuron.threshold_types.thresholdtypemaassstochastic property)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic.tau_th"]], "v_thresh (spynnaker.pynn.models.neuron.threshold_types.thresholdtypemaassstochastic property)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeMaassStochastic.v_thresh"]], "v_thresh (spynnaker.pynn.models.neuron.threshold_types.thresholdtypestatic property)": [[43, "spynnaker.pyNN.models.neuron.threshold_types.ThresholdTypeStatic.v_thresh"]], "assembly (class in spynnaker.pynn.models.populations)": [[44, "spynnaker.pyNN.models.populations.Assembly"]], "idmixin (class in spynnaker.pynn.models.populations)": [[44, "spynnaker.pyNN.models.populations.IDMixin"]], "population (class in spynnaker.pynn.models.populations)": [[44, "spynnaker.pyNN.models.populations.Population"]], "populationbase (class in spynnaker.pynn.models.populations)": [[44, "spynnaker.pyNN.models.populations.PopulationBase"]], "populationview (class in spynnaker.pynn.models.populations)": [[44, "spynnaker.pyNN.models.populations.PopulationView"]], "add_placement_constraint() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.add_placement_constraint"]], "all() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.all"]], "all() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.all"]], "all_cells (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.all_cells"]], "all_cells (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.all_cells"]], "all_cells (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.all_cells"]], "annotations (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.annotations"]], "as_view() (spynnaker.pynn.models.populations.idmixin method)": [[44, "spynnaker.pyNN.models.populations.IDMixin.as_view"]], "can_record() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.can_record"]], "can_record() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.can_record"]], "celltype (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.celltype"]], "celltype (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.celltype"]], "conductance_based (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.conductance_based"]], "conductance_based (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.conductance_based"]], "create() (spynnaker.pynn.models.populations.population static method)": [[44, "spynnaker.pyNN.models.populations.Population.create"]], "current_values (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.current_values"]], "current_values (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.current_values"]], "describe() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.describe"]], "describe() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.describe"]], "find_units() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.find_units"]], "find_units() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.find_units"]], "first_id (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.first_id"]], "get() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.get"]], "get() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.get"]], "getspikes() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.getSpikes"]], "get_data() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.get_data"]], "get_data() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.get_data"]], "get_data() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.get_data"]], "get_gsyn() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.get_gsyn"]], "get_initial_value() (spynnaker.pynn.models.populations.idmixin method)": [[44, "spynnaker.pyNN.models.populations.IDMixin.get_initial_value"]], "get_parameters() (spynnaker.pynn.models.populations.idmixin method)": [[44, "spynnaker.pyNN.models.populations.IDMixin.get_parameters"]], "get_spike_counts() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.get_spike_counts"]], "get_spike_counts() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.get_spike_counts"]], "get_spike_counts() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.get_spike_counts"]], "get_v() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.get_v"]], "grandparent (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.grandparent"]], "id (spynnaker.pynn.models.populations.idmixin property)": [[44, "spynnaker.pyNN.models.populations.IDMixin.id"]], "id_to_index() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.id_to_index"]], "id_to_index() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.id_to_index"]], "id_to_local_index() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.id_to_local_index"]], "index_in_grandparent() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.index_in_grandparent"]], "index_to_id() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.index_to_id"]], "initial_values (spynnaker.pynn.models.populations.idmixin property)": [[44, "spynnaker.pyNN.models.populations.IDMixin.initial_values"]], "initial_values (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.initial_values"]], "initial_values (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.initial_values"]], "initialize() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.initialize"]], "initialize() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.initialize"]], "inject() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.inject"]], "inject() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.inject"]], "inject() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.inject"]], "is_local() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.is_local"]], "label (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.label"]], "label (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.label"]], "last_id (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.last_id"]], "local (spynnaker.pynn.models.populations.idmixin property)": [[44, "spynnaker.pyNN.models.populations.IDMixin.local"]], "local_cells (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.local_cells"]], "local_size (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.local_size"]], "local_size (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.local_size"]], "mask (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.mask"]], "meanspikecount() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.meanSpikeCount"]], "mean_spike_count() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.mean_spike_count"]], "nearest() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.nearest"]], "parent (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.parent"]], "position_generator (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.position_generator"]], "position_generator (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.position_generator"]], "positions (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.positions"]], "positions (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.positions"]], "printspikes() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.printSpikes"]], "print_gsyn() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.print_gsyn"]], "print_v() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.print_v"]], "receptor_types() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.receptor_types"]], "record() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.record"]], "record() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.record"]], "record() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.record"]], "record_gsyn() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.record_gsyn"]], "record_v() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.record_v"]], "rset() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.rset"]], "sample() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.sample"]], "sample() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.sample"]], "save_positions() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.save_positions"]], "set() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.set"]], "set() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.set"]], "set_initial_value() (spynnaker.pynn.models.populations.idmixin method)": [[44, "spynnaker.pyNN.models.populations.IDMixin.set_initial_value"]], "set_max_atoms_per_core() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.set_max_atoms_per_core"]], "set_parameters() (spynnaker.pynn.models.populations.idmixin method)": [[44, "spynnaker.pyNN.models.populations.IDMixin.set_parameters"]], "set_state() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.set_state"]], "set_state() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.set_state"]], "size (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.size"]], "size (spynnaker.pynn.models.populations.populationview property)": [[44, "spynnaker.pyNN.models.populations.PopulationView.size"]], "spinnaker_get_data() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.spinnaker_get_data"]], "spinnaker_get_data() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.spinnaker_get_data"]], "spinnaker_get_spikes() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.spinnaker_get_spikes"]], "spynnaker.pynn.models.populations": [[44, "module-spynnaker.pyNN.models.populations"]], "structure (spynnaker.pynn.models.populations.population property)": [[44, "spynnaker.pyNN.models.populations.Population.structure"]], "structure (spynnaker.pynn.models.populations.populationbase property)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.structure"]], "tset() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.tset"]], "write_data() (spynnaker.pynn.models.populations.population method)": [[44, "spynnaker.pyNN.models.populations.Population.write_data"]], "write_data() (spynnaker.pynn.models.populations.populationbase method)": [[44, "spynnaker.pyNN.models.populations.PopulationBase.write_data"]], "write_data() (spynnaker.pynn.models.populations.populationview method)": [[44, "spynnaker.pyNN.models.populations.PopulationView.write_data"]], "expander_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.EXPANDER_REGION"]], "fast_rate_per_tick_cutoff (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.FAST_RATE_PER_TICK_CUTOFF"]], "poisson_params_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.POISSON_PARAMS_REGION"]], "profiler_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.PROFILER_REGION"]], "profile_tag_labels (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.PROFILE_TAG_LABELS"]], "provenance_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.PROVENANCE_REGION"]], "rates_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.RATES_REGION"]], "sdram_edge_params (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.SDRAM_EDGE_PARAMS"]], "seed_offset_bytes (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.SEED_OFFSET_BYTES"]], "seed_size_bytes (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.SEED_SIZE_BYTES"]], "slow_rate_per_tick_cutoff (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.SLOW_RATE_PER_TICK_CUTOFF"]], "spike_history_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.SPIKE_HISTORY_REGION"]], "spike_recording_region_id (spynnaker.pynn.models.spike_source.spikesourcearrayvertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.SPIKE_RECORDING_REGION_ID"]], "spike_recording_region_id (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.SPIKE_RECORDING_REGION_ID"]], "system_region (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.poisson_spike_source_regions attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS.SYSTEM_REGION"]], "spikesourcearray (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArray"]], "spikesourcearraymachinevertex (class in spynnaker.pynn.models.spike_source.spike_source_array_machine_vertex)": [[45, "spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex.SpikeSourceArrayMachineVertex"]], "spikesourcearrayvertex (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex"]], "spikesourcefromfile (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceFromFile"]], "spikesourcepoisson (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoisson"]], "spikesourcepoissonmachinevertex (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex"]], "spikesourcepoissonmachinevertex.extra_provenance_data_entries (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES"]], "spikesourcepoissonmachinevertex.poisson_spike_source_regions (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.POISSON_SPIKE_SOURCE_REGIONS"]], "spikesourcepoissonvariable (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVariable"]], "spikesourcepoissonvertex (class in spynnaker.pynn.models.spike_source)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex"]], "tdma_missed_slots (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex.extra_provenance_data_entries attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.TDMA_MISSED_SLOTS"]], "absolute_max_atoms_per_core (spynnaker.pynn.models.spike_source.spikesourcepoisson attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoisson.absolute_max_atoms_per_core"]], "absolute_max_atoms_per_core (spynnaker.pynn.models.spike_source.spikesourcepoissonvariable attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVariable.absolute_max_atoms_per_core"]], "add_outgoing_projection() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.add_outgoing_projection"]], "atoms_shape (spynnaker.pynn.models.spike_source.spikesourcearrayvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.atoms_shape"]], "atoms_shape (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.atoms_shape"]], "clear_spike_recording() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.clear_spike_recording"]], "create_machine_vertex() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.create_machine_vertex"]], "create_machine_vertex() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.create_machine_vertex"]], "create_vertex() (spynnaker.pynn.models.spike_source.spikesourcearray method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArray.create_vertex"]], "create_vertex() (spynnaker.pynn.models.spike_source.spikesourcepoisson method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoisson.create_vertex"]], "create_vertex() (spynnaker.pynn.models.spike_source.spikesourcepoissonvariable method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVariable.create_vertex"]], "data (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.data"]], "default_population_parameters (spynnaker.pynn.models.spike_source.spikesourcearray attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArray.default_population_parameters"]], "default_population_parameters (spynnaker.pynn.models.spike_source.spikesourcepoisson attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoisson.default_population_parameters"]], "default_population_parameters (spynnaker.pynn.models.spike_source.spikesourcepoissonvariable attribute)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVariable.default_population_parameters"]], "describe() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.describe"]], "describe() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.describe"]], "generate_data_specification() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.generate_data_specification"]], "get_binary_file_name() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_binary_file_name"]], "get_binary_start_type() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_binary_start_type"]], "get_buffer_data_type() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_buffer_data_type"]], "get_buffer_data_type() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_buffer_data_type"]], "get_data_type() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_data_type"]], "get_data_type() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_data_type"]], "get_n_keys_for_partition() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_n_keys_for_partition"]], "get_n_keys_for_partition() (spynnaker.pynn.models.spike_source.spike_source_array_machine_vertex.spikesourcearraymachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex.SpikeSourceArrayMachineVertex.get_n_keys_for_partition"]], "get_neurons_recording() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_neurons_recording"]], "get_neurons_recording() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_neurons_recording"]], "get_parameter_values() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_parameter_values"]], "get_parameter_values() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_parameter_values"]], "get_parameters() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_parameters"]], "get_parameters() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_parameters"]], "get_profile_data() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_profile_data"]], "get_recordable_variables() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_recordable_variables"]], "get_recordable_variables() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_recordable_variables"]], "get_recorded_region_ids() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_recorded_region_ids"]], "get_recording_region() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_recording_region"]], "get_recording_region() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_recording_region"]], "get_recording_region_base_address() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.get_recording_region_base_address"]], "get_recording_sdram_usage() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_recording_sdram_usage"]], "get_recording_variables() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_recording_variables"]], "get_recording_variables() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_recording_variables"]], "get_sampling_interval_ms() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_sampling_interval_ms"]], "get_sampling_interval_ms() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_sampling_interval_ms"]], "get_sdram_used_by_atoms() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_sdram_used_by_atoms"]], "get_units() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.get_units"]], "get_units() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.get_units"]], "incoming_control_edge (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.incoming_control_edge"]], "kiss_seed() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.kiss_seed"]], "max_n_rates (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.max_n_rates"]], "max_rate (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.max_rate"]], "max_spikes_per_second() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.max_spikes_per_second"]], "max_spikes_per_ts() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.max_spikes_per_ts"]], "max_spikes_per_ts() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.max_spikes_per_ts"]], "n_atoms (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.n_atoms"]], "n_colour_bits (spynnaker.pynn.models.spike_source.spikesourcearrayvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.n_colour_bits"]], "n_colour_bits (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.n_colour_bits"]], "n_profile_samples (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.n_profile_samples"]], "outgoing_projections (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.outgoing_projections"]], "parse_extra_provenance_items() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.parse_extra_provenance_items"]], "rates (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.rates"]], "read_parameters_from_machine() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.read_parameters_from_machine"]], "regenerate_data_specification() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.regenerate_data_specification"]], "reload_required() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.reload_required"]], "sdram_required (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.sdram_required"]], "sdram_requirement() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.sdram_requirement"]], "seed (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.seed"]], "set_live_poisson_control_edge() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.set_live_poisson_control_edge"]], "set_not_recording() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.set_not_recording"]], "set_not_recording() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.set_not_recording"]], "set_parameter_values() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.set_parameter_values"]], "set_parameter_values() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.set_parameter_values"]], "set_rate_changed() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.set_rate_changed"]], "set_recording() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.set_recording"]], "set_recording() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.set_recording"]], "set_reload_required() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.set_reload_required"]], "set_sdram_partition() (spynnaker.pynn.models.spike_source.spikesourcepoissonmachinevertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonMachineVertex.set_sdram_partition"]], "set_structure() (spynnaker.pynn.models.spike_source.spikesourcearrayvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceArrayVertex.set_structure"]], "set_structure() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.set_structure"]], "spike_times (spynnaker.pynn.models.spike_source.spikesourcefromfile property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourceFromFile.spike_times"]], "spynnaker.pynn.models.spike_source": [[45, "module-spynnaker.pyNN.models.spike_source"]], "spynnaker.pynn.models.spike_source.spike_source_array_machine_vertex": [[45, "module-spynnaker.pyNN.models.spike_source.spike_source_array_machine_vertex"]], "time_to_spike (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex property)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.time_to_spike"]], "update_kiss_seed() (spynnaker.pynn.models.spike_source.spikesourcepoissonvertex method)": [[45, "spynnaker.pyNN.models.spike_source.SpikeSourcePoissonVertex.update_kiss_seed"]], "spynnaker.pynn.models.utility_models": [[46, "module-spynnaker.pyNN.models.utility_models"]], "background_max_queued_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.BACKGROUND_MAX_QUEUED_NAME"]], "background_overloads_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.BACKGROUND_OVERLOADS_NAME"]], "count_saturation_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.COUNT_SATURATION_NAME"]], "delayed_for_traffic_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.DELAYED_FOR_TRAFFIC_NAME"]], "delayextensionmachinevertex (class in spynnaker.pynn.models.utility_models.delays)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex"]], "delayextensionmachinevertex.extra_provenance_data_entries (class in spynnaker.pynn.models.utility_models.delays)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES"]], "delayextensionvertex (class in spynnaker.pynn.models.utility_models.delays)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex"]], "input_buffer_lost_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.INPUT_BUFFER_LOST_NAME"]], "invalid_key_count_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.INVALID_KEY_COUNT_NAME"]], "invalid_neuron_id_count_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.INVALID_NEURON_ID_COUNT_NAME"]], "max_background_queued (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.MAX_BACKGROUND_QUEUED"]], "max_dtcm_available (spynnaker.pynn.models.utility_models.delays.delayextensionvertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.MAX_DTCM_AVAILABLE"]], "max_slots (spynnaker.pynn.models.utility_models.delays.delayextensionvertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.MAX_SLOTS"]], "mismatched_delay_per_stage_error_message (spynnaker.pynn.models.utility_models.delays.delayextensionvertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.MISMATCHED_DELAY_PER_STAGE_ERROR_MESSAGE"]], "mismatch_added_from_processed_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.MISMATCH_ADDED_FROM_PROCESSED_NAME"]], "n_background_overloads (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_BACKGROUND_OVERLOADS"]], "n_buffer_overflows (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_BUFFER_OVERFLOWS"]], "n_delays (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_DELAYS"]], "n_extra_provenance_data_entries (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.N_EXTRA_PROVENANCE_DATA_ENTRIES"]], "n_late_spikes (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_LATE_SPIKES"]], "n_late_spikes_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.N_LATE_SPIKES_NAME"]], "n_packets_added (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_ADDED"]], "n_packets_dropped_due_to_invalid_key (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_DROPPED_DUE_TO_INVALID_KEY"]], "n_packets_lost_due_to_count_saturation (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_LOST_DUE_TO_COUNT_SATURATION"]], "n_packets_processed (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_PROCESSED"]], "n_packets_processed_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.N_PACKETS_PROCESSED_NAME"]], "n_packets_received (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_RECEIVED"]], "n_packets_received_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.N_PACKETS_RECEIVED_NAME"]], "n_packets_sent (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_SENT"]], "n_packets_sent_name (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.N_PACKETS_SENT_NAME"]], "n_packets_with_invalid_neuron_ids (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex.extra_provenance_data_entries attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.EXTRA_PROVENANCE_DATA_ENTRIES.N_PACKETS_WITH_INVALID_NEURON_IDS"]], "safety_factor (spynnaker.pynn.models.utility_models.delays.delayextensionvertex attribute)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.SAFETY_FACTOR"]], "add_outgoing_edge() (spynnaker.pynn.models.utility_models.delays.delayextensionvertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.add_outgoing_edge"]], "delay_params_size() (spynnaker.pynn.models.utility_models.delays.delayextensionvertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.delay_params_size"]], "delay_per_stage (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.delay_per_stage"]], "drop_late_spikes (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.drop_late_spikes"]], "generate_data_specification() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.generate_data_specification"]], "get_binary_file_name() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.get_binary_file_name"]], "get_binary_start_type() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.get_binary_start_type"]], "get_max_delay_ticks_supported() (spynnaker.pynn.models.utility_models.delays.delayextensionvertex static method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.get_max_delay_ticks_supported"]], "get_n_keys_for_partition() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.get_n_keys_for_partition"]], "n_atoms (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.n_atoms"]], "n_colour_bits (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.n_colour_bits"]], "n_delay_stages (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.n_delay_stages"]], "outgoing_edges (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.outgoing_edges"]], "parse_extra_provenance_items() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.parse_extra_provenance_items"]], "partition (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.partition"]], "sdram_required (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.sdram_required"]], "set_new_n_delay_stages_and_delay_per_stage() (spynnaker.pynn.models.utility_models.delays.delayextensionvertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.set_new_n_delay_stages_and_delay_per_stage"]], "source_vertex (spynnaker.pynn.models.utility_models.delays.delayextensionvertex property)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionVertex.source_vertex"]], "spynnaker.pynn.models.utility_models.delays": [[47, "module-spynnaker.pyNN.models.utility_models.delays"]], "write_delay_parameters() (spynnaker.pynn.models.utility_models.delays.delayextensionmachinevertex method)": [[47, "spynnaker.pyNN.models.utility_models.delays.DelayExtensionMachineVertex.write_delay_parameters"]], "spike_recording_region_id (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex attribute)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.SPIKE_RECORDING_REGION_ID"]], "spikeinjector (class in spynnaker.pynn.models.utility_models.spike_injector)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.SpikeInjector"]], "spikeinjectorvertex (class in spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex"]], "create_vertex() (spynnaker.pynn.models.utility_models.spike_injector.spikeinjector method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.SpikeInjector.create_vertex"]], "default_parameters (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex attribute)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.default_parameters"]], "default_population_parameters (spynnaker.pynn.models.utility_models.spike_injector.spikeinjector attribute)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.SpikeInjector.default_population_parameters"]], "describe() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.describe"]], "get_buffer_data_type() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_buffer_data_type"]], "get_data_type() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_data_type"]], "get_neurons_recording() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_neurons_recording"]], "get_recordable_variables() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_recordable_variables"]], "get_recording_region() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_recording_region"]], "get_recording_variables() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_recording_variables"]], "get_sampling_interval_ms() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_sampling_interval_ms"]], "get_units() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.get_units"]], "set_not_recording() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.set_not_recording"]], "set_recording() (spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex.spikeinjectorvertex method)": [[48, "spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex.SpikeInjectorVertex.set_recording"]], "spynnaker.pynn.models.utility_models.spike_injector": [[48, "module-spynnaker.pyNN.models.utility_models.spike_injector"]], "spynnaker.pynn.models.utility_models.spike_injector.spike_injector_vertex": [[48, "module-spynnaker.pyNN.models.utility_models.spike_injector.spike_injector_vertex"]], "absolute_2_byte_timestamps (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.ABSOLUTE_2_BYTE_TIMESTAMPS"]], "absolute_3_byte_timestamps (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.ABSOLUTE_3_BYTE_TIMESTAMPS"]], "absolute_4_byte_timestamps (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.ABSOLUTE_4_BYTE_TIMESTAMPS"]], "ball_balancer (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.BALL_BALANCER"]], "delta_timestamps (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.DELTA_TIMESTAMPS"]], "downsample_16_x_16 (spynnaker.pynn.protocols.retinakey attribute)": [[49, "spynnaker.pyNN.protocols.RetinaKey.DOWNSAMPLE_16_X_16"]], "downsample_32_x_32 (spynnaker.pynn.protocols.retinakey attribute)": [[49, "spynnaker.pyNN.protocols.RetinaKey.DOWNSAMPLE_32_X_32"]], "downsample_64_x_64 (spynnaker.pynn.protocols.retinakey attribute)": [[49, "spynnaker.pyNN.protocols.RetinaKey.DOWNSAMPLE_64_X_64"]], "events_in_payload (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.EVENTS_IN_PAYLOAD"]], "fixed_key (spynnaker.pynn.protocols.retinakey attribute)": [[49, "spynnaker.pyNN.protocols.RetinaKey.FIXED_KEY"]], "free (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.FREE"]], "munich_modes (class in spynnaker.pynn.protocols)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES"]], "my_oro_botics (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.MY_ORO_BOTICS"]], "munichioethernetprotocol (class in spynnaker.pynn.protocols)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol"]], "munichiospinnakerlinkprotocol (class in spynnaker.pynn.protocols)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol"]], "native_128_x_128 (spynnaker.pynn.protocols.retinakey attribute)": [[49, "spynnaker.pyNN.protocols.RetinaKey.NATIVE_128_X_128"]], "no_payload (spynnaker.pynn.protocols.retinapayload attribute)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.NO_PAYLOAD"]], "push_bot (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.PUSH_BOT"]], "reset_to_default (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.RESET_TO_DEFAULT"]], "retinakey (class in spynnaker.pynn.protocols)": [[49, "spynnaker.pyNN.protocols.RetinaKey"]], "retinapayload (class in spynnaker.pynn.protocols)": [[49, "spynnaker.pyNN.protocols.RetinaPayload"]], "spomnibot (spynnaker.pynn.protocols.munich_modes attribute)": [[49, "spynnaker.pyNN.protocols.MUNICH_MODES.SPOMNIBOT"]], "add_payload_logic_to_current_output() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.add_payload_logic_to_current_output"]], "add_payload_logic_to_current_output_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.add_payload_logic_to_current_output_key"]], "bias_values() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.bias_values"]], "bias_values_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.bias_values_key"]], "bits_per_coordinate (spynnaker.pynn.protocols.retinakey property)": [[49, "spynnaker.pyNN.protocols.RetinaKey.bits_per_coordinate"]], "configure_master_key() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.configure_master_key"]], "configure_master_key_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.configure_master_key_key"]], "disable_motor() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.disable_motor"]], "disable_retina() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.disable_retina"]], "disable_retina() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.disable_retina"]], "disable_retina_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.disable_retina_key"]], "enable_disable_motor_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.enable_disable_motor_key"]], "enable_motor() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.enable_motor"]], "enable_retina() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.enable_retina"]], "generic_motor0_raw_output_leak_to_0() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor0_raw_output_leak_to_0"]], "generic_motor0_raw_output_leak_to_0_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor0_raw_output_leak_to_0_key"]], "generic_motor0_raw_output_permanent() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor0_raw_output_permanent"]], "generic_motor0_raw_output_permanent_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor0_raw_output_permanent_key"]], "generic_motor1_raw_output_leak_to_0() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor1_raw_output_leak_to_0"]], "generic_motor1_raw_output_leak_to_0_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor1_raw_output_leak_to_0_key"]], "generic_motor1_raw_output_permanent() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor1_raw_output_permanent"]], "generic_motor1_raw_output_permanent_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor1_raw_output_permanent_key"]], "generic_motor_disable() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor_disable"]], "generic_motor_enable() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor_enable"]], "generic_motor_total_period() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor_total_period"]], "generic_motor_total_period_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.generic_motor_total_period_key"]], "instance_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.instance_key"]], "laser_active_time() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.laser_active_time"]], "laser_frequency() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.laser_frequency"]], "laser_total_period() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.laser_total_period"]], "led_back_active_time() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.led_back_active_time"]], "led_frequency() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.led_frequency"]], "led_front_active_time() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.led_front_active_time"]], "led_total_period() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.led_total_period"]], "master_slave_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.master_slave_key"]], "master_slave_set_master_clock_active() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.master_slave_set_master_clock_active"]], "master_slave_set_master_clock_not_started() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.master_slave_set_master_clock_not_started"]], "master_slave_set_slave() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.master_slave_set_slave"]], "master_slave_use_internal_counter() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.master_slave_use_internal_counter"]], "mode (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.mode"]], "motor_0_leaky_velocity() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.motor_0_leaky_velocity"]], "motor_0_permanent_velocity() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.motor_0_permanent_velocity"]], "motor_1_leaky_velocity() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.motor_1_leaky_velocity"]], "motor_1_permanent_velocity() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.motor_1_permanent_velocity"]], "n_neurons (spynnaker.pynn.protocols.retinakey property)": [[49, "spynnaker.pyNN.protocols.RetinaKey.n_neurons"]], "n_payload_bytes (spynnaker.pynn.protocols.retinapayload property)": [[49, "spynnaker.pyNN.protocols.RetinaPayload.n_payload_bytes"]], "pixels (spynnaker.pynn.protocols.retinakey property)": [[49, "spynnaker.pyNN.protocols.RetinaKey.pixels"]], "poll_individual_sensor_continuously() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.poll_individual_sensor_continuously"]], "poll_individual_sensor_continuously_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.poll_individual_sensor_continuously_key"]], "poll_sensors_once() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.poll_sensors_once"]], "poll_sensors_once_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.poll_sensors_once_key"]], "protocol_instance (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol attribute)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.protocol_instance"]], "push_bot_laser_config_active_time() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_config_active_time"]], "push_bot_laser_config_active_time_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_config_active_time_key"]], "push_bot_laser_config_total_period() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_config_total_period"]], "push_bot_laser_config_total_period_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_config_total_period_key"]], "push_bot_laser_set_frequency() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_set_frequency"]], "push_bot_laser_set_frequency_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_laser_set_frequency_key"]], "push_bot_led_back_active_time() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_back_active_time"]], "push_bot_led_back_active_time_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_back_active_time_key"]], "push_bot_led_front_active_time() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_front_active_time"]], "push_bot_led_front_active_time_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_front_active_time_key"]], "push_bot_led_set_frequency() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_set_frequency"]], "push_bot_led_set_frequency_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_set_frequency_key"]], "push_bot_led_total_period() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_total_period"]], "push_bot_led_total_period_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_led_total_period_key"]], "push_bot_motor_0_leaking_towards_zero() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_0_leaking_towards_zero"]], "push_bot_motor_0_leaking_towards_zero_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_0_leaking_towards_zero_key"]], "push_bot_motor_0_permanent() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_0_permanent"]], "push_bot_motor_0_permanent_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_0_permanent_key"]], "push_bot_motor_1_leaking_towards_zero() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_1_leaking_towards_zero"]], "push_bot_motor_1_leaking_towards_zero_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_1_leaking_towards_zero_key"]], "push_bot_motor_1_permanent() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_1_permanent"]], "push_bot_motor_1_permanent_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_motor_1_permanent_key"]], "push_bot_speaker_config_active_time() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_config_active_time"]], "push_bot_speaker_config_active_time_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_config_active_time_key"]], "push_bot_speaker_config_total_period() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_config_total_period"]], "push_bot_speaker_config_total_period_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_config_total_period_key"]], "push_bot_speaker_set_melody() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_set_melody"]], "push_bot_speaker_set_melody_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_set_melody_key"]], "push_bot_speaker_set_tone() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_set_tone"]], "push_bot_speaker_set_tone_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.push_bot_speaker_set_tone_key"]], "pwm_pin_output_timer_a_channel_0_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_channel_0_ratio"]], "pwm_pin_output_timer_a_channel_0_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_channel_0_ratio_key"]], "pwm_pin_output_timer_a_channel_1_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_channel_1_ratio"]], "pwm_pin_output_timer_a_channel_1_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_channel_1_ratio_key"]], "pwm_pin_output_timer_a_duration() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_duration"]], "pwm_pin_output_timer_a_duration_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_a_duration_key"]], "pwm_pin_output_timer_b_channel_0_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_channel_0_ratio"]], "pwm_pin_output_timer_b_channel_0_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_channel_0_ratio_key"]], "pwm_pin_output_timer_b_channel_1_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_channel_1_ratio"]], "pwm_pin_output_timer_b_channel_1_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_channel_1_ratio_key"]], "pwm_pin_output_timer_b_duration() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_duration"]], "pwm_pin_output_timer_b_duration_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_b_duration_key"]], "pwm_pin_output_timer_c_channel_0_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_channel_0_ratio"]], "pwm_pin_output_timer_c_channel_0_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_channel_0_ratio_key"]], "pwm_pin_output_timer_c_channel_1_ratio() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_channel_1_ratio"]], "pwm_pin_output_timer_c_channel_1_ratio_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_channel_1_ratio_key"]], "pwm_pin_output_timer_c_duration() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_duration"]], "pwm_pin_output_timer_c_duration_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.pwm_pin_output_timer_c_duration_key"]], "query_state_of_io_lines() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.query_state_of_io_lines"]], "query_state_of_io_lines_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.query_state_of_io_lines_key"]], "remove_payload_logic_to_current_output() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.remove_payload_logic_to_current_output"]], "remove_payload_logic_to_current_output_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.remove_payload_logic_to_current_output_key"]], "reset_retina() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.reset_retina"]], "reset_retina_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.reset_retina_key"]], "sensor_transmission_key() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.sensor_transmission_key"]], "sent_mode_command() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.sent_mode_command"]], "set_mode() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_mode"]], "set_mode_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_mode_key"]], "set_output_pattern_for_payload() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_output_pattern_for_payload"]], "set_output_pattern_for_payload_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_output_pattern_for_payload_key"]], "set_payload_pins_to_high_impedance() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_payload_pins_to_high_impedance"]], "set_payload_pins_to_high_impedance_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_payload_pins_to_high_impedance_key"]], "set_retina_key() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_retina_key"]], "set_retina_key_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_retina_key_key"]], "set_retina_transmission() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.set_retina_transmission"]], "set_retina_transmission() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_retina_transmission"]], "set_retina_transmission_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.set_retina_transmission_key"]], "speaker_active_time() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.speaker_active_time"]], "speaker_frequency() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.speaker_frequency"]], "speaker_total_period() (spynnaker.pynn.protocols.munichioethernetprotocol static method)": [[49, "spynnaker.pyNN.protocols.MunichIoEthernetProtocol.speaker_total_period"]], "spynnaker.pynn.protocols": [[49, "module-spynnaker.pyNN.protocols"]], "turn_off_sensor_reporting() (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol method)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.turn_off_sensor_reporting"]], "turn_off_sensor_reporting_key (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.turn_off_sensor_reporting_key"]], "uart_id (spynnaker.pynn.protocols.munichiospinnakerlinkprotocol property)": [[49, "spynnaker.pyNN.protocols.MunichIoSpiNNakerLinkProtocol.uart_id"]], "bufferdatatype (class in spynnaker.pynn.utilities.buffer_data_type)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType"]], "datapopulation (class in spynnaker.pynn.utilities.data_population)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation"]], "eieio_spikes (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.EIEIO_SPIKES"]], "extracteddata (class in spynnaker.pynn.utilities.extracted_data)": [[50, "spynnaker.pyNN.utilities.extracted_data.ExtractedData"]], "filter_header_words (in module spynnaker.pynn.utilities.bit_field_utilities)": [[50, "spynnaker.pyNN.utilities.bit_field_utilities.FILTER_HEADER_WORDS"]], "fakehbpportalmachineprovider (class in spynnaker.pynn.utilities.fake_hbp_portal_machine_provider)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider"]], "global (spynnaker.pynn.utilities.struct.structrepeat attribute)": [[50, "spynnaker.pyNN.utilities.struct.StructRepeat.GLOBAL"]], "live_poisson_control_partition_id (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.LIVE_POISSON_CONTROL_PARTITION_ID"]], "matrix (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.MATRIX"]], "min_supported_delay (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.MIN_SUPPORTED_DELAY"]], "multi_spikes (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.MULTI_SPIKES"]], "neuron_spikes (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.NEURON_SPIKES"]], "not_neo (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.NOT_NEO"]], "neobufferdatabase (class in spynnaker.pynn.utilities.neo_buffer_database)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase"]], "neocsv (class in spynnaker.pynn.utilities.neo_csv)": [[50, "spynnaker.pyNN.utilities.neo_csv.NeoCsv"]], "out_spike_bytes (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.OUT_SPIKE_BYTES"]], "out_spike_size (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.OUT_SPIKE_SIZE"]], "per_neuron (spynnaker.pynn.utilities.struct.structrepeat attribute)": [[50, "spynnaker.pyNN.utilities.struct.StructRepeat.PER_NEURON"]], "pop_table_max_row_length (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.POP_TABLE_MAX_ROW_LENGTH"]], "rewires (spynnaker.pynn.utilities.buffer_data_type.bufferdatatype attribute)": [[50, "spynnaker.pyNN.utilities.buffer_data_type.BufferDataType.REWIRES"]], "runningstats (class in spynnaker.pynn.utilities.running_stats)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats"]], "spike_partition_id (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.SPIKE_PARTITION_ID"]], "synapse_sdram_partition_id (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.SYNAPSE_SDRAM_PARTITION_ID"]], "synaptic_row_header_words (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.SYNAPTIC_ROW_HEADER_WORDS"]], "struct (class in spynnaker.pynn.utilities.struct)": [[50, "spynnaker.pyNN.utilities.struct.Struct"]], "structrepeat (class in spynnaker.pynn.utilities.struct)": [[50, "spynnaker.pyNN.utilities.struct.StructRepeat"]], "write_bandwidth_bytes_per_second (in module spynnaker.pynn.utilities.constants)": [[50, "spynnaker.pyNN.utilities.constants.WRITE_BANDWIDTH_BYTES_PER_SECOND"]], "add_item() (spynnaker.pynn.utilities.running_stats.runningstats method)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.add_item"]], "add_items() (spynnaker.pynn.utilities.running_stats.runningstats method)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.add_items"]], "add_segment() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.add_segment"]], "array_to_string() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase static method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.array_to_string"]], "check_directory_exists_and_create_if_not() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.check_directory_exists_and_create_if_not"]], "clear_data() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.clear_data"]], "compare_analogsignal() (in module spynnaker.pynn.utilities.neo_compare)": [[50, "spynnaker.pyNN.utilities.neo_compare.compare_analogsignal"]], "compare_blocks() (in module spynnaker.pynn.utilities.neo_compare)": [[50, "spynnaker.pyNN.utilities.neo_compare.compare_blocks"]], "compare_segments() (in module spynnaker.pynn.utilities.neo_compare)": [[50, "spynnaker.pyNN.utilities.neo_compare.compare_segments"]], "compare_spiketrain() (in module spynnaker.pynn.utilities.neo_compare)": [[50, "spynnaker.pyNN.utilities.neo_compare.compare_spiketrain"]], "compare_spiketrains() (in module spynnaker.pynn.utilities.neo_compare)": [[50, "spynnaker.pyNN.utilities.neo_compare.compare_spiketrains"]], "convert_analog_signal() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_analog_signal"]], "convert_data() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_data"]], "convert_data_list() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_data_list"]], "convert_gsyn() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_gsyn"]], "convert_gsyn_exc_list() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_gsyn_exc_list"]], "convert_gsyn_inh_list() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_gsyn_inh_list"]], "convert_param_to_numpy() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.convert_param_to_numpy"]], "convert_spikes() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_spikes"]], "convert_spiketrains() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_spiketrains"]], "convert_to() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.convert_to"]], "convert_v_list() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.convert_v_list"]], "count_spikes() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.count_spikes"]], "count_spiketrains() (in module spynnaker.pynn.utilities.neo_convertor)": [[50, "spynnaker.pyNN.utilities.neo_convertor.count_spiketrains"]], "create() (spynnaker.pynn.utilities.fake_hbp_portal_machine_provider.fakehbpportalmachineprovider method)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider.create"]], "create_mars_kiss_seeds() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.create_mars_kiss_seeds"]], "csv_block_metadata() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.csv_block_metadata"]], "csv_segment() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.csv_segment"]], "describe() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.describe"]], "destroy() (spynnaker.pynn.utilities.fake_hbp_portal_machine_provider.fakehbpportalmachineprovider method)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider.destroy"]], "fields (spynnaker.pynn.utilities.struct.struct property)": [[50, "spynnaker.pyNN.utilities.struct.Struct.fields"]], "find_units() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.find_units"]], "get() (spynnaker.pynn.utilities.extracted_data.extracteddata method)": [[50, "spynnaker.pyNN.utilities.extracted_data.ExtractedData.get"]], "get_bitfield_key_map_data() (in module spynnaker.pynn.utilities.bit_field_utilities)": [[50, "spynnaker.pyNN.utilities.bit_field_utilities.get_bitfield_key_map_data"]], "get_data() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.get_data"]], "get_data() (spynnaker.pynn.utilities.struct.struct method)": [[50, "spynnaker.pyNN.utilities.struct.Struct.get_data"]], "get_empty_block() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_empty_block"]], "get_full_block() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_full_block"]], "get_generator_data() (spynnaker.pynn.utilities.struct.struct method)": [[50, "spynnaker.pyNN.utilities.struct.Struct.get_generator_data"]], "get_machine_info() (spynnaker.pynn.utilities.fake_hbp_portal_machine_provider.fakehbpportalmachineprovider method)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider.get_machine_info"]], "get_maximum_probable_value() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_maximum_probable_value"]], "get_mean() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_mean"]], "get_minimum_probable_value() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_minimum_probable_value"]], "get_n_bits() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_n_bits"]], "get_population() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_population"]], "get_population_metdadata() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_population_metdadata"]], "get_probability_within_range() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_probability_within_range"]], "get_probable_maximum_selected() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_probable_maximum_selected"]], "get_probable_minimum_selected() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_probable_minimum_selected"]], "get_recording_metadeta() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_recording_metadeta"]], "get_recording_populations() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_recording_populations"]], "get_recording_variables() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_recording_variables"]], "get_sdram_for_bit_field_region() (in module spynnaker.pynn.utilities.bit_field_utilities)": [[50, "spynnaker.pyNN.utilities.bit_field_utilities.get_sdram_for_bit_field_region"]], "get_sdram_for_keys() (in module spynnaker.pynn.utilities.bit_field_utilities)": [[50, "spynnaker.pyNN.utilities.bit_field_utilities.get_sdram_for_keys"]], "get_size_in_whole_words() (spynnaker.pynn.utilities.struct.struct method)": [[50, "spynnaker.pyNN.utilities.struct.Struct.get_size_in_whole_words"]], "get_spike_counts() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.get_spike_counts"]], "get_spike_counts() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.get_spike_counts"]], "get_standard_deviation() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_standard_deviation"]], "get_time_to_write_us() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_time_to_write_us"]], "get_variance() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.get_variance"]], "high() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.high"]], "id_to_index() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.id_to_index"]], "index_to_id() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.index_to_id"]], "is_generatable (spynnaker.pynn.utilities.struct.struct property)": [[50, "spynnaker.pyNN.utilities.struct.Struct.is_generatable"]], "label (spynnaker.pynn.utilities.data_population.datapopulation property)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.label"]], "local_size (spynnaker.pynn.utilities.data_population.datapopulation property)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.local_size"]], "low() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.low"]], "mean (spynnaker.pynn.utilities.running_stats.runningstats property)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.mean"]], "mean_spike_count() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.mean_spike_count"]], "moved_in_v6() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.moved_in_v6"]], "moved_in_v7() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.moved_in_v7"]], "moved_in_v7_warning() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.moved_in_v7_warning"]], "n_items (spynnaker.pynn.utilities.running_stats.runningstats property)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.n_items"]], "numpy_dtype (spynnaker.pynn.utilities.struct.struct property)": [[50, "spynnaker.pyNN.utilities.struct.Struct.numpy_dtype"]], "read_csv() (spynnaker.pynn.utilities.neo_csv.neocsv method)": [[50, "spynnaker.pyNN.utilities.neo_csv.NeoCsv.read_csv"]], "read_data() (spynnaker.pynn.utilities.struct.struct method)": [[50, "spynnaker.pyNN.utilities.struct.Struct.read_data"]], "read_in_data_from_file() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.read_in_data_from_file"]], "read_spikes_from_file() (in module spynnaker.pynn.utilities.utility_calls)": [[50, "spynnaker.pyNN.utilities.utility_calls.read_spikes_from_file"]], "repeat_type (spynnaker.pynn.utilities.struct.struct property)": [[50, "spynnaker.pyNN.utilities.struct.Struct.repeat_type"]], "set() (spynnaker.pynn.utilities.extracted_data.extracteddata method)": [[50, "spynnaker.pyNN.utilities.extracted_data.ExtractedData.set"]], "size (spynnaker.pynn.utilities.data_population.datapopulation property)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.size"]], "spinnaker_get_data() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.spinnaker_get_data"]], "spinnaker_get_data() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.spinnaker_get_data"]], "spynnaker.pynn.utilities": [[50, "module-spynnaker.pyNN.utilities"]], "spynnaker.pynn.utilities.bit_field_utilities": [[50, "module-spynnaker.pyNN.utilities.bit_field_utilities"]], "spynnaker.pynn.utilities.buffer_data_type": [[50, "module-spynnaker.pyNN.utilities.buffer_data_type"]], "spynnaker.pynn.utilities.constants": [[50, "module-spynnaker.pyNN.utilities.constants"]], "spynnaker.pynn.utilities.data_population": [[50, "module-spynnaker.pyNN.utilities.data_population"]], "spynnaker.pynn.utilities.extracted_data": [[50, "module-spynnaker.pyNN.utilities.extracted_data"]], "spynnaker.pynn.utilities.fake_hbp_portal_machine_provider": [[50, "module-spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider"]], "spynnaker.pynn.utilities.neo_buffer_database": [[50, "module-spynnaker.pyNN.utilities.neo_buffer_database"]], "spynnaker.pynn.utilities.neo_compare": [[50, "module-spynnaker.pyNN.utilities.neo_compare"]], "spynnaker.pynn.utilities.neo_convertor": [[50, "module-spynnaker.pyNN.utilities.neo_convertor"]], "spynnaker.pynn.utilities.neo_csv": [[50, "module-spynnaker.pyNN.utilities.neo_csv"]], "spynnaker.pynn.utilities.running_stats": [[50, "module-spynnaker.pyNN.utilities.running_stats"]], "spynnaker.pynn.utilities.struct": [[50, "module-spynnaker.pyNN.utilities.struct"]], "spynnaker.pynn.utilities.utility_calls": [[50, "module-spynnaker.pyNN.utilities.utility_calls"]], "standard_deviation (spynnaker.pynn.utilities.running_stats.runningstats property)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.standard_deviation"]], "string_to_array() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase static method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.string_to_array"]], "variance (spynnaker.pynn.utilities.running_stats.runningstats property)": [[50, "spynnaker.pyNN.utilities.running_stats.RunningStats.variance"]], "wait_till_not_ready() (spynnaker.pynn.utilities.fake_hbp_portal_machine_provider.fakehbpportalmachineprovider method)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider.wait_till_not_ready"]], "wait_until_ready() (spynnaker.pynn.utilities.fake_hbp_portal_machine_provider.fakehbpportalmachineprovider method)": [[50, "spynnaker.pyNN.utilities.fake_HBP_Portal_machine_provider.FakeHBPPortalMachineProvider.wait_until_ready"]], "write_bitfield_init_data() (in module spynnaker.pynn.utilities.bit_field_utilities)": [[50, "spynnaker.pyNN.utilities.bit_field_utilities.write_bitfield_init_data"]], "write_data() (spynnaker.pynn.utilities.data_population.datapopulation method)": [[50, "spynnaker.pyNN.utilities.data_population.DataPopulation.write_data"]], "write_metadata() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.write_metadata"]], "write_segment_metadata() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.write_segment_metadata"]], "write_t_stop() (spynnaker.pynn.utilities.neo_buffer_database.neobufferdatabase method)": [[50, "spynnaker.pyNN.utilities.neo_buffer_database.NeoBufferDatabase.write_t_stop"]], "abstractrandomstats (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats"]], "randomstatsbinomialimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl"]], "randomstatsexponentialimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl"]], "randomstatsgammaimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl"]], "randomstatslognormalimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl"]], "randomstatsnormalclippedimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl"]], "randomstatsnormalimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl"]], "randomstatspoissonimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl"]], "randomstatsrandintimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl"]], "randomstatsscipyimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl"]], "randomstatsuniformimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl"]], "randomstatsvonmisesimpl (class in spynnaker.pynn.utilities.random_stats)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl"]], "cdf() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.cdf"]], "cdf() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.cdf"]], "high() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.high"]], "high() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.high"]], "low() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.low"]], "low() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.low"]], "mean() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.mean"]], "mean() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.mean"]], "ppf() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.ppf"]], "ppf() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.ppf"]], "spynnaker.pynn.utilities.random_stats": [[51, "module-spynnaker.pyNN.utilities.random_stats"]], "std() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.std"]], "std() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.std"]], "var() (spynnaker.pynn.utilities.random_stats.abstractrandomstats method)": [[51, "spynnaker.pyNN.utilities.random_stats.AbstractRandomStats.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsbinomialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsBinomialImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsexponentialimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsExponentialImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsgammaimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsGammaImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatslognormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsLogNormalImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsnormalclippedimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalClippedImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsnormalimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsNormalImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatspoissonimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsPoissonImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsrandintimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsRandIntImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsscipyimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsScipyImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsuniformimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsUniformImpl.var"]], "var() (spynnaker.pynn.utilities.random_stats.randomstatsvonmisesimpl method)": [[51, "spynnaker.pyNN.utilities.random_stats.RandomStatsVonmisesImpl.var"]], "spynnakerrangedlist (class in spynnaker.pynn.utilities.ranged)": [[52, "spynnaker.pyNN.utilities.ranged.SpynnakerRangedList"]], "as_list() (spynnaker.pynn.utilities.ranged.spynnakerrangedlist static method)": [[52, "spynnaker.pyNN.utilities.ranged.SpynnakerRangedList.as_list"]], "is_list() (spynnaker.pynn.utilities.ranged.spynnakerrangedlist static method)": [[52, "spynnaker.pyNN.utilities.ranged.SpynnakerRangedList.is_list"]], "spynnaker.pynn.utilities.ranged": [[52, "module-spynnaker.pyNN.utilities.ranged"]]}})