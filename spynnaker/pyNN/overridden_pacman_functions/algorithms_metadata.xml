<!--
# Copyright (c) 2017-2019 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<algorithms xmlns="https://github.com/SpiNNakerManchester/PACMAN"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="https://github.com/SpiNNakerManchester/PACMAN
            https://raw.githubusercontent.com/SpiNNakerManchester/PACMAN/master/pacman/operations/algorithms_metadata_schema.xsd">
    <algorithm name="GraphEdgeFilter">
        <python_module>spynnaker.pyNN.overridden_pacman_functions.graph_edge_filter</python_module>
        <python_class>GraphEdgeFilter</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>graph_mapper</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryMachineGraph</param_type>
            <param_type>MemoryGraphMapper</param_type>
            <token>EdgesFiltered</token>
        </outputs>
    </algorithm>
    <algorithm name="GraphEdgeWeightUpdater">
        <python_module>spynnaker.pyNN.overridden_pacman_functions.graph_edge_weight_updater</python_module>
        <python_class>GraphEdgeWeightUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>graph_mapper</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryMachineGraph</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerDataSpecificationWriter">
        <python_module>spynnaker.pyNN.overridden_pacman_functions.spynnaker_data_specification_writer</python_module>
        <python_class>SpynnakerDataSpecificationWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_default_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>data_n_timesteps</param_name>
                <param_type>DataNTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>graph_mapper</param_name>
                <param_type>MemoryGraphMapper</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_default_directory</param_name>
            <param_name>write_text_specs</param_name>
            <param_name>machine</param_name>
            <param_name>data_n_timesteps</param_name>
        </required_inputs>
        <optional_inputs>
            <param_name>graph_mapper</param_name>
        </optional_inputs>
        <outputs>
            <param_type>DataSpecificationTargets</param_type>
            <param_type>RegionSizes</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SynapticMatrixReport">
        <python_module>spynnaker.pyNN.utilities.spynnaker_synaptic_matrix_report</python_module>
        <python_class>SpYNNakerSynapticMatrixReport</python_class>
        <input_definitions>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>connection_holder</param_name>
                <param_type>ConnectionHolders</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_folder</param_name>
            <param_name>connection_holder</param_name>
            <param_name>dsg_targets</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="SpYNNakerConnectionHolderGenerator">
        <python_module>spynnaker.pyNN.utilities.spynnaker_connection_holder_generations</python_module>
        <python_class>SpYNNakerConnectionHolderGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>application_graph</param_name>
        </required_inputs>
        <outputs>
            <param_type>ConnectionHolders</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpYNNakerNeuronGraphNetworkSpecificationReport">
        <python_module>spynnaker.pyNN.utilities.spynnaker_neuron_network_specification_report</python_module>
        <python_class>SpYNNakerNeuronGraphNetworkSpecificationReport</python_class>
        <input_definitions>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_folder</param_name>
            <param_name>application_graph</param_name>
        </required_inputs>
    </algorithm>
</algorithms>