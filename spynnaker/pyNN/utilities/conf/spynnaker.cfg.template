# Please change the settings below to appropriate values
# If you want to access more settings, please look in the pacman103/pacman.cfg
# file for details.  Settings from that file can be copied and change here.

[Machine]
#-------
# Information about the target SpiNNaker board or machine:
# machineName:        The name or IP address of the target board
# version:            Version of the Spinnaker Hardware Board (1-5)
# down_chips:         A list of chips that don't work, as x,y separated by :
# down_cores:         A list of cores that don't work, as x,y,p separated by :
# bmp_names:          A list of connected BMP IP addresses, separated by :
# auto_detect_bmp:    True if the BMP IP address should be computed from the
#                          machine IP address, False if no BMP should be used if
#                          not specified
# turn_off_machine:   True if the machine should be turned off after simulation
# machineTimeStep:    Internal time step in simulations in usecs.
# timeScaleFactor:    Change this to slow down the simulation time
#                         relative to real time.
# enable_reinjection: True if reinjection of dropped packets should be enabled.
#                     Note that reinjection currently uses an additional core,
#                     so it can be disabled here to free up cores.
#-------
machineName       = None
version           = None
#down_cores       = None
#down_chips       = None
#bmp_names        = None
#auto_detect_bmp  = False
#turn_off_machine = False
#machineTimeStep  = 1000
#timeScaleFactor  = 1
#enable_reinjection = True

[Database]
#---------
# This controls the generation of a database, which can be used by external
# programs, e.g. visualisations of simulations
# create_database: Whether to create the database.  If this is False, the other
#                  parameters are ignored.
# wait_on_configuration: Allows an external program to communicate with
#                        sPyNNaker so it knows when the database is ready,
#                        and then waits for the external program to tell
#                        sPyNNaker when it is ready.
# create_routing_info_to_neuron_id_mapping: If true, the database will include
#                                           a map of routing key to population-
#                                           based neuron id.
# send_start_notification: If true, the database notification connection will
#                          send an additional message just after starting
#--------
#create_database = False
#wait_on_confirmation = True
#create_routing_info_to_neuron_id_mapping = True
#send_start_notification = True


[Simulation]
# Estimated maximum spikes per second of any neuron (spike rate in Hertz)
#spikes_per_second = 30

# The number of standard deviations from the mean to account for in
# the ring buffer
#ring_buffer_sigma = 5


[Buffers]
# Host and port on which to receive buffer requests
#receive_buffer_port = None
#receive_buffer_host = 0.0.0.0

# Buffered recording can be enabled below.  Note that spike source array
# recording is always buffered.
#enable_buffered_recording = False

# These values can be adjusted to set the maximum amount of SDRAM per core
# that will be used for the various neuron parameters to be recorded.  This
# will affect how many neurons can fit on a chip.
#spike_buffer_size = 1048576
#v_buffer_size = 1048576
#gsyn_buffer_size = 2097152
