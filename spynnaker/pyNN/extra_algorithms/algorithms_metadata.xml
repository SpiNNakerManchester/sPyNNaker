<!--
# Copyright (c) 2017-2019 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<algorithms xmlns="https://github.com/SpiNNakerManchester/PACMAN"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="https://github.com/SpiNNakerManchester/PACMAN
			https://raw.githubusercontent.com/SpiNNakerManchester/PACMAN/master/pacman/operations/algorithms_metadata_schema.xsd">
    <algorithm name="DelaySupportAdder">
        <python_module>spynnaker.pyNN.extra_algorithms.delay_support_adder</python_module>
        <python_class>DelaySupportAdder</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>user_max_delay</param_name>
                <param_type>UserDefinedMaxDelay</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_graph</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>user_max_delay</param_name>
            <token part="MAIN">SplitterObjectsAllocated</token>
        </required_inputs>
        <outputs>
            <token part="DELAYS">SplitterObjectsAllocated</token>
        </outputs>
    </algorithm>
    <algorithm name="SynapseExpander">
        <python_module>spynnaker.pyNN.extra_algorithms.synapse_expander</python_module>
        <python_function>synapse_expander</python_function>
        <input_definitions>
           <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>extract_iobuf</param_name>
                <param_type>SynapticExpanderReadIOBuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>extract_iobuf</param_name>
            <param_name>placements</param_name>
            <param_name>transceiver</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>executable_finder</param_name>
            <token part="DSGDataLoaded">DataLoaded</token>
        </required_inputs>
        <outputs>
            <token part="SynapseDataExpanded">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerMachineBitFieldOrderedCoveringCompressor">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_machine_bit_field_router_compressor</python_module>
        <python_class>SpynnakerMachineBitFieldOrderedCoveringCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>read_expander_iobuf</param_name>
                <param_type>SynapticExpanderReadIOBuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>read_expander_iobuf</param_name>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerMachineBitFieldUnorderedRouterCompressor">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_machine_bit_field_router_compressor</python_module>
        <!-- DEPRECATED Use SpynnakerMachineBitFieldOrderedCoveringCompressor !-->
        <python_class>SpynnakerMachineBitFieldUnorderedRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>read_expander_iobuf</param_name>
                <param_type>SynapticExpanderReadIOBuf</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>read_expander_iobuf</param_name>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerMachineBitFieldPairRouterCompressor">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_machine_bit_field_router_compressor</python_module>
        <python_class>SpynnakerMachineBitFieldPairRouterCompressor</python_class>
        <input_definitions>
            <parameter>
                <param_name>read_expander_iobuf</param_name>
                <param_type>SynapticExpanderReadIOBuf</param_type>
            </parameter>
            <parameter>
                <param_name>routing_tables</param_name>
                <param_type>MemoryRoutingTables</param_type>
            </parameter>
            <parameter>
                <param_name>executable_targets</param_name>
                <param_type>ExecutableTargets</param_type>
            </parameter>
            <parameter>
                <param_name>threshold_percentage</param_name>
                <param_type>RouterCompressorBitFieldPercentageThreshold</param_type>
            </parameter>
            <parameter>
                <param_name>retry_count</param_name>
                <param_type>RouterCompressorBitFieldRetryCount</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>app_id</param_name>
                <param_type>APPID</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>compress_as_much_as_possible</param_name>
                <param_type>CompressionAsFarAsPos</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>write_compressor_iobuf</param_name>
                <param_type>WriteCompressorIobuf</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>produce_report</param_name>
                <param_type>RouterBitfieldCompressionReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>target_length</param_name>
                <param_type>CompressionTargetSize</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>time_to_try_for_each_iteration</param_name>
                <param_type>RouterCompressorBitFieldTimePerAttempt</param_type>
            </parameter>
            <parameter>
                <param_name>use_timer_cut_off</param_name>
                <param_type>RouterCompressorBitFieldUseCutOff</param_type>
            </parameter>
            <parameter>
                <param_name>machine_time_step</param_name>
                <param_type>MachineTimeStep</param_type>
            </parameter>
            <parameter>
                <param_name>time_scale_factor</param_name>
                <param_type>TimeScaleFactor</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_data_objects</param_name>
                <param_type>RouterCompressorProvenanceItems</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>executable_finder</param_name>
            <param_name>write_compressor_iobuf</param_name>
            <param_name>routing_tables</param_name>
            <param_name>transceiver</param_name>
            <param_name>machine</param_name>
            <param_name>app_id</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>machine_graph</param_name>
            <param_name>placements</param_name>
            <param_name>produce_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>target_length</param_name>
            <param_name>routing_infos</param_name>
            <param_name>threshold_percentage</param_name>
            <param_name>retry_count</param_name>
            <param_name>time_to_try_for_each_iteration</param_name>
            <param_name>use_timer_cut_off</param_name>
            <param_name>machine_time_step</param_name>
            <param_name>time_scale_factor</param_name>
            <param_name>executable_targets</param_name>
            <param_name>read_expander_iobuf</param_name>
            <token part="BitFieldData">DataLoaded</token>
        </required_inputs>
        <optional_inputs>
            <param_name>compress_as_much_as_possible</param_name>
            <param_name>provenance_data_objects</param_name>
        </optional_inputs>
        <outputs>
            <token part="MulticastRoutesLoaded">DataLoaded</token>
            <param_type>RouterCompressorProvenanceItems</param_type>
        </outputs>
    </algorithm>
    <algorithm name="OnChipBitFieldGenerator">
        <python_module>spynnaker.pyNN.extra_algorithms.on_chip_bit_field_generator</python_module>
        <python_class>OnChipBitFieldGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>executable_finder</param_name>
                <param_type>ExecutableFinder</param_type>
            </parameter>
            <parameter>
                <param_name>provenance_file_path</param_name>
                <param_type>SystemProvenanceFilePath</param_type>
            </parameter>
            <parameter>
                <param_name>transceiver</param_name>
                <param_type>MemoryTransceiver</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>write_bit_field_generator_iobuf</param_name>
                <param_type>WriteBitFieldGeneratorIOBUF</param_type>
            </parameter>
            <parameter>
                <param_name>generating_bitfield_report</param_name>
                <param_type>GenerateBitFieldReport</param_type>
            </parameter>
            <parameter>
                <param_name>default_report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>routing_infos</param_name>
                <param_type>MemoryRoutingInfos</param_type>
            </parameter>
            <parameter>
                <param_name>generating_bit_field_summary_report</param_name>
                <param_type>GenerateBitFieldSummaryReport</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_graph</param_name>
            <param_name>placements</param_name>
            <param_name>executable_finder</param_name>
            <param_name>provenance_file_path</param_name>
            <param_name>transceiver</param_name>
            <param_name>write_bit_field_generator_iobuf</param_name>
            <param_name>generating_bitfield_report</param_name>
            <param_name>generating_bit_field_summary_report</param_name>
            <param_name>default_report_folder</param_name>
            <param_name>machine_graph</param_name>
            <param_name>routing_infos</param_name>
            <token part="SynapseDataExpanded">DataLoaded</token>
        </required_inputs>
        <outputs>
            <token part="BitFieldData">DataLoaded</token>
        </outputs>
    </algorithm>
    <algorithm name="GraphEdgeWeightUpdater">
        <python_module>spynnaker.pyNN.extra_algorithms.graph_edge_weight_updater</python_module>
        <python_class>GraphEdgeWeightUpdater</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryMachineGraph</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerDataSpecificationWriter">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_data_specification_writer</python_module>
        <python_class>SpynnakerDataSpecificationWriter</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>hostname</param_name>
                <param_type>IPAddress</param_type>
            </parameter>
            <parameter>
                <param_name>report_default_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>write_text_specs</param_name>
                <param_type>WriteTextSpecsFlag</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>data_n_timesteps</param_name>
                <param_type>DataNTimeSteps</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>hostname</param_name>
            <param_name>report_default_directory</param_name>
            <param_name>write_text_specs</param_name>
            <param_name>machine</param_name>
            <param_name>data_n_timesteps</param_name>
        </required_inputs>
        <outputs>
            <param_type>DataSpecificationTargets</param_type>
            <param_type>RegionSizes</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SynapticMatrixReport">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_synaptic_matrix_report</python_module>
        <python_class>SpYNNakerSynapticMatrixReport</python_class>
        <input_definitions>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>connection_holder</param_name>
                <param_type>ConnectionHolders</param_type>
            </parameter>
            <parameter>
                <param_name>dsg_targets</param_name>
                <param_type>DataSpecificationTargets</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_folder</param_name>
            <param_name>connection_holder</param_name>
            <param_name>dsg_targets</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="RedundantPacketCountReport">
        <python_module>spynnaker.pyNN.extra_algorithms.redundant_packet_count_report</python_module>
        <python_class>RedundantPacketCountReport</python_class>
        <input_definitions>
            <parameter>
                <param_name>provenance_items</param_name>
                <param_type>PlacementsProvenanceItems</param_type>
            </parameter>
            <parameter>
                <param_name>report_default_directory</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_default_directory</param_name>
            <param_name>provenance_items</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="SpYNNakerConnectionHolderGenerator">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_connection_holder_generations</python_module>
        <python_class>SpYNNakerConnectionHolderGenerator</python_class>
        <input_definitions>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>application_graph</param_name>
        </required_inputs>
        <outputs>
            <param_type>ConnectionHolders</param_type>
        </outputs>
    </algorithm>
    <algorithm name="SpYNNakerNeuronGraphNetworkSpecificationReport">
        <python_module>spynnaker.pyNN.extra_algorithms.spynnaker_neuron_network_specification_report</python_module>
        <python_class>SpYNNakerNeuronGraphNetworkSpecificationReport</python_class>
        <input_definitions>
            <parameter>
                <param_name>report_folder</param_name>
                <param_type>ReportFolder</param_type>
            </parameter>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>report_folder</param_name>
            <param_name>application_graph</param_name>
        </required_inputs>
    </algorithm>
    <algorithm name="SpYNNakerSplitterPartitioner">
        <python_module>spynnaker.pyNN.extra_algorithms.splitter_components.spynnaker_splitter_partitioner</python_module>
        <python_class>SpynnakerSplitterPartitioner</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryVirtualMachine</param_type>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>plan_n_time_steps</param_name>
                <param_type>PlanNTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>pre_allocated_resources</param_name>
                <param_type>MemoryPreAllocatedResources</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_graph</param_name>
            <param_name>machine</param_name>
            <param_name>plan_n_time_steps</param_name>
            <token>SplitterObjectsAllocated</token>
        </required_inputs>
        <optional_inputs>
            <token>GeneratedPreAllocatedResources</token>
            <param_name>pre_allocated_resources</param_name>
        </optional_inputs>
        <outputs>
            <param_type>MemoryMachineGraph</param_type>
            <param_type>NChipsRequired</param_type>
            <token>PartitioningDone</token>
        </outputs>
    </algorithm>
    <algorithm name="SpynnakerSplitterSelector">
        <python_module>spynnaker.pyNN.extra_algorithms.splitter_components.spynnaker_splitter_selector</python_module>
        <python_class>SpynnakerSplitterSelector</python_class>
        <input_definitions>
            <parameter>
                <param_name>app_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>app_graph</param_name>
        </required_inputs>
        <outputs>
            <token part="MAIN">SplitterObjectsAllocated</token>
        </outputs>
    </algorithm>
    <algorithm name="FinishConnectionHolders">
        <python_module>spynnaker.pyNN.extra_algorithms.connection_holder_finisher</python_module>
        <python_function>finish_connection_holders</python_function>
        <input_definitions>
            <parameter>
                <param_name>application_graph</param_name>
                <param_type>MemoryApplicationGraph</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <token>DataLoaded</token>
            <param_name>application_graph</param_name>
        </required_inputs>
    </algorithm>
</algorithms>