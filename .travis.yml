# Copyright (c) 2017-2019 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

language: python
jobs:
  include:
    - name: Py3.6 (and doc deploy)
      python: 3.6
      env:
        - DEPLOY_DIR=$PWD/deploy
        - ROOT_DOC_DIR=$PWD/doc/global
        - C_DOC_DIR=$PWD/neural_modelling/html
        - PY_DOC_DIR=$PWD/doc/source/_build/html
    - name: Py3.7
      python: 3.7
    - name: Py3.8
      python: 3.8
    - name: Py2.7 (legacy)
      python: 2.7
dist: focal
cache: pip
addons:
  apt:
    packages:
      - vera++
      - libxml2-utils
      - gcc-arm-none-eabi
      - libnewlib-arm-none-eabi
      - openjdk-8-jre-headless
      - ant
      - doxygen

before_install:
  # Work around weird installation/configuration issue with matplotlib
  - export MPLBACKEND=module://matplotlib.backends.backend_agg
  # Work around ludicrous Travis bug
  - git clone https://github.com/SpiNNakerManchester/SupportScripts.git support
  - python support/travis_blocking_stdout.py
  - support/rat.sh download
  # Bring pip up to date
  - pip install --upgrade pip setuptools wheel
  - pip install --only-binary=numpy,scipy,matplotlib numpy scipy matplotlib
  # SpiNNakerManchester internal dependencies; development mode
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/SpiNNUtils.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/SpiNNMachine.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/SpiNNMan.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/PACMAN.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/DataSpecification.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/spalloc.git
  - support/pipinstall.sh git://github.com/SpiNNakerManchester/SpiNNFrontEndCommon.git
  # C dependencies
  - support/gitclone.sh https://github.com/SpiNNakerManchester/spinnaker_tools.git
  - support/gitclone.sh https://github.com/SpiNNakerManchester/spinn_common.git
  - support/gitclone.sh https://github.com/SpiNNakerManchester/SpiNNFrontEndCommon.git
  - export SPINN_DIRS=$PWD/spinnaker_tools
  - export NEURAL_MODELLING_DIRS=$PWD/neural_modelling

install:
  - pip install -r requirements-test.txt
  - pip install 'pylint<2.5' python-coveralls 'coverage>=4.4,<5.0'
  - python ./setup.py install

before_script:
  # Initialise builds against spinnaker_tools
  - make -C $SPINN_DIRS
  - make -C spinn_common install
  - make -C SpiNNFrontEndCommon/c_common install
  # Load the tag files for doc builds
  - make -C $NEURAL_MODELLING_DIRS doxysetup
  # Make a test config
  - echo '[Machine]' > ~/.spynnaker.cfg
  - echo "machineName = $SPINNAKER_BOARD_ADDRESS" >> ~/.spynnaker.cfg
  - echo "version = ${SPINNAKER_BOARD_VERSION:-5}" >> ~/.spynnaker.cfg
  - echo '[Database]' >> ~/.spynnaker.cfg
  - echo '[Simulation]' >> ~/.spynnaker.cfg
  - echo '[Buffers]' >> ~/.spynnaker.cfg

script:
  # Python
  - py.test --cov-report= unittests --cov spynnaker
  - flake8 spynnaker
  - flake8 unittests
  - >
    ( pylint --output-format=colorized --disable=R,C spynnaker; exit $(($? & 35)) )
  # XML
  - find spynnaker -name '*.xml' | xargs -n 1 support/validate-xml.sh
  # C
  - CFLAGS=-fdiagnostics-color make -C neural_modelling
  - support/run-vera.sh neural_modelling/src
  # Copyright check
  - support/rat.sh run
  # Docs
  - support/travis-sphinx.sh html -T -E -b html -d _build/doctrees-readthedocsdirhtml -D language=en . _build/html
  - support/travis-sphinx.sh json -T -b json -d _build/doctrees-json -D language=en . _build/json
  - support/travis-sphinx.sh singlehtml -T -b singlehtml -d _build/doctrees-readthedocssinglehtmllocalmedia -D language=en . _build/localmedia
  - make -C $NEURAL_MODELLING_DIRS doxygen

after_success:
  - >
    ( cd $TRAVIS_BUILD_DIR && exec coveralls )

before_deploy:
  # Merge the doc trees
  - >
    [ -d $ROOT_DOC_DIR ] && cp -vaT $ROOT_DOC_DIR $DEPLOY_DIR
  - >
    [ -d $C_DOC_DIR ] && cp -vaT $C_DOC_DIR $DEPLOY_DIR/c
  - >
    [ -d $PY_DOC_DIR ] && cp -vaT $PY_DOC_DIR $DEPLOY_DIR/python
after_deploy:
  - rm -rf $DEPLOY_DIR
deploy:
  provider: pages
  skip_cleanup: true
  keep_history: true
  # Inject magic environment variable from Travis Job Configuration page
  token: $GITHUB_TOKEN
  local_dir: $DEPLOY_DIR
  on:
    branch:
      - master
    python: 3.6
    # Only enable deployment if we actually have supplied a token
    condition: -n "$GITHUB_TOKEN"
